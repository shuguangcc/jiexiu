import{C as b,i as f,e as o,y as p,n as S}from"./cast-a534ae90.js";import{U as g}from"./request-24011425.js";import{T as w}from"./TimeExtent-2004eecf.js";import{a as v}from"./Error-57322e92.js";import{a as I}from"./HandleOwner-2edbba46.js";import{n as $}from"./loadAll-01cdf0a9.js";import{r as O}from"./typedArrayUtil-d9bc5fbd.js";import{O as E}from"./MultiOriginJSONSupport-b8792dfa.js";import{w as T,j as M}from"./promiseUtils-32d9c228.js";import{T as L}from"./ensureType-25b8cc06.js";import{a as P,o as j,r as N}from"./Extent-a1a1de42.js";import{i as R}from"./scaleUtils-c3568f87.js";import{b as U}from"./Layer-cea228f0.js";import{i as F}from"./APIKeyMixin-b6e4f897.js";import{E as J,y as q,z as A}from"./SublayersOwner-d52cbbef.js";import{p as k}from"./ArcGISService-aada3b5d.js";import{n as _}from"./BlendLayer-813950f9.js";import{o as z}from"./CustomParametersMixin-a5d06ccc.js";import{c as V,f as B}from"./OperationalLayer-9c50475b.js";import{v as C}from"./PortalLayer-12f4a535.js";import{p as D}from"./RefreshableLayer-49182ab8.js";import{t as G}from"./ScaleRangeLayer-c072e266.js";import{a as H}from"./TemporalLayer-c74d13d4.js";import{c as K}from"./ExportImageParameters-ba01802d.js";import{n as x}from"./sublayerUtils-eea48c01.js";import{e as W}from"./versionUtils-fabd8b3a.js";import"./string-480f3e3f.js";import"./nextTick-3ee5a785.js";import"./preload-helper-41c905a7.js";import"./reactiveUtils-5869e41a.js";import"./asyncUtils-087555fc.js";import"./Collection-7c37b74e.js";import"./Evented-cbf5f368.js";import"./SimpleObservable-8e532943.js";import"./Loadable-46524a7e.js";import"./Promise-368b703a.js";import"./unitUtils-dd6fb8ee.js";import"./jsonMap-190c5593.js";import"./geometry-eec1b371.js";import"./Polyline-b571c705.js";import"./typeUtils-cd52dc20.js";import"./Identifiable-093f90a8.js";import"./Version-b16872d5.js";import"./CollectionFlattener-f43a0fce.js";import"./PopupTemplate-f97bb051.js";import"./Clonable-9b34e760.js";import"./fieldUtils-b2df74c4.js";import"./arcadeOnDemand-a976a73c.js";import"./enumeration-61a13175.js";import"./number-2ab8ca0d.js";import"./locale-30120714.js";import"./UniqueValueRenderer-73d567ad.js";import"./symbols-9fcb6cc2.js";import"./CIMSymbol-72a9d286.js";import"./Symbol-8266348e.js";import"./Color-af6e0c66.js";import"./colorUtils-639f4d25.js";import"./mathUtils-57aba1ea.js";import"./vec3-1863987c.js";import"./vec3f64-6cd30318.js";import"./common-c186b691.js";import"./vec4-46a9b36d.js";import"./screenUtils-90993e16.js";import"./opacityUtils-1333f803.js";import"./symbolLayerUtils3D-c8c40895.js";import"./aaBoundingBox-4a83dbbc.js";import"./aaBoundingRect-b340cf8c.js";import"./persistableUrlUtils-d0777bec.js";import"./collectionUtils-0365f48b.js";import"./Portal-c6e03126.js";import"./PortalGroup-d495847c.js";import"./PortalUser-1016c43c.js";import"./LegendOptions-2e7b3d70.js";import"./diffUtils-8a8cb5bc.js";import"./colorRamps-8d7efc14.js";import"./sizeVariableUtils-d4870b0d.js";import"./Graphic-6c08e65d.js";import"./jsonUtils-c6684c52.js";import"./compilerUtils-fefa73ae.js";import"./lengthUtils-92fed992.js";import"./jsonUtils-8c02ff16.js";import"./styleUtils-391927cf.js";import"./jsonUtils-1c5cdf77.js";import"./DictionaryLoader-2a334243.js";import"./LRUCache-b9228ca3.js";import"./MemCache-1d2f56ee.js";import"./deprecate-0d93948c.js";import"./heatmapUtils-3d7c22c5.js";import"./vec4f64-939de194.js";import"./LayerFloorInfo-f184c8f5.js";import"./arcgisLayerUrl-bed3cba1.js";import"./FeatureType-0be9420b.js";import"./Field-1d4f9ca4.js";import"./fieldType-b34e5d2d.js";import"./FeatureTemplate-c4496b93.js";import"./FieldsIndex-02142c8a.js";import"./labelingInfo-c70ad911.js";import"./labelUtils-4f4b54c6.js";import"./defaultsJSON-59981e75.js";import"./Query-13124a97.js";import"./popupUtils-1ecc877c.js";import"./parser-01f6451e.js";import"./mat4f32-77b3d8ac.js";import"./mat4-7dde83b1.js";import"./ElevationInfo-80227ecc.js";import"./PortalItem-e4ba4b94.js";import"./assets-cd44347b.js";import"./TimeInfo-f76d6c20.js";let e=class extends _(H(G(J(q(k(V(C(E(D(F(z(I(U))))))))))))){constructor(...t){super(...t),this.datesInUnknownTimezone=!1,this.dpi=96,this.gdbVersion=null,this.imageFormat="png24",this.imageMaxHeight=2048,this.imageMaxWidth=2048,this.imageTransparency=!0,this.isReference=null,this.labelsVisible=!1,this.operationalLayerType="ArcGISMapServiceLayer",this.sourceJSON=null,this.sublayers=null,this.type="map-image",this.url=null}normalizeCtorArgs(t,i){return typeof t=="string"?{url:t,...i}:t}load(t){const i=O(t)?t.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Map Service"]},t).catch(T).then(()=>this._fetchService(i))),Promise.resolve(this)}readImageFormat(t,i){const m=i.supportedImageFormatTypes;return m&&m.includes("PNG32")?"png32":"png24"}writeSublayers(t,i,m,r){if(!this.loaded||!t)return;const a=t.slice().reverse().flatten(({sublayers:s})=>s&&s.toArray().reverse()).toArray();let n=!1;if(this.capabilities&&this.capabilities.operations.supportsExportMap&&this.capabilities.exportMap.supportsDynamicLayers){const s=b(r.origin);if(s===f.PORTAL_ITEM){const c=this.createSublayersForOrigin("service").sublayers;n=x(a,c,f.SERVICE)}else if(s>f.PORTAL_ITEM){const c=this.createSublayersForOrigin("portal-item");n=x(a,c.sublayers,b(c.origin))}}const l=[],y={writeSublayerStructure:n,...r};let h=n;a.forEach(s=>{const c=s.write({},y);l.push(c),h=h||s.originOf("visible")==="user"}),l.some(s=>Object.keys(s).length>1)&&(i.layers=l),h&&(i.visibleLayers=a.filter(s=>s.visible).map(s=>s.id))}createExportImageParameters(t,i,m,r){const a=r&&r.pixelRatio||1;t&&this.version>=10&&(t=t.clone().shiftCentralMeridian());const n=new K({layer:this,floors:r==null?void 0:r.floors,scale:R({extent:t,width:i})*a}),l=n.toJSON();n.destroy();const y=!r||!r.rotation||this.version<10.3?{}:{rotation:-r.rotation},h=t&&t.spatialReference,s=h.wkid||JSON.stringify(h.toJSON());l.dpi*=a;const c={};if(r!=null&&r.timeExtent){const{start:u,end:d}=r.timeExtent.toJSON();c.time=u&&d&&u===d?""+u:`${u??"null"},${d??"null"}`}else this.timeInfo&&!this.timeInfo.hasLiveData&&(c.time="null,null");return{bbox:t&&t.xmin+","+t.ymin+","+t.xmax+","+t.ymax,bboxSR:s,imageSR:s,size:i+","+m,...l,...y,...c}}async fetchImage(t,i,m,r){return this._fetchImage("image",t,i,m,r)}async fetchImageBitmap(t,i,m,r){const a=await this._fetchImage("blob",t,i,m,r);return createImageBitmap(a)}async fetchRecomputedExtents(t={}){const i={...t,query:{returnUpdates:!0,f:"json",...this.customParameters,token:this.apiKey}},{data:m}=await g(this.url,i),{extent:r,fullExtent:a,timeExtent:n}=m,l=r||a;return{fullExtent:l&&P.fromJSON(l),timeExtent:n&&w.fromJSON({start:n[0],end:n[1]})}}loadAll(){return $(this,t=>{t(this.allSublayers)})}serviceSupportsSpatialReference(t){return W(this,t)}async _fetchImage(t,i,m,r,a){const n={responseType:t,signal:(a==null?void 0:a.signal)??null,query:{...this.parsedUrl.query,...this.createExportImageParameters(i,m,r,a),f:"image",...this.refreshParameters,...this.customParameters,token:this.apiKey}},l=this.parsedUrl.path+"/export";if(n.query.dynamicLayers!=null&&!this.capabilities.exportMap.supportsDynamicLayers)throw new v("mapimagelayer:dynamiclayer-not-supported",`service ${this.url} doesn't support dynamic layers, which is required to be able to change the sublayer's order, rendering, labeling or source.`,{query:n.query});try{const{data:y}=await g(l,n);return y}catch(y){throw M(y)?y:new v("mapimagelayer:image-fetch-error",`Unable to load image: ${l}`,{error:y})}}async _fetchService(t){if(this.sourceJSON)return void this.read(this.sourceJSON,{origin:"service",url:this.parsedUrl});const{data:i,ssl:m}=await g(this.parsedUrl.path,{query:{f:"json",...this.parsedUrl.query,...this.customParameters,token:this.apiKey},signal:t});m&&(this.url=this.url.replace(/^http:/i,"https:")),this.sourceJSON=i,this.read(i,{origin:"service",url:this.parsedUrl})}};o([p({type:Boolean})],e.prototype,"datesInUnknownTimezone",void 0),o([p()],e.prototype,"dpi",void 0),o([p()],e.prototype,"gdbVersion",void 0),o([p()],e.prototype,"imageFormat",void 0),o([j("imageFormat",["supportedImageFormatTypes"])],e.prototype,"readImageFormat",null),o([p({json:{origins:{service:{read:{source:"maxImageHeight"}}}}})],e.prototype,"imageMaxHeight",void 0),o([p({json:{origins:{service:{read:{source:"maxImageWidth"}}}}})],e.prototype,"imageMaxWidth",void 0),o([p()],e.prototype,"imageTransparency",void 0),o([p({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],e.prototype,"isReference",void 0),o([p({json:{read:!1,write:!1}})],e.prototype,"labelsVisible",void 0),o([p({type:["ArcGISMapServiceLayer"]})],e.prototype,"operationalLayerType",void 0),o([p({json:{read:!1,write:!1}})],e.prototype,"popupEnabled",void 0),o([p()],e.prototype,"sourceJSON",void 0),o([p({json:{write:{ignoreOrigin:!0}}})],e.prototype,"sublayers",void 0),o([N("sublayers",{layers:{type:[A]},visibleLayers:{type:[L]}})],e.prototype,"writeSublayers",null),o([p({type:["show","hide","hide-children"]})],e.prototype,"listMode",void 0),o([p({json:{read:!1},readOnly:!0,value:"map-image"})],e.prototype,"type",void 0),o([p(B)],e.prototype,"url",void 0),e=o([S("esri.layers.MapImageLayer")],e);const Qr=e;export{Qr as default};
