import{e as s,y as n,n as _,m as H,t as B,c as Z,R as x}from"./cast-a534ae90.js";import{d as D,a as G}from"./HandleOwner-2edbba46.js";import{r as d,t as E,o as W,H as q}from"./typedArrayUtil-d9bc5fbd.js";import{y as Q,f as A}from"./promiseUtils-32d9c228.js";import{l as w,U as J,h as b}from"./reactiveUtils-5869e41a.js";import"./ensureType-25b8cc06.js";import{t as X,p as K}from"./Scheduler-5e6ccc87.js";import{y as Y,E as ee}from"./elevationInfoUtils-c3025fae.js";import{t as P,j as te,p as ie}from"./TileInfo-c5c8c8d2.js";import{o as re}from"./vec3-1863987c.js";import{n as oe}from"./vec4f64-939de194.js";import{G as se,Q as ne,e as ae}from"./boundedPlane-296928f6.js";import{aG as le}from"./index-40f88256.js";import"./string-480f3e3f.js";import{h as j}from"./mathUtils-57aba1ea.js";import{w as pe}from"./Extent-a1a1de42.js";import{r as de,a as he}from"./queryEngineUtils-16df41c8.js";import{v as me}from"./Polyline-b571c705.js";import{f as ue,o as ce}from"./aaBoundingRect-b340cf8c.js";import{l as ye}from"./Color-af6e0c66.js";import{g as L}from"./Graphic-6c08e65d.js";import{S as fe,i as ge,B as ve,e as we}from"./symbols-9fcb6cc2.js";import{h as _e}from"./WorkerHandle-e4360b21.js";import{i as Se}from"./typeUtils-cd52dc20.js";import"./Error-57322e92.js";import"./nextTick-3ee5a785.js";import"./SimpleObservable-8e532943.js";import"./ElevationInfo-80227ecc.js";import"./jsonMap-190c5593.js";import"./fieldUtils-b2df74c4.js";import"./preload-helper-41c905a7.js";import"./arcadeOnDemand-a976a73c.js";import"./geometry-eec1b371.js";import"./lengthUtils-92fed992.js";import"./unitUtils-dd6fb8ee.js";import"./vec3f64-6cd30318.js";import"./common-c186b691.js";import"./sphere-622880b9.js";import"./mat4-7dde83b1.js";import"./vec4-46a9b36d.js";import"./byteSizeEstimations-90c5a50d.js";import"./quatf64-c94bd656.js";import"./mat4f64-fbeb2cd1.js";import"./vec2f64-30dc1443.js";import"./lineSegment-c6f0b9d1.js";import"./plane-46a8c767.js";import"./Basemap-59ed9516.js";import"./Collection-7c37b74e.js";import"./Evented-cbf5f368.js";import"./collectionUtils-0365f48b.js";import"./deprecate-0d93948c.js";import"./Loadable-46524a7e.js";import"./Promise-368b703a.js";import"./loadAll-01cdf0a9.js";import"./asyncUtils-087555fc.js";import"./request-24011425.js";import"./Portal-c6e03126.js";import"./locale-30120714.js";import"./PortalGroup-d495847c.js";import"./PortalUser-1016c43c.js";import"./PortalItem-e4ba4b94.js";import"./assets-cd44347b.js";import"./messages-28bf3b89.js";import"./writeUtils-3bde6e49.js";import"./layerUtils-68eea656.js";import"./compilerUtils-fefa73ae.js";import"./enumeration-61a13175.js";import"./opacityUtils-1333f803.js";import"./CollectionFlattener-f43a0fce.js";import"./TablesMixin-55858fba.js";import"./Layer-cea228f0.js";import"./Identifiable-093f90a8.js";import"./Clonable-9b34e760.js";import"./Cyclical-078b4564.js";import"./jsonUtils-c6684c52.js";import"./screenUtils-90993e16.js";import"./workers-af024c50.js";import"./Connection-b591250e.js";import"./Queue-275a6362.js";import"./intl-7d39a8c0.js";import"./number-2ab8ca0d.js";import"./projection-acd73147.js";import"./zscale-48bab05e.js";import"./widget-4abc68df.js";import"./uuid-73213768.js";import"./dom-5b7af1bf.js";import"./executeQueryJSON-29279a46.js";import"./normalizeUtils-0f537694.js";import"./query-b7b3a76b.js";import"./pbfQueryUtils-c922ef32.js";import"./pbf-8b0546e8.js";import"./OptimizedFeature-73582c6e.js";import"./OptimizedFeatureSet-1d1ac4b9.js";import"./queryZScale-3c8de33a.js";import"./FeatureSet-deb2029d.js";import"./Field-1d4f9ca4.js";import"./fieldType-b34e5d2d.js";import"./PopupTemplate-f97bb051.js";import"./CIMSymbol-72a9d286.js";import"./Symbol-8266348e.js";import"./colorUtils-639f4d25.js";import"./symbolLayerUtils3D-c8c40895.js";import"./aaBoundingBox-4a83dbbc.js";import"./persistableUrlUtils-d0777bec.js";import"./Query-13124a97.js";import"./TimeExtent-2004eecf.js";import"./RelationshipQuery-c27267ab.js";import"./LegendOptions-2e7b3d70.js";import"./utils-4469bf65.js";import"./BlendLayer-813950f9.js";import"./parser-01f6451e.js";import"./mat4f32-77b3d8ac.js";import"./ItemCache-bf1028d4.js";import"./MemCache-1d2f56ee.js";import"./utils-c81a5c52.js";import"./jsonUtils-1c5cdf77.js";import"./UniqueValueRenderer-73d567ad.js";import"./diffUtils-8a8cb5bc.js";import"./colorRamps-8d7efc14.js";import"./sizeVariableUtils-d4870b0d.js";import"./jsonUtils-8c02ff16.js";import"./styleUtils-391927cf.js";import"./DictionaryLoader-2a334243.js";import"./LRUCache-b9228ca3.js";import"./heatmapUtils-3d7c22c5.js";import"./featureConversionUtils-d2229ed4.js";import"./TopFeaturesQuery-9aca00bf.js";import"./FeatureLayer-534ff006.js";import"./MultiOriginJSONSupport-b8792dfa.js";import"./LayerFloorInfo-f184c8f5.js";import"./FeatureLayerBase-c0aa3674.js";import"./HeightModelInfo-34f16d74.js";import"./arcgisLayerUrl-bed3cba1.js";import"./OperationalLayer-9c50475b.js";import"./editsZScale-12d81957.js";import"./APIKeyMixin-b6e4f897.js";import"./ArcGISService-aada3b5d.js";import"./CustomParametersMixin-a5d06ccc.js";import"./EditBusLayer-b5dc3689.js";import"./FeatureReductionLayer-fcaeb34a.js";import"./labelingInfo-c70ad911.js";import"./labelUtils-4f4b54c6.js";import"./defaultsJSON-59981e75.js";import"./OrderedLayer-9623e905.js";import"./PortalLayer-12f4a535.js";import"./RefreshableLayer-49182ab8.js";import"./ScaleRangeLayer-c072e266.js";import"./TemporalLayer-c74d13d4.js";import"./TimeInfo-f76d6c20.js";import"./FeatureTemplate-c4496b93.js";import"./FeatureType-0be9420b.js";import"./fieldProperties-4207e953.js";import"./FieldsIndex-02142c8a.js";import"./versionUtils-fabd8b3a.js";import"./styleUtils-08eaa4d2.js";import"./popupUtils-1ecc877c.js";import"./colorUtils-82440b70.js";import"./mat2d-d0b91e3e.js";import"./GraphicsLayer-b332f442.js";import"./ViewingMode-915d19cb.js";import"./unitBezier-881ac1eb.js";import"./vec2-ab9f47bf.js";import"./mat3-9a8d9db7.js";import"./mat3f32-d3d088e8.js";import"./vec2f32-461e65a9.js";import"./TileStrategy-a5366189.js";import"./TileStore-8f580dbf.js";import"./TileKey-9cae9369.js";import"./rbush-8e36784a.js";import"./quickselect-322ec8e1.js";import"./capabilities-d08b6e58.js";import"./context-util-d4c193b5.js";import"./Subtype-a3103d84.js";import"./datetime-4f774298.js";import"./QueryEngineResult-92e13fe4.js";import"./utils-52ad3c09.js";import"./generateRendererUtils-2f0b667c.js";import"./WhereClause-6c9440a1.js";import"./utils-44a68fd6.js";import"./json-48e3ea08.js";import"./Util-289ce3b5.js";import"./EffectView-dffeb0bc.js";import"./ExportImageParameters-ba01802d.js";import"./sublayerUtils-eea48c01.js";import"./webStyleSymbolUtils-0b165621.js";import"./devEnvironmentUtils-5002a058.js";import"./dehydratedFeatures-3dcd65f1.js";import"./enums-4b2a86a0.js";import"./quat-ec16a584.js";import"./VertexSnappingCandidate-03b1951a.js";function O(e,t){return ne(t.extent,U),ae(U,re(be,e.x,e.y,0))}const U=se(),be=oe();let u=class extends H{constructor(t){super(t),this.pointOfInterest=null}get tiles(){const t=this.tilesCoveringView,o=d(this.pointOfInterest)?this.pointOfInterest:this.view.center;return t.sort((a,r)=>O(o,a)-O(o,r)),t}_scaleEnabled(){return le(this.view.scale,this.layer.minScale||0,this.layer.maxScale||0)}get tilesCoveringView(){if(!this.view.ready||!this.view.featuresTilingScheme||!this.view.state||E(this.tileInfo))return[];if(!this._scaleEnabled)return[];const{spans:t,lodInfo:o}=this.view.featuresTilingScheme.getTileCoverage(this.view.state,0),{level:a}=o,r=[];for(const{row:i,colFrom:l,colTo:p}of t)for(let g=l;g<=p;g++){const c=o.normalizeCol(g),y=new P(null,a,i,c);this.tileInfo.updateTileInfo(y),r.push(y)}return r}get tileInfo(){var t;return((t=this.view.featuresTilingScheme)==null?void 0:t.tileInfo)??null}get tileSize(){return d(this.tileInfo)?this.tileInfo.size[0]:256}initialize(){this.addHandles(w(()=>{var t,o;return(o=(t=this.view)==null?void 0:t.state)==null?void 0:o.viewpoint},()=>this.notifyChange("tilesCoveringView"),J))}};s([n({readOnly:!0})],u.prototype,"tiles",null),s([n({readOnly:!0})],u.prototype,"_scaleEnabled",null),s([n({readOnly:!0})],u.prototype,"tilesCoveringView",null),s([n({readOnly:!0})],u.prototype,"tileInfo",null),s([n({readOnly:!0})],u.prototype,"tileSize",null),s([n({constructOnly:!0})],u.prototype,"view",void 0),s([n({constructOnly:!0})],u.prototype,"layer",void 0),s([n()],u.prototype,"pointOfInterest",void 0),u=s([_("esri.views.interactive.snapping.featureSources.featureServiceSource.FeatureServiceTiles2D")],u);var $;(function(e){e[e.INVISIBLE=0]="INVISIBLE",e[e.VISIBLE_WHEN_EXTENDED=1]="VISIBLE_WHEN_EXTENDED",e[e.VISIBLE_ON_SURFACE=2]="VISIBLE_ON_SURFACE"})($||($={}));let f=class extends D{constructor(e){super(e),this.pointOfInterest=null}get tiles(){const e=this.tilesCoveringView,t=this._effectivePointOfInterest;if(d(t)){const o=e.map(a=>O(t,a));for(let a=1;a<o.length;a++)if(o[a-1]>o[a])return e.sort((r,i)=>O(t,r)-O(t,i)),e.slice()}return e}get tilesCoveringView(){var e,t;return this._filterTiles((t=(e=this.view.featureTiles)==null?void 0:e.tiles)==null?void 0:t.toArray()).map(Ie)}get tileInfo(){var e;return((e=this.view.featureTiles)==null?void 0:e.tilingScheme.toTileInfo())??null}get tileSize(){var e;return((e=this.view.featureTiles)==null?void 0:e.tileSize)??256}get _effectivePointOfInterest(){var t;const e=this.pointOfInterest;return d(e)?e:(t=this.view.pointsOfInterest)==null?void 0:t.focus.location}initialize(){this.handles.add(w(()=>this.view.featureTiles,e=>{this.handles.remove(V),e&&this.handles.add(e.addClient(),V)},b))}_filterTiles(e){return E(e)?[]:e.filter(t=>Math.abs(t.measures.screenRect[3]-t.measures.screenRect[1])>Oe&&t.measures.visibility===$.VISIBLE_ON_SURFACE)}};function Ie({lij:[e,t,o],extent:a}){return new P(`${e}/${t}/${o}`,e,t,o,a)}s([n({readOnly:!0})],f.prototype,"tiles",null),s([n({readOnly:!0})],f.prototype,"tilesCoveringView",null),s([n({readOnly:!0})],f.prototype,"tileInfo",null),s([n({readOnly:!0})],f.prototype,"tileSize",null),s([n({constructOnly:!0})],f.prototype,"view",void 0),s([n()],f.prototype,"pointOfInterest",void 0),s([n()],f.prototype,"_effectivePointOfInterest",null),f=s([_("esri.views.interactive.snapping.featureSources.featureServiceSource.FeatureServiceTiles3D")],f);const Oe=50,V="feature-tiles",ke=[[0,179,255],[117,62,128],[0,104,255],[215,189,166],[32,0,193],[98,162,206],[102,112,129],[52,125,0],[142,118,246],[138,83,0],[92,122,255],[122,55,83],[0,142,255],[81,40,179],[0,200,244],[13,24,127],[0,170,147],[19,58,241],[22,44,35]];let I=class extends H{constructor(e){super(e),this.updating=!1,this.enablePolygons=!0,this.enableLabels=!0,this._polygons=new Map,this._labels=new Map,this._enabled=!0}initialize(){this._symbols=ke.map(e=>new fe({color:[e[0],e[1],e[2],.6],outline:{color:"black",width:1}})),this.update()}destroy(){this._enabled=!1,this.clear()}get enabled(){return this._enabled}set enabled(e){this._enabled!==e&&(this._enabled=e,this.update())}update(){if(!this._enabled)return void this.clear();const e=i=>{if(d(i.label))return i.label;let l=i.lij.toString();return d(i.loadPriority)&&(l+=` (${i.loadPriority})`),l},t=this.getTiles(),o=new Array,a=new Set((this._labels.size,this._labels.keys()));t.forEach((i,l)=>{const p=i.lij.toString();a.delete(p);const g=i.lij[0],c=i.geometry;if(this.enablePolygons&&!this._polygons.has(p)){const y=new L({geometry:c,symbol:this._symbols[g%this._symbols.length]});this._polygons.set(p,y),o.push(y)}if(this.enableLabels){const y=e(i),C=l/(t.length-1),T=j(0,200,C),F=j(20,6,C)/.75,N=d(i.loadPriority)&&i.loadPriority>=t.length,z=new ye([T,N?0:T,N?0:T]),M=this.view.type==="3d"?()=>new ge({verticalOffset:{screenLength:40/.75},callout:{type:"line",color:"white",border:{color:"black"}},symbolLayers:[new ve({text:y,halo:{color:"white",size:1/.75},material:{color:z},size:F})]}):()=>new we({text:y,haloColor:"white",haloSize:1/.75,color:z,size:F});if(this._labels.has(p)){const S=this._labels.get(p),R=M();(E(S.symbol)||JSON.stringify(R)!==JSON.stringify(S.symbol))&&(S.symbol=R)}else{const S=new L({geometry:c.extent.center,symbol:M()});this._labels.set(p,S),o.push(S)}}});const r=new Array;a.forEach(i=>{this._polygons.has(i)&&(r.push(this._polygons.get(i)),this._polygons.delete(i)),this._labels.has(i)&&(r.push(this._labels.get(i)),this._labels.delete(i))}),this.view.graphics.removeMany(r),this.view.graphics.addMany(o)}clear(){this.view.graphics.removeMany(Array.from(this._polygons.values())),this.view.graphics.removeMany(Array.from(this._labels.values())),this._polygons.clear(),this._labels.clear()}};s([n({constructOnly:!0})],I.prototype,"view",void 0),s([n({readOnly:!0})],I.prototype,"updating",void 0),s([n()],I.prototype,"enabled",null),I=s([_("esri.views.support.TileTreeDebugger")],I);let k=class extends I{constructor(e){super(e),this._handles=new B}initialize(){const e=setInterval(()=>this._fetchDebugInfo(),2e3);this._handles.add(Z(()=>clearInterval(e)))}destroy(){this._handles.destroy()}getTiles(){if(!this._debugInfo)return[];const e=new Map,t=new Map;this._debugInfo.storedTiles.forEach(r=>{e.set(r.data.id,r.featureCount)}),this._debugInfo.pendingTiles.forEach(r=>{e.set(r.data.id,r.featureCount),t.set(r.data.id,r.state)});const o=r=>{const i=t.get(r),l=e.get(r)??"?";return i?`${i}:${l}
${r}`:`store:${l}
${r}`},a=new Map;return this._debugInfo.storedTiles.forEach(r=>{a.set(r.data.id,r.data)}),this._debugInfo.pendingTiles.forEach(r=>{a.set(r.data.id,r.data)}),Array.from(a.values()).map(r=>({lij:[r.level,r.row,r.col],geometry:me.fromExtent(ue(r.extent,this.view.spatialReference)),label:o(r.id)}))}_fetchDebugInfo(){this.handle.getDebugInfo(null).then(e=>{this._debugInfo=e,this.update()})}};s([n({constructOnly:!0})],k.prototype,"handle",void 0),k=s([_("esri.views.interactive.snapping.featureSources.WorkerTileTreeDebugger")],k);let h=class extends D{constructor(e){super(e),this.schedule=null,this.hasZ=!1,this.elevationAlignPointsInFeatures=async t=>{const o=[];for(const{points:a}of t)for(const{z:r}of a)o.push(r);return{elevations:o,drapedObjectIds:new Set,failedObjectIds:new Set}},this.queryForSymbologySnapping=async()=>({candidates:[],sourceCandidateIndices:[]}),this.availability=0,this._workerHandleUpdating=!0,this._editId=0}get updating(){return this.updatingHandles.updating||this._workerHandleUpdating}destroy(){this._workerHandle.destroy()}initialize(){this._workerHandle=new He(this.schedule,{alignElevation:async(e,{signal:t})=>({result:await this.elevationAlignPointsInFeatures(e.points,t)}),getSymbologyCandidates:async(e,{signal:t})=>({result:await this.queryForSymbologySnapping(e,t)})}),this.handles.add([this._workerHandle.on("notify-updating",({updating:e})=>this._workerHandleUpdating=e),this._workerHandle.on("notify-availability",({availability:e})=>this._set("availability",e))])}async setup(e,t){var r;const o=this._serviceInfoFromLayer(e.layer);if(E(o))return;const a={configuration:this._convertConfiguration(e.configuration),serviceInfo:o,spatialReference:e.spatialReference.toJSON(),hasZ:this.hasZ,elevationInfo:(r=e.layer.elevationInfo)==null?void 0:r.toJSON()};await this.updatingHandles.addPromise(this._workerHandle.invokeMethod("setup",a,t)),this.updatingHandles.addPromise(this._workerHandle.invokeMethod("whenNotUpdating",{},t))}async configure(e,t){const o=this._convertConfiguration(e);await this.updatingHandles.addPromise(this._workerHandle.invokeMethod("configure",o,t)),this.updatingHandles.addPromise(this._workerHandle.invokeMethod("whenNotUpdating",{},t))}async refresh(e){await this.updatingHandles.addPromise(this._workerHandle.invokeMethod("refresh",{},e)),this.updatingHandles.addPromise(this._workerHandle.invokeMethod("whenNotUpdating",{},e))}async fetchCandidates(e,t){const o={distance:e.distance,point:e.coordinateHelper.vectorToPoint(e.point).toJSON(),types:e.types,filter:d(e.filter)?e.filter.toJSON():null};return this._workerHandle.invoke(o,t)}async updateTiles(e,t){const o={tiles:e.tiles,tileInfo:d(e.tileInfo)?e.tileInfo.toJSON():null,tileSize:e.tileSize};await this.updatingHandles.addPromise(this._workerHandle.invokeMethod("updateTiles",o,t)),this.updatingHandles.addPromise(this._workerHandle.invokeMethod("whenNotUpdating",{},t))}async applyEdits(e,t){var l,p,g;const o=this._editId++,a={id:o};await this.updatingHandles.addPromise(this._workerHandle.invokeMethod("beginApplyEdits",a,t));const r=await this.updatingHandles.addPromise(Q(e.result,t)),i={id:o,edits:{addedFeatures:((l=r.addedFeatures)==null?void 0:l.map(({objectId:c})=>c).filter(d))??[],deletedFeatures:((p=r.deletedFeatures)==null?void 0:p.map(({objectId:c,globalId:y})=>({objectId:c,globalId:y})))??[],updatedFeatures:((g=r.updatedFeatures)==null?void 0:g.map(({objectId:c})=>c).filter(d))??[]}};await this.updatingHandles.addPromise(this._workerHandle.invokeMethod("endApplyEdits",i,t)),this.updatingHandles.addPromise(this._workerHandle.invokeMethod("whenNotUpdating",{},t))}getDebugInfo(e){return this._workerHandle.invokeMethod("getDebugInfo",{},e)}async notifyElevationSourceChange(){await this._workerHandle.invokeMethod("notifyElevationSourceChange",{})}async notifySymbologyChange(){await this._workerHandle.invokeMethod("notifySymbologyChange",{})}async setSymbologySnappingSupported(e){await this._workerHandle.invokeMethod("setSymbologySnappingSupported",e)}_convertConfiguration(e){return{filter:d(e.filter)?e.filter.toJSON():null,customParameters:e.customParameters,viewType:e.viewType}}_serviceInfoFromLayer(e){var t,o;return e.geometryType==="multipatch"||e.geometryType==="mesh"?null:{url:((t=e.parsedUrl)==null?void 0:t.path)??"",fields:e.fields.map(a=>a.toJSON()),geometryType:Se.toJSON(e.geometryType),capabilities:e.capabilities,objectIdField:e.objectIdField,globalIdField:e.globalIdField,spatialReference:e.spatialReference.toJSON(),timeInfo:(o=e.timeInfo)==null?void 0:o.toJSON()}}};s([n({constructOnly:!0})],h.prototype,"schedule",void 0),s([n({constructOnly:!0})],h.prototype,"hasZ",void 0),s([n({constructOnly:!0})],h.prototype,"elevationAlignPointsInFeatures",void 0),s([n({constructOnly:!0})],h.prototype,"queryForSymbologySnapping",void 0),s([n({readOnly:!0})],h.prototype,"updating",null),s([n({readOnly:!0})],h.prototype,"availability",void 0),s([n()],h.prototype,"_workerHandleUpdating",void 0),h=s([_("esri.views.interactive.snapping.featureSources.featureServiceSource.FeatureServiceSnappingSourceWorkerHandle")],h);class He extends _e{constructor(t,o){super("FeatureServiceSnappingSourceWorker","fetchCandidates",{},t,{strategy:"dedicated",client:o})}}let v=class extends H{constructor(e){super(e),this.pointOfInterest=null}get tiles(){return[new P("0/0/0",0,0,0,ce(-1e8,-1e8,1e8,1e8))]}get tileInfo(){return new te({origin:new pe({x:-1e8,y:1e8,spatialReference:this.layer.spatialReference}),size:[512,512],lods:[new ie({level:0,scale:1,resolution:390625})],spatialReference:this.layer.spatialReference})}get tileSize(){return this.tileInfo.size[0]}};s([n({readOnly:!0})],v.prototype,"tiles",null),s([n({readOnly:!0})],v.prototype,"tileInfo",null),s([n({readOnly:!0})],v.prototype,"tileSize",null),s([n({constructOnly:!0})],v.prototype,"layer",void 0),s([n()],v.prototype,"pointOfInterest",void 0),v=s([_("esri.views.interactive.snapping.featureSources.featureServiceSource.FeatureServiceTilesSimple")],v);let m=class extends G(H){constructor(e){super(e)}get _updateTilesParameters(){return{tiles:this._tilesOfInterest.tiles,tileInfo:this._tilesOfInterest.tileInfo,tileSize:this._tilesOfInterest.tileSize}}get updating(){return this._workerHandle.updating||this.updatingHandles.updating}get configuration(){const{view:e}=this,t=d(e)?e.type:"2d";return{filter:this._layer.createQuery(),customParameters:this._layer.customParameters,viewType:t}}get availability(){return this._workerHandle.availability}get _layer(){return this.layerSource.layer}initialize(){const e=this.view;if(d(e))switch(e.type){case"2d":this._tilesOfInterest=new u({view:e,layer:this._layer}),this._workerHandle=new h;break;case"3d":{const{resourceController:t}=e,o=this._layer,a=e.whenLayerView(o);this._tilesOfInterest=new f({view:e}),this._workerHandle=new h({schedule:i=>t.schedule(i),hasZ:this._layer.hasZ&&(this._layer.returnZ??!0),elevationAlignPointsInFeatures:async(i,l)=>{const p=await a;return A(l),p.elevationAlignPointsInFeatures(i,l)},queryForSymbologySnapping:async(i,l)=>{const p=await a;return A(l),p.queryForSymbologySnapping(i,l)}});const r=new X(null);a.then(i=>r.set(i)),this.addHandles([e.elevationProvider.on("elevation-change",({context:i})=>{var p;const{elevationInfo:l}=o;Y(i,l)&&((p=this._workerHandle)==null||p.notifyElevationSourceChange())}),w(()=>o.elevationInfo,()=>{var i;return(i=this._workerHandle)==null?void 0:i.notifyElevationSourceChange()},b),w(()=>W(r.get(),({processor:i})=>i==null?void 0:i.renderer),()=>{var i;return(i=this._workerHandle)==null?void 0:i.notifySymbologyChange()},b),w(()=>q(r.get(),!1,i=>i.symbologySnappingSupported),i=>{var l;return(l=this._workerHandle)==null?void 0:l.setSymbologySnappingSupported(i)},b)]);break}}else this._tilesOfInterest=new v({layer:this._layer}),this._workerHandle=new h;this.handles.add([x(this._workerHandle)]),this._workerHandle.setup({layer:this._layer,spatialReference:this.spatialReference,configuration:this.configuration},null),this.updatingHandles.add(()=>this._updateTilesParameters,()=>this._workerHandle.updateTiles(this._updateTilesParameters,null),b),this.handles.add([w(()=>this.configuration,t=>this._workerHandle.configure(t,null),J)]),d(e)&&this.handles.add(w(()=>K.FEATURE_SERVICE_SNAPPING_SOURCE_TILE_TREE_SHOW_TILES,t=>{t&&!this._debug?(this._debug=new k({view:e,handle:this._workerHandle}),this.handles.add(x(this._debug),"debug")):!t&&this._debug&&this.handles.remove("debug")},b)),this.handles.add(this.layerSource.layer.on("apply-edits",t=>{this._workerHandle.applyEdits(t,null)}))}refresh(){this._workerHandle.refresh(null)}async fetchCandidates(e,t){const{coordinateHelper:o,elevationInfo:a,point:r}=e;this._tilesOfInterest.pointOfInterest=o.vectorToPoint(r);const i=o.hasZ()?ee:a,l=this._getGroundElevation;return(await this._workerHandle.fetchCandidates({...e},t)).candidates.map(p=>de(p,o,i,l))}getDebugInfo(e){return this._workerHandle.getDebugInfo(e)}get _getGroundElevation(){return he(this.view)}};s([n({constructOnly:!0})],m.prototype,"spatialReference",void 0),s([n({constructOnly:!0})],m.prototype,"layerSource",void 0),s([n({constructOnly:!0})],m.prototype,"view",void 0),s([n()],m.prototype,"_tilesOfInterest",void 0),s([n({readOnly:!0})],m.prototype,"_updateTilesParameters",null),s([n({readOnly:!0})],m.prototype,"updating",null),s([n({readOnly:!0})],m.prototype,"configuration",null),s([n({readOnly:!0})],m.prototype,"availability",null),s([n()],m.prototype,"_getGroundElevation",null),m=s([_("esri.views.interactive.snapping.featureSources.FeatureServiceSnappingSource")],m);export{m as FeatureServiceSnappingSource};
