import{n as u}from"./compilerUtils-fefa73ae.js";import{t as m}from"./typedArrayUtil-d9bc5fbd.js";import{h as d}from"./cast-a534ae90.js";import{k as c}from"./Extent-a1a1de42.js";import{o as f}from"./zscale-48bab05e.js";import{N as y,j as _}from"./dehydratedFeatures-3dcd65f1.js";import{p as g,r as P}from"./featureConversionUtils-d2229ed4.js";import{y as C}from"./Field-1d4f9ca4.js";import{t as b}from"./pbfQueryUtils-c922ef32.js";import"./string-480f3e3f.js";import"./Error-57322e92.js";import"./ensureType-25b8cc06.js";import"./nextTick-3ee5a785.js";import"./promiseUtils-32d9c228.js";import"./unitUtils-dd6fb8ee.js";import"./jsonMap-190c5593.js";import"./byteSizeEstimations-90c5a50d.js";import"./aaBoundingBox-4a83dbbc.js";import"./aaBoundingRect-b340cf8c.js";import"./mathUtils-57aba1ea.js";import"./vec3-1863987c.js";import"./vec3f64-6cd30318.js";import"./common-c186b691.js";import"./vec4-46a9b36d.js";import"./Polyline-b571c705.js";import"./typeUtils-cd52dc20.js";import"./jsonUtils-c6684c52.js";import"./OptimizedFeature-73582c6e.js";import"./OptimizedFeatureSet-1d1ac4b9.js";import"./enumeration-61a13175.js";import"./fieldType-b34e5d2d.js";import"./pbf-8b0546e8.js";function G(i,t){return t}function h(i,t,e,r){switch(e){case 0:return a(i,t+r,0);case 1:return i.originPosition==="lowerLeft"?a(i,t+r,1):k(i,t+r,1)}}function l(i,t,e,r){return e===2?a(i,t,2):h(i,t,e,r)}function v(i,t,e,r){return e===2?a(i,t,3):h(i,t,e,r)}function M(i,t,e,r){return e===3?a(i,t,3):l(i,t,e,r)}function a({translate:i,scale:t},e,r){return i[r]+e*t[r]}function k({translate:i,scale:t},e,r){return i[r]-e*t[r]}class R{constructor(t){this._options=t,this.geometryTypes=["point","multipoint","polyline","polygon"],this._previousCoordinate=[0,0],this._transform=null,this._applyTransform=G,this._lengths=[],this._currentLengthIndex=0,this._toAddInCurrentPath=0,this._vertexDimension=0,this._coordinateBuffer=null,this._coordinateBufferPtr=0,this._attributesConstructor=class{}}createFeatureResult(){return new y}finishFeatureResult(t){if(this._options.applyTransform&&(t.transform=null),this._attributesConstructor=class{},this._coordinateBuffer=null,this._lengths.length=0,!t.hasZ)return;const e=f(t.geometryType,this._options.sourceSpatialReference,t.spatialReference);if(!m(e))for(const r of t.features)e(r.geometry)}createSpatialReference(){return new c}addField(t,e){t.fields.push(C.fromJSON(e));const r=t.fields.map(o=>o.name);this._attributesConstructor=function(){for(const o of r)this[o]=null}}addFeature(t,e){const r=this._options.maxStringAttributeLength?this._options.maxStringAttributeLength:0;if(r>0)for(const o in e.attributes){const s=e.attributes[o];typeof s=="string"&&s.length>r&&(e.attributes[o]="")}t.features.push(e)}addQueryGeometry(t,e){const{queryGeometry:r,queryGeometryType:o}=e,s=g(r.clone(),r,!1,!1,this._transform),p=P(s,o,!1,!1);let n=null;switch(o){case"esriGeometryPoint":n="point";break;case"esriGeometryPolygon":n="polygon";break;case"esriGeometryPolyline":n="polyline";break;case"esriGeometryMultipoint":n="multipoint"}p.type=n,t.queryGeometryType=o,t.queryGeometry=p}prepareFeatures(t){switch(this._transform=t.transform,this._options.applyTransform&&t.transform&&(this._applyTransform=this._deriveApplyTransform(t)),this._vertexDimension=2,t.hasZ&&this._vertexDimension++,t.hasM&&this._vertexDimension++,t.geometryType){case"point":this.addCoordinate=(e,r,o)=>this.addCoordinatePoint(e,r,o),this.createGeometry=e=>this.createPointGeometry(e);break;case"polygon":this.addCoordinate=(e,r,o)=>this._addCoordinatePolygon(e,r,o),this.createGeometry=e=>this._createPolygonGeometry(e);break;case"polyline":this.addCoordinate=(e,r,o)=>this._addCoordinatePolyline(e,r,o),this.createGeometry=e=>this._createPolylineGeometry(e);break;case"multipoint":this.addCoordinate=(e,r,o)=>this._addCoordinateMultipoint(e,r,o),this.createGeometry=e=>this._createMultipointGeometry(e);break;case"mesh":case"extent":break;default:u(t.geometryType)}}createFeature(){return this._lengths.length=0,this._currentLengthIndex=0,this._previousCoordinate[0]=0,this._previousCoordinate[1]=0,new _(d(),null,new this._attributesConstructor)}allocateCoordinates(){const t=this._lengths.reduce((e,r)=>e+r,0);this._coordinateBuffer=new Float64Array(t*this._vertexDimension),this._coordinateBufferPtr=0}addLength(t,e,r){this._lengths.length===0&&(this._toAddInCurrentPath=e),this._lengths.push(e)}createPointGeometry(t){const e={type:"point",x:0,y:0,spatialReference:t.spatialReference,hasZ:!!t.hasZ,hasM:!!t.hasM};return e.hasZ&&(e.z=0),e.hasM&&(e.m=0),e}addCoordinatePoint(t,e,r){switch(e=this._applyTransform(this._transform,e,r,0),r){case 0:t.x=e;break;case 1:t.y=e;break;case 2:t.hasZ?t.z=e:t.m=e;break;case 3:t.m=e}}_transformPathLikeValue(t,e){let r=0;return e<=1&&(r=this._previousCoordinate[e],this._previousCoordinate[e]+=t),this._applyTransform(this._transform,t,e,r)}_addCoordinatePolyline(t,e,r){this._dehydratedAddPointsCoordinate(t.paths,e,r)}_addCoordinatePolygon(t,e,r){this._dehydratedAddPointsCoordinate(t.rings,e,r)}_addCoordinateMultipoint(t,e,r){r===0&&t.points.push([]);const o=this._transformPathLikeValue(e,r);t.points[t.points.length-1].push(o)}_createPolygonGeometry(t){return{type:"polygon",rings:[[]],spatialReference:t.spatialReference,hasZ:!!t.hasZ,hasM:!!t.hasM}}_createPolylineGeometry(t){return{type:"polyline",paths:[[]],spatialReference:t.spatialReference,hasZ:!!t.hasZ,hasM:!!t.hasM}}_createMultipointGeometry(t){return{type:"multipoint",points:[],spatialReference:t.spatialReference,hasZ:!!t.hasZ,hasM:!!t.hasM}}_dehydratedAddPointsCoordinate(t,e,r){r===0&&this._toAddInCurrentPath--==0&&(t.push([]),this._toAddInCurrentPath=this._lengths[++this._currentLengthIndex]-1,this._previousCoordinate[0]=0,this._previousCoordinate[1]=0);const o=this._transformPathLikeValue(e,r),s=t[t.length-1];r===0&&s.push(new Float64Array(this._coordinateBuffer.buffer,this._coordinateBufferPtr*Float64Array.BYTES_PER_ELEMENT,this._vertexDimension)),this._coordinateBuffer[this._coordinateBufferPtr++]=o}_deriveApplyTransform(t){const{hasZ:e,hasM:r}=t;return e&&r?M:e?l:r?v:h}}class T{_parseFeatureQuery(t){const e=b(t.buffer,new R(t.options)),r={...e,spatialReference:e.spatialReference.toJSON(),fields:e.fields?e.fields.map(o=>o.toJSON()):void 0};return Promise.resolve(r)}}function nt(){return new T}export{nt as default};
