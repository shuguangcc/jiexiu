import"./geometry-eec1b371.js";import"./Error-57322e92.js";import{e as C}from"./typedArrayUtil-d9bc5fbd.js";import{u as S}from"./screenUtils-90993e16.js";import{D as R,b as j,w as k,k as A}from"./Extent-a1a1de42.js";import{O as B,c as D,x as O,m as q,f as G,d as Y,V as _,T as U,F as Z,D as H,N as J,S as K}from"./utils-52ad3c09.js";import"./fieldUtils-b2df74c4.js";import{y as L,m as Q}from"./heatmapUtils-3d7c22c5.js";import{i as W}from"./arcadeOnDemand-a976a73c.js";import"./ensureType-25b8cc06.js";import"./string-480f3e3f.js";import"./Polyline-b571c705.js";import"./cast-a534ae90.js";import"./nextTick-3ee5a785.js";import"./promiseUtils-32d9c228.js";import"./typeUtils-cd52dc20.js";import"./jsonMap-190c5593.js";import"./jsonUtils-c6684c52.js";import"./generateRendererUtils-2f0b667c.js";import"./colorRamps-8d7efc14.js";import"./Color-af6e0c66.js";import"./colorUtils-639f4d25.js";import"./mathUtils-57aba1ea.js";import"./vec3-1863987c.js";import"./vec3f64-6cd30318.js";import"./common-c186b691.js";import"./vec4-46a9b36d.js";import"./enumeration-61a13175.js";import"./Symbol-8266348e.js";import"./preload-helper-41c905a7.js";import"./vec4f64-939de194.js";let z=null;function X(a,i,r){return a.x<0?a.x+=i:a.x>r&&(a.x-=i),a}function ii(a,i,r,o){const n=R(r)?j(r):null,l=n?Math.round((n.valid[1]-n.valid[0])/i.scale[0]):null;return a.map(t=>{const e=new k(C(t.geometry));return B(i,e,e,e.hasZ,e.hasM),t.geometry=n?X(e,l,o[0]):e,t})}function ai(a,i=18,r,o,n,l){const t=new Float64Array(n*l);i=Math.round(S(i));let e=Number.POSITIVE_INFINITY,s=Number.NEGATIVE_INFINITY,m=0,f=0,d=0,c=0;const I=L(o,r);for(const{geometry:T,attributes:v}of a){const{x:p,y:u}=T,x=Math.max(0,p-i),V=Math.max(0,u-i),M=Math.min(l,u+i),g=Math.min(n,p+i),P=+I(v);for(let w=V;w<M;w++)for(let h=x;h<g;h++){const E=w*n+h,b=Q(h-p,w-u,i),N=t[E];m=t[E]+=b*P;const $=m-N;f+=$,d+=$*$,m<e&&(e=m),m>s&&(s=m),c++}}if(!c)return{mean:0,stddev:0,min:0,max:0,mid:0,count:0};const y=(s-e)/2;return{mean:f/c,stdDev:Math.sqrt((d-f*f/c)/c),min:e,max:s,mid:y,count:c}}async function F(a,i){if(!i)return[];const{field:r,field2:o,field3:n,fieldDelimiter:l}=a,t=a.valueExpression,e=a.normalizationType,s=a.normalizationField,m=a.normalizationTotal,f=[],d=a.viewInfoParams;let c=null,I=null;if(t){if(!z){const{arcadeUtils:v}=await W();z=v}c=z.createFunction(t),I=d&&z.getViewInfo({viewingMode:d.viewingMode,scale:d.scale,spatialReference:new A(d.spatialReference)})}const y=a.fieldInfos,T=!(i[0]&&"declaredClass"in i[0]&&i[0].declaredClass==="esri.Graphic")&&y?{fields:y}:null;return i.forEach(v=>{const p=v.attributes;let u;if(t){const x=T?{...v,layer:T}:v,V=z.createExecContext(x,I);u=z.executeFunction(c,V)}else p&&(u=p[r],o&&(u=`${D(u)}${l}${D(p[o])}`,n&&(u=`${u}${l}${D(p[n])}`)));if(e&&typeof u=="number"&&isFinite(u)){const x=p&&parseFloat(p[s]);u=O(u,e,x,m)}f.push(u)}),f}async function Ci(a){const{attribute:i,features:r}=a,{normalizationType:o,normalizationField:n,minValue:l,maxValue:t,fieldType:e}=i,s=await F({field:i.field,valueExpression:i.valueExpression,normalizationType:o,normalizationField:n,normalizationTotal:i.normalizationTotal,viewInfoParams:i.viewInfoParams,fieldInfos:i.fieldInfos},r),m=q({normalizationType:o,normalizationField:n,minValue:l,maxValue:t}),f={value:.5,fieldType:e},d=e==="esriFieldTypeString"?G({values:s,supportsNullCount:m,percentileParams:f}):Y({values:s,minValue:l,maxValue:t,useSampleStdDev:!o,supportsNullCount:m,percentileParams:f});return _(d,e==="esriFieldTypeDate")}async function Si(a){const{attribute:i,features:r}=a,o=await F({field:i.field,field2:i.field2,field3:i.field3,fieldDelimiter:i.fieldDelimiter,valueExpression:i.valueExpression,viewInfoParams:i.viewInfoParams,fieldInfos:i.fieldInfos},r),n=U(o);return Z(n,i.domains,i.returnAllCodedValues,i.fieldDelimiter)}async function Ri(a){const{attribute:i,features:r}=a,{field:o,normalizationType:n,normalizationField:l,normalizationTotal:t,classificationMethod:e}=i,s=await F({field:o,valueExpression:i.valueExpression,normalizationType:n,normalizationField:l,normalizationTotal:t,viewInfoParams:i.viewInfoParams,fieldInfos:i.fieldInfos},r),m=H(s,{field:o,normalizationType:n,normalizationField:l,normalizationTotal:t,classificationMethod:e,standardDeviationInterval:i.standardDeviationInterval,numClasses:i.numClasses,minValue:i.minValue,maxValue:i.maxValue});return J(m,e)}async function ji(a){const{attribute:i,features:r}=a,{field:o,normalizationType:n,normalizationField:l,normalizationTotal:t,classificationMethod:e}=i,s=await F({field:o,valueExpression:i.valueExpression,normalizationType:n,normalizationField:l,normalizationTotal:t,viewInfoParams:i.viewInfoParams,fieldInfos:i.fieldInfos},r);return K(s,{field:o,normalizationType:n,normalizationField:l,normalizationTotal:t,classificationMethod:e,standardDeviationInterval:i.standardDeviationInterval,numBins:i.numBins,minValue:i.minValue,maxValue:i.maxValue})}async function ki(a){const{attribute:i,features:r}=a,{field:o,radius:n,fieldOffset:l,transform:t,spatialReference:e,size:s}=i,m=ii(r,t,e,s),{count:f,min:d,max:c,mean:I,stdDev:y}=ai(m,n,l,o,s[0],s[1]);return{count:f,min:d,max:c,avg:I,stddev:y}}export{Ri as classBreaks,ki as heatmapStatistics,ji as histogram,Ci as summaryStatistics,Si as uniqueValues};
