import{_ as R}from"./preload-helper-41c905a7.js";import{e as p,y as _,n as b}from"./cast-a534ae90.js";import"./geometry-eec1b371.js";import{B as C,U as x}from"./request-24011425.js";import{a,s as c}from"./Error-57322e92.js";import{r as h,t as f,i as k,q as L}from"./typedArrayUtil-d9bc5fbd.js";import{U as E,D as F}from"./promiseUtils-32d9c228.js";import"./ensureType-25b8cc06.js";import"./string-480f3e3f.js";import{o as O}from"./zscale-48bab05e.js";import{n as N}from"./Evented-cbf5f368.js";import{c as v}from"./query-b7b3a76b.js";import{x as q}from"./Query-13124a97.js";import{v as $}from"./jsonUtils-c6684c52.js";import{k as P}from"./Extent-a1a1de42.js";import"./nextTick-3ee5a785.js";import"./Polyline-b571c705.js";import"./typeUtils-cd52dc20.js";import"./jsonMap-190c5593.js";import"./unitUtils-dd6fb8ee.js";import"./normalizeUtils-0f537694.js";import"./pbfQueryUtils-c922ef32.js";import"./pbf-8b0546e8.js";import"./OptimizedFeature-73582c6e.js";import"./OptimizedFeatureSet-1d1ac4b9.js";import"./queryZScale-3c8de33a.js";import"./TimeExtent-2004eecf.js";import"./enumeration-61a13175.js";import"./Field-1d4f9ca4.js";import"./fieldType-b34e5d2d.js";import"./Clonable-9b34e760.js";let y=class extends N.EventedAccessor{get connectionError(){return this.errorString?new a("stream-connection",this.errorString):null}onFeature(e){this.emit("data-received",e)}};p([_({readOnly:!0})],y.prototype,"connectionError",null),y=p([b("esri.layers.support.StreamConnection")],y);const j=y;var g;(function(e){e[e.CONNECTING=0]="CONNECTING",e[e.OPEN=1]="OPEN",e[e.CLOSING=2]="CLOSING",e[e.CLOSED=3]="CLOSED"})(g||(g={}));let m=class extends j{constructor(e){super(),this.errorString=null;const{geometryType:t,spatialReference:r,sourceSpatialReference:o}=e;this._config=e,this._featureZScaler=O(t,o,r),this._open()}async _open(){await this._tryCreateWebSocket(),this.destroyed||await this._handshake()}destroy(){h(this._websocket)&&(this._websocket.onopen=null,this._websocket.onclose=null,this._websocket.onerror=null,this._websocket.onmessage=null,this._websocket.close()),this._websocket=null}get connectionStatus(){if(f(this._websocket))return"disconnected";switch(this._websocket.readyState){case g.CONNECTING:case g.OPEN:return"connected";case g.CLOSING:case g.CLOSED:return"disconnected"}}async _tryCreateWebSocket(e=this._config.source.path,t=1e3,r=0){try{if(this.destroyed)return;const o=C(e,this._config.customParameters);this._websocket=await this._createWebSocket(o),this.notifyChange("connectionStatus")}catch(o){const s=t/1e3;return this._config.maxReconnectionAttempts&&r>=this._config.maxReconnectionAttempts?(c.getLogger(this.declaredClass).error(new a("websocket-connection","Exceeded maxReconnectionAttempts attempts. No further attempts will be made")),void this.destroy()):(c.getLogger(this.declaredClass).error(new a("websocket-connection",`Failed to connect. Attempting to reconnect in ${s}s`,o)),await E(t),this._tryCreateWebSocket(e,Math.min(1.5*t,1e3*this._config.maxReconnectionInterval),r+1))}}_createWebSocket(e){return new Promise((t,r)=>{const o=new WebSocket(e);o.onopen=()=>{if(o.onopen=null,this.destroyed)return o.onclose=null,void o.close();o.onclose=s=>this._onClose(s),o.onerror=s=>this._onError(s),o.onmessage=s=>this._onMessage(s),t(o)},o.onclose=s=>{o.onopen=o.onclose=null,r(s)}})}async _handshake(e=1e4){const t=this._websocket;if(f(t))return;const r=F(),o=t.onmessage,{filter:s,outFields:n,spatialReference:d}=this._config;return r.timeout(e),t.onmessage=u=>{var i;let l=null;try{l=JSON.parse(u.data)}catch{}l&&typeof l=="object"||(c.getLogger(this.declaredClass).error(new a("websocket-connection","Protocol violation. Handshake failed - malformed message",u.data)),r.reject(),this.destroy()),((i=l.spatialReference)==null?void 0:i.wkid)!==(d==null?void 0:d.wkid)&&(c.getLogger(this.declaredClass).error(new a("websocket-connection",`Protocol violation. Handshake failed - expected wkid of ${d.wkid}`,u.data)),r.reject(),this.destroy()),l.format!=="json"&&(c.getLogger(this.declaredClass).error(new a("websocket-connection","Protocol violation. Handshake failed - format is not set",u.data)),r.reject(),this.destroy()),s&&l.filter!==s&&c.getLogger(this.declaredClass).error(new a("websocket-connection","Tried to set filter, but server doesn't support it")),n&&l.outFields!==n&&c.getLogger(this.declaredClass).error(new a("websocket-connection","Tried to set outFields, but server doesn't support it")),t.onmessage=o,r.resolve()},t.send(JSON.stringify({filter:s,outFields:n,format:"json",spatialReference:{wkid:d.wkid}})),r.promise}_onMessage(e){try{const t=JSON.parse(e.data);if(t.type!=="featureResult")throw new a("websocket-connection","Protocol violation - Expected to find message of type 'featureResult'",t);for(const r of t.features)h(this._featureZScaler)&&this._featureZScaler(r.geometry),this.onFeature(r)}catch(t){return c.getLogger(this.declaredClass).error(new a("websocket-connection","Failed to parse message",t)),void this.destroy()}}_onError(e){const t="Encountered an error over WebSocket connection";this._set("errorString",t),c.getLogger(this.declaredClass).error("websocket-connection",t)}_onClose(e){this._websocket=null,this.notifyChange("connectionStatus"),e.code!==1e3&&c.getLogger(this.declaredClass).error("websocket-connection",`WebSocket closed unexpectedly with error code ${e.code}`),this.destroyed||this._open()}};p([_()],m.prototype,"connectionStatus",null),p([_()],m.prototype,"errorString",void 0),m=p([b("esri.layers.graphics.sources.connections.WebSocketConnection")],m);const W=1e4,D={maxQueryDepth:5,maxRecordCountFactor:3};let w=class extends m{constructor(e){super({...D,...e})}async _open(){const e=await this._fetchServiceDefinition(this._config.source);e.timeInfo.trackIdField||c.getLogger(this.declaredClass).warn("GeoEvent service was configured without a TrackIdField. This may result in certain functionality being disabled. The purgeOptions.maxObservations property will have no effect.");const t=this._fetchWebSocketUrl(e.streamUrls,this._config.spatialReference);this._buddyServicesQuery||(this._buddyServicesQuery=this._queryBuddyServices()),await this._buddyServicesQuery,await this._tryCreateWebSocket(t);const{filter:r,outFields:o}=this._config;this.destroyed||this._setFilter(r,o)}_onMessage(e){let t;try{t=this._enrich(JSON.parse(e.data)),h(this._featureZScaler)&&this._featureZScaler(t.geometry)}catch(r){return void c.getLogger(this.declaredClass).error(new a("geoevent-connection","Failed to parse message",r))}this.onFeature(t)}async _fetchServiceDefinition(e){const t={f:"json",...this._config.customParameters},r=x(e.path,{query:t,responseType:"json"}),o=(await r).data;return this._serviceDefinition=o,o}_fetchWebSocketUrl(e,t){const r=e[0],{urls:o,token:s}=r,n=this._inferWebSocketBaseUrl(o);return C(`${n}/subscribe`,{outSR:""+t.wkid,token:s})}_inferWebSocketBaseUrl(e){if(e.length===1)return e[0];for(const t of e)if(t.includes("wss"))return t;return c.getLogger(this.declaredClass).error(new a("geoevent-connection","Unable to infer WebSocket url",e)),null}async _setFilter(e,t){const r=this._websocket;if(f(r)||f(e)&&f(t))return;const o=JSON.stringify({filter:this._serializeFilter(e,t)});let s=!1;const n=F(),d=()=>{s||(this.destroyed||this._websocket!==r||c.getLogger(this.declaredClass).error(new a("geoevent-connection","Server timed out when setting filter")),n.reject())},u=l=>{const i=JSON.parse(l.data);i.filter&&(i.error&&(c.getLogger(this.declaredClass).error(new a("geoevent-connection","Failed to set service filter",i.error)),this._set("errorString",`Could not set service filter - ${i.error}`),n.reject(i.error)),r.onmessage=this._onMessage.bind(this),s=!0,n.resolve())};return r.onmessage=u,r.send(o),setTimeout(d,W),n.promise}_serializeFilter(e,t){const r={};if(f(e)&&f(t))return r;if(h(e)&&e.geometry)try{const o=$(e.geometry);if(o.type!=="extent")throw new a(`Expected extent but found type ${o.type}`);r.geometry=JSON.stringify(o.shiftCentralMeridian())}catch(o){c.getLogger(this.declaredClass).error(new a("geoevent-connection","Encountered an error when setting connection geometryDefinition",o))}return h(e)&&e.where&&e.where!=="1 = 1"&&(r.where=e.where),h(t)&&(r.outFields=t.join(",")),r}_enrich(e){if(!this._relatedFeatures)return e;const t=this._serviceDefinition.relatedFeatures.joinField,r=e.attributes[t];if(!this._relatedFeatures.has(r))return c.getLogger(this.declaredClass).warn("geoevent-connection","Feature join failed. Is the join field configured correctly?",e),e;const{attributes:o,geometry:s}=this._relatedFeatures.get(r);for(const n in o)e.attributes[n]=o[n];return s&&(e.geometry=s),e.geometry||e.centroid||c.getLogger(this.declaredClass).error(new a("geoevent-connection","Found malformed feature - no geometry found",e)),e}async _queryBuddyServices(){try{const{relatedFeatures:e,keepLatestArchive:t}=this._serviceDefinition,r=this._queryRelatedFeatures(e),o=this._queryArchive(t);await r;const s=await o;if(!s)return;for(const n of s.features)this.onFeature(this._enrich(n))}catch(e){c.getLogger(this.declaredClass).error(new a("geoevent-connection","Encountered an error when querying buddy services",{error:e}))}}async _queryRelatedFeatures(e){if(!e)return;const t=await this._queryBuddy(e.featuresUrl);this._addRelatedFeatures(t)}async _queryArchive(e){if(e)return this._queryBuddy(e.featuresUrl)}async _queryBuddy(e){const t=new(await R(()=>import("./FeatureLayer-534ff006.js"),["./FeatureLayer-534ff006.js","./preload-helper-41c905a7.js","./cast-a534ae90.js","./typedArrayUtil-d9bc5fbd.js","./string-480f3e3f.js","./Error-57322e92.js","./ensureType-25b8cc06.js","./nextTick-3ee5a785.js","./promiseUtils-32d9c228.js","./PopupTemplate-f97bb051.js","./Clonable-9b34e760.js","./Collection-7c37b74e.js","./Evented-cbf5f368.js","./SimpleObservable-8e532943.js","./Extent-a1a1de42.js","./fieldUtils-b2df74c4.js","./arcadeOnDemand-a976a73c.js","./geometry-eec1b371.js","./Polyline-b571c705.js","./typeUtils-cd52dc20.js","./jsonMap-190c5593.js","./enumeration-61a13175.js","./number-2ab8ca0d.js","./locale-30120714.js","./Identifiable-093f90a8.js","./UniqueValueRenderer-73d567ad.js","./symbols-9fcb6cc2.js","./CIMSymbol-72a9d286.js","./Symbol-8266348e.js","./Color-af6e0c66.js","./colorUtils-639f4d25.js","./mathUtils-57aba1ea.js","./vec3-1863987c.js","./vec3f64-6cd30318.js","./common-c186b691.js","./vec4-46a9b36d.js","./screenUtils-90993e16.js","./opacityUtils-1333f803.js","./symbolLayerUtils3D-c8c40895.js","./aaBoundingBox-4a83dbbc.js","./aaBoundingRect-b340cf8c.js","./request-24011425.js","./persistableUrlUtils-d0777bec.js","./collectionUtils-0365f48b.js","./Portal-c6e03126.js","./Loadable-46524a7e.js","./Promise-368b703a.js","./PortalGroup-d495847c.js","./PortalUser-1016c43c.js","./LegendOptions-2e7b3d70.js","./reactiveUtils-5869e41a.js","./diffUtils-8a8cb5bc.js","./colorRamps-8d7efc14.js","./sizeVariableUtils-d4870b0d.js","./Graphic-6c08e65d.js","./jsonUtils-c6684c52.js","./compilerUtils-fefa73ae.js","./lengthUtils-92fed992.js","./unitUtils-dd6fb8ee.js","./jsonUtils-8c02ff16.js","./styleUtils-391927cf.js","./jsonUtils-1c5cdf77.js","./DictionaryLoader-2a334243.js","./LRUCache-b9228ca3.js","./MemCache-1d2f56ee.js","./deprecate-0d93948c.js","./heatmapUtils-3d7c22c5.js","./vec4f64-939de194.js","./MultiOriginJSONSupport-b8792dfa.js","./LayerFloorInfo-f184c8f5.js","./FeatureLayerBase-c0aa3674.js","./Field-1d4f9ca4.js","./fieldType-b34e5d2d.js","./HeightModelInfo-34f16d74.js","./arcgisLayerUrl-bed3cba1.js","./OperationalLayer-9c50475b.js","./TimeExtent-2004eecf.js","./ElevationInfo-80227ecc.js","./RelationshipQuery-c27267ab.js","./Query-13124a97.js","./Layer-cea228f0.js","./HandleOwner-2edbba46.js","./workers-af024c50.js","./Connection-b591250e.js","./Queue-275a6362.js","./assets-cd44347b.js","./intl-7d39a8c0.js","./messages-28bf3b89.js","./editsZScale-12d81957.js","./queryZScale-3c8de33a.js","./zscale-48bab05e.js","./FeatureSet-deb2029d.js","./APIKeyMixin-b6e4f897.js","./ArcGISService-aada3b5d.js","./BlendLayer-813950f9.js","./parser-01f6451e.js","./mat4f32-77b3d8ac.js","./mat4-7dde83b1.js","./CustomParametersMixin-a5d06ccc.js","./EditBusLayer-b5dc3689.js","./FeatureReductionLayer-fcaeb34a.js","./labelingInfo-c70ad911.js","./labelUtils-4f4b54c6.js","./defaultsJSON-59981e75.js","./OrderedLayer-9623e905.js","./PortalLayer-12f4a535.js","./asyncUtils-087555fc.js","./PortalItem-e4ba4b94.js","./RefreshableLayer-49182ab8.js","./ScaleRangeLayer-c072e266.js","./TemporalLayer-c74d13d4.js","./TimeInfo-f76d6c20.js","./FeatureTemplate-c4496b93.js","./FeatureType-0be9420b.js","./fieldProperties-4207e953.js","./FieldsIndex-02142c8a.js","./versionUtils-fabd8b3a.js","./styleUtils-08eaa4d2.js","./TopFeaturesQuery-9aca00bf.js","./popupUtils-1ecc877c.js"],import.meta.url)).default({url:e}),{capabilities:r}=await t.load(),o=r.query.supportsMaxRecordCountFactor,s=r.query.supportsPagination,n=r.query.supportsCentroid,d=this._config.maxRecordCountFactor,u=t.capabilities.query.maxRecordCount,l=o?u*d:u,i=new q;if(i.outFields=k(this._config.outFields,["*"]),i.where=k(L(this._config.filter,"where"),"1=1"),i.returnGeometry=!0,i.returnExceededLimitFeatures=!0,i.outSpatialReference=P.fromJSON(this._config.spatialReference),n&&(i.returnCentroid=!0),o&&(i.maxRecordCountFactor=d),s)return i.num=l,t.destroy(),this._queryPages(e,i);const S=await v(e,i,this._config.sourceSpatialReference);return t.destroy(),S.data}async _queryPages(e,t,r=[],o=0){t.start=h(t.num)?o*t.num:null;const{data:s}=await v(e,t,this._config.sourceSpatialReference);return s.exceededTransferLimit&&o<this._config.maxQueryDepth?(s.features.forEach(n=>r.push(n)),this._queryPages(e,t,r,o+1)):(r.forEach(n=>s.features.push(n)),s)}_addRelatedFeatures(e){const t=new Map,r=e.features,o=this._serviceDefinition.relatedFeatures.joinField;for(const s of r){const n=s.attributes[o];t.set(n,s)}this._relatedFeatures=t}};w=p([b("esri.layers.graphics.sources.connections.GeoEventConnection")],w);const T=w;function pe(e,t,r,o,s,n,d,u){const l=e.path.indexOf("wss://")===0||e.path.indexOf("ws://")===0,i={source:e,sourceSpatialReference:t,spatialReference:r,geometryType:o,filter:s,maxReconnectionAttempts:n,maxReconnectionInterval:d,customParameters:u};return l?new m(i):new T(i)}export{pe as createConnection};
