import{e as o,y as r,n as L,c as dt}from"./cast-a534ae90.js";import{g as yt}from"./Graphic-6c08e65d.js";import{y as mt}from"./string-480f3e3f.js";import{n as ft}from"./Evented-cbf5f368.js";import{a as gt}from"./HandleOwner-2edbba46.js";import{a as vt,m as B,r as c,t as f,s as D,e as wt,o as xt,i as _}from"./typedArrayUtil-d9bc5fbd.js";import{e as E,j as G,U as A,a as Q,m as _t,b as q,c as Ot}from"./automaticLengthMeasurementUtils-83ea356f.js";import{l as W,w as X}from"./reactiveUtils-5869e41a.js";import{$ as Tt,L as Mt}from"./unitUtils-dd6fb8ee.js";import"./ensureType-25b8cc06.js";import{h as $t}from"./GraphicsLayer-b332f442.js";import{g as Gt}from"./elevationInfoUtils-c3025fae.js";import"./geometry-eec1b371.js";import{A as Vt}from"./vec3-1863987c.js";import{n as nt}from"./vec3f64-6cd30318.js";import{h as u,i as bt,j as zt,k as at,l as lt,o as Y}from"./index-40f88256.js";import{simplify as It,distance as St}from"./geometryEngine-0f4f9d5a.js";import{u as Rt,m as Ct,q as st,v as Pt,p as Ut,y as Lt}from"./Polyline-b571c705.js";import{I as pt,w as Dt}from"./Extent-a1a1de42.js";import{i as tt}from"./automaticAreaMeasurementUtils-26544a0e.js";function I(t,i){const l=new Dt({x:t[0],y:t[1],spatialReference:i});return t.length>2&&(l.z=t[2]),l}function kt(t,i){return new Rt({points:t,spatialReference:i})}function et(t,i,l){const n=new Ct({paths:t,spatialReference:i});return l&&st(n),n}function U(t,i,l,n=!0){const p=mt(t);p.forEach(a=>{const d=a[0],h=a[a.length-1];vt(d,h)&&a.length!==1||a.push(a[0])});let e=new Pt({rings:p,spatialReference:i});return e.rings.forEach(a=>{Ut(a,!1,!1)||a.reverse()}),l&&st(e),n&&e.isSelfIntersecting&&pt(i)&&(e=It(e)),e}function it(t,i,l){const n=i.mapToLocalMultiple(t),p=[],e={x:n[0].x,y:n[0].y},a={x:n[1].x,y:n[1].y},d=Math.round(a.x-e.x),h=Math.round(a.y-e.y),y=Math.max(Math.abs(d),Math.abs(h));if(l){const m={x:e.x+y,y:e.y+y},v={x:e.x-y,y:e.y-y};p.push(u(m.x,v.y),u(v.x,v.y),u(v.x,m.y),u(m.x,m.y))}else{const m={x:d>0?e.x+y:e.x-y,y:h>0?e.y+y:e.y-y};p.push(u(e.x,e.y),u(m.x,e.y),u(m.x,m.y),u(e.x,m.y))}return ct(U([B(p.map(m=>i.localToMap(m)))],i.spatialReference,i.doUnnormalization,!0),p,i)}function At(t,i,l){let n=i.mapToLocalMultiple(t);if(n.length===1){const h=n[0];n=[u(h.x-48,h.y+48),u(h.x+48,h.y-48),u(h.x+48,h.y-48),u(h.x-48,h.y+48)]}const p=[],e={x:n[0].x,y:n[0].y},a={x:n[1].x,y:n[1].y};if(l){const d=Math.round(a.x-e.x),h=Math.round(a.y-e.y);p.push(u(e.x-d,e.y-h),u(a.x,e.y-h),u(a.x,a.y),u(e.x-d,a.y))}else p.push(u(e.x,e.y),u(a.x,e.y),u(a.x,a.y),u(e.x,a.y));return ct(U([B(p.map(d=>i.localToMap(d)))],i.spatialReference,i.doUnnormalization,!0),p,i)}function ct(t,i,l){const n=j(i[3],i[2],l),p=j(i[1],i[2],l),e=j(i[0],i[1],l),a=j(i[0],i[3],l);return{geometry:t,midpoints:c(n)&&c(p)&&c(e)&&c(a)?{top:n,right:p,bottom:e,left:a}:null}}function j(t,i,l){C[0]=t.x,C[1]=t.y,C[2]=0,P[0]=i.x,P[1]=i.y,P[2]=0,Vt(C,C,P,.5),H.x=C[0],H.y=P[1],H.z=P[2];const n=l.localToMap(H);return c(n)?I(n,l.spatialReference):null}const H=u(0,0,0),C=nt(),P=nt();function ot(t,i,l,n){const p=i.mapToLocalMultiple(t);let e=null,a=null;if(l)e=p[0],a=p[1];else{const g=p[0],w=p[1],S=Math.round(w.x-g.x),R=Math.round(w.y-g.y),x=Math.max(Math.abs(S),Math.abs(R));e=u(S>0?g.x+x/2:g.x-x/2,R>0?g.y+x/2:g.y-x/2),a=u(Math.abs(S)>Math.abs(R)?e.x-x/2:e.x,Math.abs(S)>Math.abs(R)?e.y:e.y-x/2)}const d=i.localToMap(e),h=i.localToMap(a);if(f(d)||f(h))return null;i.doUnnormalization&&Lt([[d,h]],i.spatialReference);const y=I(d,i.spatialReference),m=I(h,i.spatialReference),v=Tt(i.spatialReference);let T=0;if(pt(i.spatialReference))T=v*St(y,m,null);else{const g=e.x-a.x,w=e.y-a.y;T=v*Math.sqrt(g*g+w*w)*(n||1)}const Z=new bt({center:y,radius:T,radiusUnit:"meters",spatialReference:i.spatialReference});return{geometry:U(Z.rings,Z.spatialReference,!1),center:y,edge:m}}function Et(t,i,l){const n=i.mapToLocalMultiple(t),p=n[0],e=n[1],a=Math.round(e.x-p.x),d=Math.round(e.y-p.y),h=u(l?p.x:p.x+a/2,l?p.y:p.y+d/2),y=l?a:a/2,m=l?d:d/2,v=60,T=[],Z=2*Math.PI/v;function g(M){const ht=Math.cos(M),ut=Math.sin(M);return u(y*ht+h.x,m*ut+h.y)}for(let M=0;M<v;M++)T.push(g(M*Z));T.push(T[0]);const{spatialReference:w,doUnnormalization:S}=i,R=U([B(T.map(M=>i.localToMap(M)))],w,S,!1),x=i.localToMap(g(Math.PI/2)),F=i.localToMap(g(0)),J=i.localToMap(g(-Math.PI/2)),K=i.localToMap(g(Math.PI));return{geometry:R,midpoints:c(x)&&c(F)&&c(J)&&c(K)?{top:I(x,w),right:I(F,w),bottom:I(J,w),left:I(K,w)}:null}}let k=class extends E{constructor(t){super(t),this.type="draw-point"}};o([r()],k.prototype,"type",void 0),o([r()],k.prototype,"elevation",void 0),k=o([L("esri.views.interactive.tooltip.DrawPointTooltipInfo")],k);let V=class extends E{constructor(t){super(t),this.type="draw-polyline"}};o([r()],V.prototype,"type",void 0),o([r()],V.prototype,"elevation",void 0),o([r()],V.prototype,"totalLength",void 0),o([r()],V.prototype,"viewType",void 0),V=o([L("esri.views.interactive.tooltip.DrawPolylineTooltipInfo")],V);let b=class extends E{constructor(t){super(t),this.type="draw-polygon"}};o([r()],b.prototype,"type",void 0),o([r()],b.prototype,"elevation",void 0),o([r()],b.prototype,"area",void 0),o([r()],b.prototype,"viewType",void 0),b=o([L("esri.views.interactive.tooltip.DrawPolygonTooltipInfo")],b);let z=class extends E{constructor(t){super(t),this.type="draw-rectangle",this.xSize=G,this.ySize=G,this.area=A}};o([r()],z.prototype,"type",void 0),o([r()],z.prototype,"xSize",void 0),o([r()],z.prototype,"ySize",void 0),o([r()],z.prototype,"area",void 0),z=o([L("esri.views.interactive.tooltip.DrawRectangleTooltipInfo")],z);let $=class extends E{constructor(t){super(t),this.type="draw-circle",this.radius=null,this.xSize=null,this.ySize=null,this.area=A}};o([r()],$.prototype,"type",void 0),o([r()],$.prototype,"radius",void 0),o([r()],$.prototype,"xSize",void 0),o([r()],$.prototype,"ySize",void 0),o([r()],$.prototype,"area",void 0),$=o([L("esri.views.interactive.tooltip.DrawCircleTooltipInfo")],$);let s=class extends gt(ft.EventedMixin(zt)){constructor(t){super(t),this._graphic=null,this._createOperationGeometry=null,this.defaultZ=0,this.geometryType=null,this.hasZ=!0,this.labelOptions=new at,this.mode=null,this.snappingManager=null,this.snapToScene=!1,this.tooltip=null,this.tooltipOptions=new lt}initialize(){this.internalGraphicsLayer=new $t({listMode:"hide",internal:!0}),this.view.map.layers.add(this.internalGraphicsLayer),this.drawOperation=this.makeDrawOperation(),this.handles.add([this.drawOperation.on("vertex-add",t=>this.onVertexAdd(t)),this.drawOperation.on("vertex-remove",t=>this.onVertexRemove(t)),this.drawOperation.on("vertex-update",t=>this.onVertexUpdate(t)),this.drawOperation.on("cursor-update",t=>this.onCursorUpdate(t)),this.drawOperation.on("complete",t=>this.onComplete(t)),W(()=>this.tooltipOptions.enabled,t=>{this.tooltip=t?new Ot({view:this.view,info:this._tooltipInfo}):D(this.tooltip)},X),W(()=>this._tooltipInfo,t=>{c(this.tooltip)&&(this.tooltip.info=t)},X)]),this.finishToolCreation()}destroy(){this.drawOperation=D(this.drawOperation),this.tooltip=D(this.tooltip),this._destroyAllVisualisations(),this.view.map.remove(this.internalGraphicsLayer),this.internalGraphicsLayer=D(this.internalGraphicsLayer),this._set("view",null)}get _defaultElevation(){return Q(this.defaultZ,"meters")}get canRedo(){return this.drawOperation.canRedo}get canUndo(){return this.drawOperation.canUndo}set centered(t){this._set("centered",t),this._updateGraphic()}set enabled(t){this.drawOperation.interactive=t,this._set("enabled",t)}set forceUniformSize(t){this._set("forceUniformSize",t),this._updateGraphic()}get graphic(){return this._graphic}set graphicSymbol(t){this._set("graphicSymbol",t),c(this._graphic)&&(this._graphic.symbol=t)}get updating(){var t;return((t=this.drawOperation)==null?void 0:t.updating)??!1}completeCreateOperation(){this.drawOperation.complete()}onInputEvent(t){this.drawOperation.onInputEvent(t)}redo(){this.drawOperation.redo()}reset(){}undo(){this.drawOperation.undo()}_createGraphic(t){this._graphic=new yt({...this.graphicProperties,geometry:t,symbol:this.graphicSymbol}),this.internalGraphicsLayer.add(this._graphic),this.handles.add(this.initializeGraphic(this._graphic)),this.notifyChange("graphic"),this.handles.add(dt(()=>{c(this._graphic)&&(this.internalGraphicsLayer.remove(this._graphic),this._graphic=D(this._graphic))}),N)}_destroyAllVisualisations(){this.handles.remove(O.outline),this.handles.remove(O.regularVertices),this.handles.remove(O.activeVertex),this.handles.remove(N)}_getCreateOperationGeometry(t={operationComplete:!1}){if(this.drawOperation==null||this.drawOperation.numVertices===0)return null;const i=this.drawOperation.stagedVertex,l=this.drawOperation.committedVertices,n=l.slice();c(i)&&n.push(this.drawOperation.coordinateHelper.pointToArray(i));const p=c(i)?this.drawOperation.coordinateHelper.pointToArray(i):l.splice(-1)[0],e={regularVertices:null,activeVertex:null,full:null,outline:null,circle:null,rectangle:null},a=n.length,d=this.view.spatialReference,h=this.view.type==="3d"&&this.view.viewingMode==="global";switch(this.geometryType){case"point":e.regularVertices=l,e.activeVertex=p,e.full=this.drawOperation.coordinateHelper.arrayToPoint(n[0]);break;case"multipoint":e.regularVertices=l,e.activeVertex=p,a>0&&(e.full=kt(n,d));break;case"polyline":e.regularVertices=l,e.activeVertex=p,a>0&&(e.full=et([n],d,h));break;case"polygon":e.regularVertices=l,e.activeVertex=p,a>0&&(e.full=U([n],d,h,!0));break;case"circle":if(a>0){const y=Y(this.view,n[0]);if(a===1&&t.operationComplete){const m=n[0],v=y.makeMapPoint(m[0]+rt*this.view.resolution,m[1]);e.circle=ot([m,v],y,!0),e.full=c(e.circle)?e.circle.geometry:null}else a===2&&(this.forceUniformSize?(e.circle=ot(n,y,this.centered),e.full=c(e.circle)?e.circle.geometry:null):(e.rectangle=Et(n,y,this.centered),e.full=e.rectangle.geometry))}break;case"rectangle":if(a>0){const y=Y(this.view,n[0]);if(a===1&&t.operationComplete){const m=n[0],v=y.makeMapPoint(m[0]+rt*this.view.resolution,m[1]);e.rectangle=it([m,v],y,!0),e.full=e.rectangle.geometry}else a===2&&(e.rectangle=this.forceUniformSize?it(n,y,this.centered):At(n,y,this.centered),e.full=e.rectangle.geometry)}break;default:return null}switch(this.geometryType){case"point":case"multipoint":break;case"polyline":case"polygon":a>1&&(e.outline=et([n],d,h));break;case"circle":case"rectangle":c(e.full)&&e.full.type==="polygon"&&(e.outline=U(e.full.rings,d,h))}return e}initializeGraphic(t){return null}onComplete(t){this._updateGraphic();let i=null;if(this.drawOperation.isCompleted){const l=this._getCreateOperationGeometry({operationComplete:!0});c(l)&&(f(this._graphic)?this._createGraphic(l.full):this._graphic.geometry=l.full,i=wt(this._graphic).clone())}this._createOperationGeometry=null,this.emit("complete",{graphic:i,...t})}onCursorUpdate(t){this._updateGraphic(),this.emit("cursor-update",t)}onDeactivate(){this.drawOperation.isCompleted||this.drawOperation.cancel()}onVertexAdd(t){this._updateGraphic(),this.emit("vertex-add",t)}onVertexRemove(t){this._updateGraphic(),this.emit("vertex-remove",t)}onVertexUpdate(t){this._updateGraphic(),this.emit("vertex-update",t)}_updateGraphic(){const t=this._getCreateOperationGeometry();this._createOperationGeometry=t,f(t)?this._destroyAllVisualisations():(c(t.outline)?this.handles.add(this.onOutlineChanged(t.outline),O.outline):this.handles.remove(O.outline),c(t.regularVertices)?this.handles.add(this.onRegularVerticesChanged(t.regularVertices),O.regularVertices):this.handles.remove(O.regularVertices),c(t.activeVertex)?this.handles.add(this.onActiveVertexChanged(t.activeVertex),O.activeVertex):this.handles.remove(O.activeVertex),c(t.full)?f(this._graphic)?this._createGraphic(t.full):this._graphic.geometry=t.full:this.handles.remove(N))}get _tooltipInfo(){const{drawOperation:t}=this;if(!t)return null;switch(this.geometryType){case"point":return this._drawPointTooltipInfo;case"polyline":return this._drawPolylineTooltipInfo;case"polygon":return this._drawPolygonTooltipInfo;case"rectangle":return this._drawRectangleTooltipInfo;case"circle":return this._drawCircleTooltipInfo;default:return null}}get _drawPointTooltipInfo(){const t=xt(this.graphic,i=>i.geometry);return f(t)||t.type!=="point"||this.view.type==="2d"&&this.defaultZ===0?null:new k({tooltipOptions:this.tooltipOptions,elevation:this._elevationTooltipDetail})}get _drawPolylineTooltipInfo(){const t=this._createOperationGeometry,i=c(t)?t.full:null;if(f(i)||i.type!=="polyline")return null;const l=_t(i,this._elevationMode);return new V({tooltipOptions:this.tooltipOptions,elevation:this._elevationTooltipDetail,totalLength:_(l,G),viewType:this.view.type})}get _drawPolygonTooltipInfo(){const t=this._createOperationGeometry,i=c(t)?t.full:null;if(f(i)||i.type!=="polygon")return null;const l=tt(i,this._elevationMode);return new b({tooltipOptions:this.tooltipOptions,elevation:this._elevationTooltipDetail,area:_(l,A),viewType:this.view.type})}get _drawRectangleTooltipInfo(){return f(this.drawOperation)?null:new z({tooltipOptions:this.tooltipOptions,xSize:_(this._xSize,G),ySize:_(this._ySize,G),area:_(this._fullGeometryArea,A)})}get _drawCircleTooltipInfo(){if(f(this.drawOperation))return null;const t=this.forceUniformSize;return new $({tooltipOptions:this.tooltipOptions,radius:t?_(this._circleRadius,G):null,xSize:t?null:_(this._xSize,G),ySize:t?null:_(this._ySize,G),area:_(this._fullGeometryArea,A)})}get _circleRadius(){const t=this._createOperationGeometry;return c(t)&&c(t.circle)&&c(t.circle.center)&&c(t.circle.edge)?q(t.circle.center,t.circle.edge,this._elevationMode):null}get _xSize(){const t=this._createOperationGeometry;if(f(t)||f(t.rectangle))return null;const{midpoints:i}=t.rectangle;return c(i)?q(i.left,i.right,this._elevationMode):null}get _ySize(){const t=this._createOperationGeometry;if(f(t)||f(t.rectangle))return null;const{midpoints:i}=t.rectangle;return c(i)?q(i.top,i.bottom,this._elevationMode):null}get _fullGeometryArea(){const t=this._createOperationGeometry,i=c(t)?t.full:null;return f(i)||i.type!=="polygon"?null:tt(i,this._elevationMode)}get _elevationTooltipDetail(){return{mode:this.drawOperation.elevationInfo.mode,...this._vertexTooltipElevation}}get _vertexTooltipElevation(){const{tooltipOptions:t,view:i,drawOperation:l}=this;if(f(l))return this._defaultElevation;const n=l.stagedVertex??l.lastVertex;if(f(n)||i.type==="2d")return this._defaultElevation;const p={mode:t.elevation.mode,offset:0},e=Gt(i,n,l.elevationInfo,p)*Mt(n.spatialReference);return Q(e,"meters")}get _elevationMode(){return this.drawOperation.isDraped?"on-the-ground":"absolute-height"}};o([r()],s.prototype,"_createOperationGeometry",void 0),o([r()],s.prototype,"_defaultElevation",null),o([r({value:!0})],s.prototype,"centered",null),o([r({nonNullable:!0})],s.prototype,"defaultZ",void 0),o([r()],s.prototype,"drawOperation",void 0),o([r({value:!0})],s.prototype,"enabled",null),o([r({value:!0})],s.prototype,"forceUniformSize",null),o([r({constructOnly:!0})],s.prototype,"geometryType",void 0),o([r()],s.prototype,"graphic",null),o([r({constructOnly:!0})],s.prototype,"graphicProperties",void 0),o([r()],s.prototype,"graphicSymbol",null),o([r({constructOnly:!0})],s.prototype,"hasZ",void 0),o([r({constructOnly:!0,type:at})],s.prototype,"labelOptions",void 0),o([r({constructOnly:!0})],s.prototype,"mode",void 0),o([r()],s.prototype,"snappingManager",void 0),o([r()],s.prototype,"snapToScene",void 0),o([r()],s.prototype,"tooltip",void 0),o([r({constructOnly:!0,type:lt})],s.prototype,"tooltipOptions",void 0),o([r({readOnly:!0})],s.prototype,"type",void 0),o([r({readOnly:!0})],s.prototype,"updating",null),o([r({constructOnly:!0,nonNullable:!0})],s.prototype,"view",void 0),o([r()],s.prototype,"_tooltipInfo",null),o([r()],s.prototype,"_drawPointTooltipInfo",null),o([r()],s.prototype,"_drawPolylineTooltipInfo",null),o([r()],s.prototype,"_drawPolygonTooltipInfo",null),o([r()],s.prototype,"_drawRectangleTooltipInfo",null),o([r()],s.prototype,"_drawCircleTooltipInfo",null),o([r()],s.prototype,"_circleRadius",null),o([r()],s.prototype,"_xSize",null),o([r()],s.prototype,"_ySize",null),o([r()],s.prototype,"_fullGeometryArea",null),o([r()],s.prototype,"_elevationTooltipDetail",null),o([r()],s.prototype,"_vertexTooltipElevation",null),o([r()],s.prototype,"_elevationMode",null),s=o([L("esri.views.draw.DrawGraphicTool")],s);const N="create-operation-graphic",O={outline:"outline-visual",regularVertices:"regular-vertices-visual",activeVertex:"active-vertex-visual"};function le(t){switch(t){case"point":case"polyline":case"polygon":case"multipoint":return t;case"circle":case"rectangle":return"segment";default:return null}}const rt=48;export{s as Z,le as q};
