import{t as R,r as b}from"./typedArrayUtil-d9bc5fbd.js";import{i as k,o as m,r as C}from"./automaticLengthMeasurementUtils-83ea356f.js";import{s as v}from"./unitUtils-dd6fb8ee.js";import{x as M}from"./earcut-58237617.js";import{o as $,q as U,v as w}from"./vec3-1863987c.js";import{n as p}from"./vec3f64-6cd30318.js";import{j as x,W as A}from"./projection-acd73147.js";import{j as S,E,Y as F,J as G}from"./plane-46a8c767.js";import{S as J}from"./triangle-8cd02c5d.js";import"./geometry-eec1b371.js";import{geodesicArea as K}from"./geometryEngine-0f4f9d5a.js";import{K as q}from"./index-40f88256.js";import{k as Y}from"./Extent-a1a1de42.js";function Z(r,t=l()){return j(r,t)}function z(r,t=l()){return j(r,t,!1)}function j(r,t,s=r.hasZ){const u=k(r.spatialReference),i=v(u);if(R(i))return null;const y=(f,e)=>!(e.length<2)&&($(f,e[0],e[1],s&&e[2]||0),!0);let h=0;for(const f of r.rings){const e=f.length;if(e<3)continue;const{positionsWorldCoords:o}=t;for(;o.length<e;)o.push(p());const g=B,a=$(D,0,0,0),W=1/e;for(let n=0;n<e;n++){if(!y(g,f[n])||!x(g,r.spatialReference,o[n],u))return null;U(a,a,o[n],W)}const d=S(o[0],o[1],a,E());if(w(F(d))===0)continue;for(let n=0;n<e;n++)G(d,a,o[n],o[n]);const c=H(o);for(let n=0;n<c.length;n+=3)h+=J(o[c[n]],o[c[n+1]],o[c[n+2]])}return m(h,i)}const B=p(),D=p();function l(){return{positionsWorldCoords:[]}}function H(r){return M(I(r),[],2)}function I(r){const t=new Float64Array(2*r.length);for(let s=0;s<r.length;++s){const u=r[s],i=2*s;t[i+0]=u[0],t[i+1]=u[1]}return t}function L(r){const{spatialReference:t}=r;return C(t,N,O,P,r)}function N(r){return m(Math.abs(q([r],"square-meters")[0]),"square-meters")}function O(r){try{return m(Math.abs(K(r,"square-meters")),"square-meters")}catch{return null}}function P(r){const t=[];return A(r,t)?m(Math.abs(q([{type:"polygon",rings:t,spatialReference:Y.WGS84}],"square-meters")[0]),"square-meters"):null}function Q(r,t,s=l()){if(t==="on-the-ground"){const u=L(r);return b(u)?u:z(r,s)}return Z(r,s)}function ar(r,t=l()){return Q(r,"on-the-ground",t)}export{Q as i,ar as u};
