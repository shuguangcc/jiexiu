import{c as x,s as d,t as $}from"./symbols-9fcb6cc2.js";import{c as F,a as h}from"./devEnvironmentUtils-5002a058.js";import{a as w}from"./Error-57322e92.js";import{f as M,r as N}from"./typedArrayUtil-d9bc5fbd.js";import{j as u,O as S}from"./request-24011425.js";import{j as U}from"./Portal-c6e03126.js";import{c as g}from"./persistableUrlUtils-d0777bec.js";import{p as j}from"./jsonUtils-8c02ff16.js";import{c as R,d as T,b as D,p as O,w as W}from"./styleUtils-391927cf.js";import"./ensureType-25b8cc06.js";import"./string-480f3e3f.js";import"./cast-a534ae90.js";import"./nextTick-3ee5a785.js";import"./promiseUtils-32d9c228.js";import"./CIMSymbol-72a9d286.js";import"./enumeration-61a13175.js";import"./jsonMap-190c5593.js";import"./Extent-a1a1de42.js";import"./fieldUtils-b2df74c4.js";import"./preload-helper-41c905a7.js";import"./arcadeOnDemand-a976a73c.js";import"./geometry-eec1b371.js";import"./Polyline-b571c705.js";import"./typeUtils-cd52dc20.js";import"./Symbol-8266348e.js";import"./Color-af6e0c66.js";import"./colorUtils-639f4d25.js";import"./mathUtils-57aba1ea.js";import"./vec3-1863987c.js";import"./vec3f64-6cd30318.js";import"./common-c186b691.js";import"./vec4-46a9b36d.js";import"./screenUtils-90993e16.js";import"./opacityUtils-1333f803.js";import"./symbolLayerUtils3D-c8c40895.js";import"./aaBoundingBox-4a83dbbc.js";import"./aaBoundingRect-b340cf8c.js";import"./Collection-7c37b74e.js";import"./Evented-cbf5f368.js";import"./SimpleObservable-8e532943.js";import"./collectionUtils-0365f48b.js";import"./Clonable-9b34e760.js";import"./Loadable-46524a7e.js";import"./Promise-368b703a.js";import"./locale-30120714.js";import"./PortalGroup-d495847c.js";import"./PortalUser-1016c43c.js";function Ft(t,r,o,m){return t.name?t.styleName&&t.styleName==="Esri2DPointSymbolsStyle"?q(t,r,m):R(t,r,m).then(a=>k(M(a),t.name,r,o,m)):Promise.reject(new w("symbolstyleutils:style-symbol-reference-name-missing","Missing name in style symbol reference"))}function k(t,r,o,m,a){var b;const y=t.data,l=o&&N(o.portal)?o.portal:U.getDefault(),c={portal:l,url:u(t.baseUrl),origin:"portal-item"},p=y.items.find(e=>e.name===r);if(!p){const e=`The symbol name '${r}' could not be found`;return Promise.reject(new w("symbolstyleutils:symbol-name-not-found",e,{symbolName:r}))}let n=g(T(p,m),c),s=((b=p.thumbnail)==null?void 0:b.href)??null;const f=p.thumbnail&&p.thumbnail.imageData;F()&&(n=h(n)??"",s=h(s));const P={portal:l,url:u(S(n)),origin:"portal-item"};return D(n,a).then(e=>{const E=m==="cimRef"?O(e.data):e.data,i=j(E,P);if(i&&x(i)){if(s){const v=g(s,c);i.thumbnail=new d({url:v})}else f&&(i.thumbnail=new d({url:`data:image/png;base64,${f}`}));t.styleUrl?i.styleOrigin=new $({portal:o.portal,styleUrl:t.styleUrl,name:r}):t.styleName&&(i.styleOrigin=new $({portal:o.portal,styleName:t.styleName,name:r}))}return i})}function q(t,r,o){const m=W.replace(/\{SymbolName\}/gi,t.name),a=N(r.portal)?r.portal:U.getDefault();return D(m,o).then(y=>{const l=O(y.data);return j(l,{portal:a,url:u(S(m)),origin:"portal-item"})})}export{k as fetchSymbolFromStyle,Ft as resolveWebStyleSymbol};
