import{O as q,A as qs,x as yt,r as z,o as U,e as ie,_ as Je,z as oe,g as W,u as ee,P as st,s as rt,S as pn,F as Dr,J as Xs,Z as Zs,X as fn,H as mn,j as gn}from"./vec3-1863987c.js";import{r as se,n as Q,t as Js}from"./vec3f32-4322908d.js";import{t as ni,r as nr,n as I,e as vn,l as _n,b as yn}from"./vec3f64-6cd30318.js";import{l as ls,p as at,_ as Sn,q as xn,j as ut,R as ae,Y as li}from"./plane-46a8c767.js";import{R as wn,C as Tn,p as On,d as ht,f as Cn,h as bn,b as cs}from"./sphere-622880b9.js";import{u as ds,i as hs,g as Ci,o as K,W as Xe,c as Er,A as bi,l as Cs,b as lr,E as to,_ as it,d as An,a as Rn,h as Pn,e as ro,n as bs,S as io,j as Qs,O as Dn,f as so}from"./OrderIndependentTransparency-68bd812c.js";import{M as ao,h as oo,N as us,O as ps,i as $e,c as S,l as w,x as gr,e as Jt,P as si,Q as Ir,R as no,k as As,L as En,T as In,U as lo,V as Rs,v as jr,a as cr,W as co,X as $n,s as Ps,n as pt,p as Ai,w as Ne,b as vr,o as _r,H as ci,I as di,J as Ds,f as j,t as yr,Y as Ys,Z as Mn,_ as Ln,$ as Nn,a0 as ho,y as Ur,g as gt,a1 as Ri,j as uo,A as Pi,a2 as Fn,a3 as po,a4 as zn,q as jn,a5 as fo,a6 as Un,a7 as Vn,G as Ks,a8 as Di,E as Vr,a9 as Hn,aa as Gn,ab as Bn,ac as ea,ad as Wn,K as kn,ae as qn,F as Xn,af as Zn,ag as Jn,ah as ta,ai as Qn,D as mo,m as Es,aj as go,ak as Yn,z as vo,C as Is,d as _o,al as zi,am as Kn,an as el,ao as ra,ap as tl,aq as ji,ar as yo,as as So,at as rl,au as il,av as sl,aw as al,ax as xo,ay as ol,az as nl,r as ll,aA as cl,aB as dl,aC as hl,aD as ul,aE as pl,aF as fl,u as ml,aG as gl,aH as vl}from"./SSAOHelper-868f5969.js";import{u as _l}from"./Indices-d9b791ce.js";import{e as de,M as wo,g as yl,l as Sl,k as xl,m as wl,f as Tl,s as Ut,u as kr,h as Ol}from"./Util-289ce3b5.js";import{O as u}from"./VertexAttribute-9c5c630d.js";import{r as C,t as V,s as Cl,J as Le,i as k,z as bl,e as Al,P as Rl}from"./typedArrayUtil-d9bc5fbd.js";import{r as Pl,n as Dl}from"./ElevationInfo-88554f24.js";import{s as Hr}from"./Error-57322e92.js";import{f as El}from"./promiseUtils-32d9c228.js";import{av as Il,a0 as $l,a3 as Ml,aw as re,ax as ai,ay as ia}from"./index-7dfdb274.js";import{i as Ll}from"./arcadeOnDemand-5175e7d9.js";import{h as vt}from"./string-480f3e3f.js";import{a as tr,h as It,l as Nl}from"./mathUtils-57aba1ea.js";import{a as sa}from"./mat3-9a8d9db7.js";import{a as $s}from"./quatf64-c94bd656.js";import{n as qe,u as Mt,m as Fl,b as zl,l as jl,h as rr,A as Ul,o as To,Q as Oo,c as aa,F as Co,x as Vl}from"./mat4-7dde83b1.js";import{e as X,r as Hl,o as dr}from"./mat4f64-fbeb2cd1.js";import{a as Sr,r as Lt,H as Gl,E as Bl,s as Ot,l as qt,A as Tr,b as oa,o as Xt,j as ge,g as Wl,v as na}from"./vec2-ab9f47bf.js";import{i as kl,n as Y,r as Ms}from"./vec2f64-30dc1443.js";import{l as Ls,n as Qe,_ as Ei,t as ql,r as hr}from"./vec4f64-939de194.js";import{u as ir,z as la,a as Xl}from"./aaBoundingRect-b340cf8c.js";import{x as Zl,i as Jl,u as Ql}from"./BufferView-478024d2.js";import{T as wt}from"./InterleavedLayout-b5930508.js";import{e as Ae}from"./SSAO.glsl-3068f7bf.js";import{o as H,n as g,t as Yl,d as Ns,g as hi,u as bo,r as Kl,b as Gr,e as _t,f as Nt,a as Fs,i as ec,h as tc,j as rc}from"./ScreenSpacePass-6db805f2.js";import{_ as xr}from"./preload-helper-101896b7.js";import{l as St}from"./ViewingMode-915d19cb.js";import{r as Ii}from"./context-util-d4c193b5.js";import{P as ur,G as Lr,D as pr,E as fr,R as Ze,I as ic,Y as Ao,V as Ro,M as $r,L as ui,_ as pi,F as sc}from"./enums-64ab819c.js";import{h as Br,N as Ee,t as Po,e as v,d as ac,U as oc,y as ze,n as Do,m as Eo,V as Ui}from"./cast-a534ae90.js";import{p as nc,x as fi,Z as lc,m as cc}from"./projection-0af97a56.js";import{$ as dc,u as hc}from"./unitUtils-dd6fb8ee.js";import{c as mi,l as Io}from"./triangulationUtils-6b510de4.js";import{n as uc}from"./compilerUtils-fefa73ae.js";import{r as Nr,a as qr,D as ca,b as da,w as Qt}from"./vec4-46a9b36d.js";import{I as pc,y as fc,N as mc}from"./aaBoundingBox-4a83dbbc.js";import{t as gc,w as vc,o as _c}from"./Polyline-b571c705.js";import{v as zs}from"./dehydratedFeatures-3dcd65f1.js";import{n as $o}from"./Evented-cbf5f368.js";import{e as yc,n as ft}from"./ensureType-25b8cc06.js";import{l as Vi,w as ha,a as Sc}from"./reactiveUtils-5869e41a.js";import{n as xc}from"./vec2f32-461e65a9.js";import{x as Mo,u as wc,E as Tc,n as Oc}from"./VertexArrayObject-3630ef4f.js";import{t as Lo}from"./NestedMap-1b5db22e.js";import{x as Ie,i as Cc}from"./screenUtils-90993e16.js";import{G as bc,U as mt,H as Ac,u as Rc,b as Pc}from"./Octree-8ed6dc77.js";import{v as $i,M as No,b as sr,k as Fo}from"./lineSegment-c6f0b9d1.js";import{o as zo}from"./floatRGBA-090399ba.js";import{E as Yt}from"./Texture-411ca148.js";import"./boundedPlane-296928f6.js";import{o as Dc}from"./glUtil-7aa58841.js";import{i as Ec}from"./Extent-a1a1de42.js";import{i as Ic,s as $c}from"./MemCache-1d2f56ee.js";import{I as Mc,F as Lc}from"./Scheduler-5e6ccc87.js";let gi=class{constructor(){this._disposed=!1}get disposed(){return this._disposed}get shaderTransformation(){return this._shaderTransformation}acquire(e,t,i,s,n,a){this.id=Br(),this.geometry=e,this.material=t,this.transformation=i,this.instanceParameters=s,this.origin=n,this._shaderTransformation=a,this._disposed=!1}release(){this._disposed=!1}dispose(){this._disposed=!0}getStaticTransformation(){return this.transformation}getShaderTransformation(){return C(this._shaderTransformation)?this._shaderTransformation(this.transformation):this.transformation}computeAttachmentOrigin(e){return!!(this.material.computeAttachmentOrigin?this.material.computeAttachmentOrigin(this.geometry,e):this.geometry.computeAttachmentOrigin(e))&&(q(e,e,this.getStaticTransformation()),!0)}};gi.pool=new yc(gi);let fs=class{constructor(e){this.channel=e,this.id=Br()}},Nc=class extends ao{constructor(e={}){super(),this.type=oo.Object,this._geometryRecords=new Array,this._geometries=new Array,this._objectTransformation=X(),this._bvObjectSpace=new ua,this._bvWorldSpace=new ua,this._bvDirty=!0,this._hasVolatileTransformation=!1,this._visible=!0,this.castShadow=e.castShadow==null||e.castShadow,this.metadata=e.metadata,this.metadata&&this.metadata.isElevationSource&&(this.metadata.lastValidElevationBB=new jo);const{geometries:t,materials:i,transformations:s,origins:n}=e;if(Array.isArray(t)){de(i.length===t.length,"Object3D: materials don't match geometries"),de(s.length===t.length,"Object3D: transformations don't match geometries"),this._geometryRecords.length=t.length,this._geometries.length=t.length;for(let a=0;a<t.length;a++)this._geometries[a]=t[a],this._geometryRecords[a]=gi.pool.acquire(t[a],i[a],Hl(s[a]),{highlights:null,occludees:null,visible:this._visible},n&&n[a])}}get geometryRecords(){return this._geometryRecords}get geometries(){return this._geometries}get transformation(){return this._objectTransformation}set transformation(e){qe(this._objectTransformation,e),this._invalidateBoundingVolume(),this._emit("objectTransformation",this)}dispose(){this._geometryRecords.length=0,this._geometries.length=0}get parentLayer(){return this._parentLayer}set parentLayer(e){de(this._parentLayer==null||e==null,"Object3D can only be added to a single Layer"),this._parentLayer=e}addGeometry(e,t,i,s,n){i=i||dr,this._geometries.push(e);const a=gi.pool.acquire(e,t,i,{highlights:null,occludees:null,visible:this._visible},s,n);return this._geometryRecords.push(a),this._hasVolatileTransformation=this._hasVolatileTransformation||C(a.shaderTransformation),this._emit("objectGeometryAdded",{object:this,record:a}),this._invalidateBoundingVolume(),a}removeGeometry(e){const t=this._geometryRecords.splice(e,1)[0];return this._hasVolatileTransformation=C(t.shaderTransformation)?this._geometryRecords.some(i=>C(i.shaderTransformation)):this._hasVolatileTransformation,t.dispose(),this._geometries.splice(e,1),this._emit("objectGeometryRemoved",{object:this,record:t}),this._invalidateBoundingVolume(),t}removeAllGeometries(){for(;this.geometryRecords.length>0;)this.removeGeometry(0)}geometryVertexAttrsUpdated(e){this._emit("vertexAttrsUpdated",{object:this,record:e}),this._invalidateBoundingVolume()}get isVisible(){return this._visible}setVisible(e){if(this._visible!==e){this._visible=e;for(const t of this._geometryRecords)t.instanceParameters.visible=this._visible;this._emit("visibilityChanged",this)}}maskOccludee(){const e=new fs(ds.MaskOccludee);for(const t of this._geometryRecords)t.instanceParameters.occludees=us(t.instanceParameters.occludees,e);return this._emit("occlusionChanged",this),e}removeOcclude(e){for(const t of this._geometryRecords)t.instanceParameters.occludees=ps(t.instanceParameters.occludees,e);this._emit("occlusionChanged",this)}highlight(){const e=new fs(ds.Highlight);for(const t of this._geometryRecords)t.instanceParameters.highlights=us(t.instanceParameters.highlights,e);return this._emit("highlightChanged",this),e}removeHighlight(e){for(const t of this._geometryRecords)t.instanceParameters.highlights=ps(t.instanceParameters.highlights,e);this._emit("highlightChanged",this)}getCombinedStaticTransformation(e,t){return Mt(t,this.transformation,e.getStaticTransformation())}_getCombinedShaderTransformation(e){return Mt(X(),this.transformation,e.getShaderTransformation())}hasVolativeTransformation(){return this._hasVolatileTransformation}get boundingVolumeWorldSpace(){return this._validateBoundingVolume(),this._bvWorldSpace}get boundingVolumeObjectSpace(){return this._validateBoundingVolume(),this._bvObjectSpace}_validateBoundingVolume(){if(!this._bvDirty&&!this._hasVolatileTransformation)return;this._bvObjectSpace.init(),this._bvWorldSpace.init();for(let s=0;s<this._geometryRecords.length;++s){const n=this._geometries[s],a=this._geometryRecords[s],o=n.boundingInfo;C(o)&&(this._calculateTransformedBoundingVolume(o,this._bvObjectSpace,a.getShaderTransformation()),this._calculateTransformedBoundingVolume(o,this._bvWorldSpace,this._getCombinedShaderTransformation(a)))}qs(this._bvObjectSpace.bounds,this._bvObjectSpace.min,this._bvObjectSpace.max,.5),qs(this._bvWorldSpace.bounds,this._bvWorldSpace.min,this._bvWorldSpace.max,.5);const e=I(),t=I(),i=ls(this.transformation);for(let s=0;s<this._geometryRecords.length;++s){const n=this._geometries[s].boundingInfo;if(V(n))continue;const a=this._geometryRecords[s].getShaderTransformation(),o=ls(a);q(e,n.getCenter(),a);const l=yt(e,this._bvObjectSpace.bounds),c=n.getBSRadius()*o;this._bvObjectSpace.bounds[3]=Math.max(this._bvObjectSpace.bounds[3],l+c),q(t,e,this.transformation);const d=yt(t,this._bvWorldSpace.bounds),h=c*i;this._bvWorldSpace.bounds[3]=Math.max(this._bvWorldSpace.bounds[3],d+h)}this._bvDirty=!1}_calculateTransformedBoundingVolume(e,t,i){const s=e.getBBMin(),n=e.getBBMax(),a=ni(s),o=ni(n);q(a,a,i),q(o,o,i);for(let l=0;l<3;++l)t.min[l]=Math.min(t.min[l],a[l],o[l]),t.max[l]=Math.max(t.max[l],a[l],o[l]);for(let l=0;l<3;++l){z(a,s),z(o,n),a[l]=n[l],o[l]=s[l],q(a,a,i),q(o,o,i);for(let c=0;c<3;++c)t.min[c]=Math.min(t.min[c],a[c],o[c]),t.max[c]=Math.max(t.max[c],a[c],o[c])}}_invalidateBoundingVolume(){this._bvDirty=!0,C(this._parentLayer)&&this._parentLayer.notifyObjectBBChanged(this,this._bvWorldSpace.bounds)}_emit(e,t){C(this._parentLayer)&&this._parentLayer.events.emit(e,t)}get test(){const e=this;return{hasGeometry:t=>e._geometries.includes(t),getGeometryIndex:t=>e._geometries.indexOf(t)}}},jo=class{constructor(){this.min=nr(Number.MAX_VALUE,Number.MAX_VALUE,Number.MAX_VALUE),this.max=nr(-Number.MAX_VALUE,-Number.MAX_VALUE,-Number.MAX_VALUE)}isEmpty(){return this.max[0]<this.min[0]&&this.max[1]<this.min[1]&&this.max[2]<this.min[2]}},ua=class extends jo{constructor(){super(...arguments),this.bounds=wn()}init(){U(this.min,Number.MAX_VALUE,Number.MAX_VALUE,Number.MAX_VALUE),U(this.max,-Number.MAX_VALUE,-Number.MAX_VALUE,-Number.MAX_VALUE),Tn(this.bounds)}};const Fc=["layerObjectAdded","layerObjectRemoved","layerObjectsAdded","layerObjectsRemoved","shaderTransformationChanged","objectTransformation","visibilityChanged","occlusionChanged","highlightChanged","objectGeometryAdded","objectGeometryRemoved","vertexAttrsUpdated"];let zc=class extends ao{constructor(e,t=""){super(),this.apiLayerUid=t,this.type=oo.Layer,this.events=new $o,this.isSliceable=!1,this._objects=new Ee,this._stageHandles=new Po,this.apiLayerUid=t,this.isVisible=(e==null?void 0:e.isVisible)??!0,this.isPickable=(e==null?void 0:e.isPickable)??!0,this.updatePolicy=(e==null?void 0:e.updatePolicy)??hs.ASYNC}get objects(){return this._objects}destroy(){this.detachStage(),this._stage=null}attachStage(e){this.detachStage(),this._stage=e;for(const t of Fc)this._stageHandles.add(this.events.on(t,i=>e.handleEvent(t,i)))}detachStage(){this._stageHandles.removeAll(),this.invalidateSpatialQueryAccelerator()}add(e){this._objects.push(e),e.parentLayer=this,this.events.emit("layerObjectAdded",{layer:this,object:e}),C(this._octree)&&this._octree.add([e])}remove(e){this._objects.removeUnordered(e)&&(e.parentLayer=null,this.events.emit("layerObjectRemoved",{layer:this,object:e}),C(this._octree)&&this._octree.remove([e]))}addMany(e){this._objects.pushArray(e);for(const t of e)t.parentLayer=this;this.events.emit("layerObjectsAdded",{layer:this,objects:e}),C(this._octree)&&this._octree.add(e)}removeMany(e){const t=new Array;if(this._objects.removeUnorderedMany(e,e.length,t),t.length!==0){for(const i of t)i.parentLayer=null;this.events.emit("layerObjectsRemoved",{layer:this,objects:t}),C(this._octree)&&this._octree.remove(t)}}sync(){C(this._stage)&&this.updatePolicy!==hs.SYNC&&this._stage.syncLayer(this.id)}notifyObjectBBChanged(e,t){C(this._octree)&&this._octree.update(e,t)}getSpatialQueryAccelerator(){return V(this._octree)&&this._objects.length>50&&this._createOctree(),this._octree}shaderTransformationChanged(){this.invalidateSpatialQueryAccelerator(),this.events.emit("shaderTransformationChanged",this)}invalidateSpatialQueryAccelerator(){this._octree=Cl(this._octree)}_createOctree(){this._octree=new bc(e=>e.boundingVolumeWorldSpace.bounds),this._octree.add(this._objects.data,this._objects.length)}};var ms;(function(r){function e(a,o){const l=a[o],c=a[o+1],d=a[o+2];return Math.sqrt(l*l+c*c+d*d)}function t(a,o){const l=a[o],c=a[o+1],d=a[o+2],h=1/Math.sqrt(l*l+c*c+d*d);a[o]*=h,a[o+1]*=h,a[o+2]*=h}function i(a,o,l){a[o]*=l,a[o+1]*=l,a[o+2]*=l}function s(a,o,l,c,d,h=o){(d=d||a)[h]=a[o]+l[c],d[h+1]=a[o+1]+l[c+1],d[h+2]=a[o+2]+l[c+2]}function n(a,o,l,c,d,h=o){(d=d||a)[h]=a[o]-l[c],d[h+1]=a[o+1]-l[c+1],d[h+2]=a[o+2]-l[c+2]}r.length=e,r.normalize=t,r.scale=i,r.add=s,r.subtract=n})(ms||(ms={}));const Vt=ms;var gs,vs,_s;(function(r){const t=[[-.5,-.5,.5],[.5,-.5,.5],[.5,.5,.5],[-.5,.5,.5],[-.5,-.5,-.5],[.5,-.5,-.5],[.5,.5,-.5],[-.5,.5,-.5]],i=[0,0,1,-1,0,0,1,0,0,0,-1,0,0,1,0,0,0,-1],s=[0,0,1,0,1,1,0,1],n=[0,1,2,2,3,0,4,0,3,3,7,4,1,5,6,6,2,1,1,0,4,4,5,1,3,2,6,6,7,3,5,4,7,7,6,5],a=new Array(36);for(let c=0;c<6;c++)for(let d=0;d<6;d++)a[6*c+d]=c;const o=new Array(36);for(let c=0;c<6;c++)o[6*c+0]=0,o[6*c+1]=1,o[6*c+2]=2,o[6*c+3]=2,o[6*c+4]=3,o[6*c+5]=0;function l(c){Array.isArray(c)||(c=[c,c,c]);const d=new Array(24);for(let h=0;h<8;h++)d[3*h]=t[h][0]*c[0],d[3*h+1]=t[h][1]*c[1],d[3*h+2]=t[h][2]*c[2];return new $e([[u.POSITION,{size:3,data:d,exclusive:!0}],[u.NORMAL,{size:3,data:i}],[u.UV0,{size:2,data:s}]],[[u.POSITION,n],[u.NORMAL,a],[u.UV0,o]])}r.createGeometry=l})(gs||(gs={})),function(r){const t=[[-.5,0,-.5],[.5,0,-.5],[.5,0,.5],[-.5,0,.5],[0,-.5,0],[0,.5,0]],i=[0,1,-1,1,1,0,0,1,1,-1,1,0,0,-1,-1,1,-1,0,0,-1,1,-1,-1,0],s=[5,1,0,5,2,1,5,3,2,5,0,3,4,0,1,4,1,2,4,2,3,4,3,0],n=[0,0,0,1,1,1,2,2,2,3,3,3,4,4,4,5,5,5,6,6,6,7,7,7];function a(o){Array.isArray(o)||(o=[o,o,o]);const l=new Array(18);for(let c=0;c<6;c++)l[3*c]=t[c][0]*o[0],l[3*c+1]=t[c][1]*o[1],l[3*c+2]=t[c][2]*o[2];return new $e([[u.POSITION,{size:3,data:l,exclusive:!0}],[u.NORMAL,{size:3,data:i}]],[[u.POSITION,s],[u.NORMAL,n]])}r.createGeometry=a}(vs||(vs={})),function(r){const i=se(-.5,0,-.5),s=se(.5,0,-.5),n=se(0,0,.5),a=se(0,0+.5,0),o=Q(),l=Q(),c=Q(),d=Q(),h=Q();ie(o,i,a),ie(l,i,s),Je(c,o,l),oe(c,c),ie(o,s,a),ie(l,s,n),Je(d,o,l),oe(d,d),ie(o,n,a),ie(l,n,i),Je(h,o,l),oe(h,h);const f=[i,s,n,a],p=[0,-1,0,c[0],c[1],c[2],d[0],d[1],d[2],h[0],h[1],h[2]],m=[0,1,2,3,1,0,3,2,1,3,0,2],_=[0,0,0,1,1,1,2,2,2,3,3,3];function T(y){Array.isArray(y)||(y=[y,y,y]);const x=new Array(12);for(let O=0;O<4;O++)x[3*O]=f[O][0]*y[0],x[3*O+1]=f[O][1]*y[1],x[3*O+2]=f[O][2]*y[2];return new $e([[u.POSITION,{size:3,data:x,exclusive:!0}],[u.NORMAL,{size:3,data:p}]],[[u.POSITION,m],[u.NORMAL,_]])}r.createGeometry=T}(_s||(_s={}));const mf=gs.createGeometry,gf=vs.createGeometry,vf=_s.createGeometry;function _f(r,e,t,i={uv:!0}){const s=-Math.PI,n=2*Math.PI,a=-Math.PI/2,o=Math.PI,l=Math.max(3,Math.floor(e)),c=Math.max(2,Math.floor(t)),d=(l+1)*(c+1),h=new Float32Array(3*d),f=new Float32Array(3*d),p=new Float32Array(2*d),m=[];let _=0;for(let O=0;O<=c;O++){const R=[],b=O/c,A=a+b*o,E=Math.cos(A);for(let L=0;L<=l;L++){const he=L/l,D=s+he*n,G=Math.cos(D)*E,ue=Math.sin(A),Ve=-Math.sin(D)*E;h[3*_]=G*r,h[3*_+1]=ue*r,h[3*_+2]=Ve*r,f[3*_]=G,f[3*_+1]=ue,f[3*_+2]=Ve,p[2*_]=he,p[2*_+1]=b,R.push(_),++_}m.push(R)}const T=new Array;for(let O=0;O<c;O++)for(let R=0;R<l;R++){const b=m[O][R],A=m[O][R+1],E=m[O+1][R+1],L=m[O+1][R];O===0?(T.push(b),T.push(E),T.push(L)):O===c-1?(T.push(b),T.push(A),T.push(E)):(T.push(b),T.push(A),T.push(E),T.push(E),T.push(L),T.push(b))}const y=[[u.POSITION,T],[u.NORMAL,T]],x=[[u.POSITION,{size:3,data:h,exclusive:!0}],[u.NORMAL,{size:3,data:f,exclusive:!0}]];return i.uv&&(x.push([u.UV0,{size:2,data:p,exclusive:!0}]),y.push([u.UV0,T])),i.offset&&(y[0][0]=u.OFFSET,x[0][0]=u.OFFSET,y.push([u.POSITION,new Array(T.length).fill(0)]),x.push([u.POSITION,{size:3,data:Float64Array.from(i.offset),exclusive:!0}])),new $e(x,y)}function yf(r,e,t){const i=r;let s,n;if(t)s=[0,-1,0,1,0,0,0,0,1,-1,0,0,0,0,-1,0,1,0],n=[0,1,2,0,2,3,0,3,4,0,4,1,1,5,2,2,5,3,3,5,4,4,5,1];else{const h=i*(1+Math.sqrt(5))/2;s=[-i,h,0,i,h,0,-i,-h,0,i,-h,0,0,-i,h,0,i,h,0,-i,-h,0,i,-h,h,0,-i,h,0,i,-h,0,-i,-h,0,i],n=[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1]}for(let h=0;h<s.length;h+=3)Vt.scale(s,h,r/Vt.length(s,h));let a={};function o(h,f){h>f&&([h,f]=[f,h]);const p=h.toString()+"."+f.toString();if(a[p])return a[p];let m=s.length;return s.length+=3,Vt.add(s,3*h,s,3*f,s,m),Vt.scale(s,m,r/Vt.length(s,m)),m/=3,a[p]=m,m}for(let h=0;h<e;h++){const f=n.length,p=new Array(4*f);for(let m=0;m<f;m+=3){const _=n[m],T=n[m+1],y=n[m+2],x=o(_,T),O=o(T,y),R=o(y,_),b=4*m;p[b]=_,p[b+1]=x,p[b+2]=R,p[b+3]=T,p[b+4]=O,p[b+5]=x,p[b+6]=y,p[b+7]=R,p[b+8]=O,p[b+9]=x,p[b+10]=O,p[b+11]=R}n=p,a={}}const l=new Float32Array(s);for(let h=0;h<l.length;h+=3)Vt.normalize(l,h);const c=[[u.POSITION,n],[u.NORMAL,n]],d=[[u.POSITION,{size:3,data:new Float32Array(s),exclusive:!0}],[u.NORMAL,{size:3,data:l,exclusive:!0}]];return new $e(d,c)}function Sf(r,e,t,i,s,n,a,o){const l=e?[e[0],e[1],e[2]]:[0,0,0],c=r?[r[0],r[1],r[2]]:[0,0,1];n=n||[0,0];const d=t?[255*t[0],255*t[1],255*t[2],t.length>3?255*t[3]:255]:[255,255,255,255],h=i!=null&&i.length===2?i:[1,1],f=[[u.POSITION,{size:3,data:l,exclusive:!0}],[u.NORMAL,{size:3,data:c,exclusive:!0}],[u.UV0,{size:n.length,data:n}],[u.COLOR,{size:4,data:d,exclusive:!0}],[u.SIZE,{size:2,data:h}]];if(s!=null){const p=new Float32Array([s[0],s[1],s[2],s[3]]);f.push([u.AUXPOS1,{size:4,data:p}])}if(a!=null){const p=new Float32Array([a[0],a[1],a[2],a[3]]);f.push([u.AUXPOS2,{size:4,data:p}])}return new $e(f,null,Ci.Point,o)}function xf(r,e,t,i,s=!0,n=!0){let a=0;const o=e,l=r;let c=se(0,a,0),d=se(0,a+l,0),h=se(0,-1,0),f=se(0,1,0);i&&(a=l,d=se(0,0,0),c=se(0,a,0),h=se(0,1,0),f=se(0,-1,0));const p=[d,c],m=[h,f],_=t+2,T=Math.sqrt(l*l+o*o);if(i)for(let E=t-1;E>=0;E--){const L=E*(2*Math.PI/t),he=se(Math.cos(L)*o,a,Math.sin(L)*o);p.push(he);const D=se(l*Math.cos(L)/T,-o/T,l*Math.sin(L)/T);m.push(D)}else for(let E=0;E<t;E++){const L=E*(2*Math.PI/t),he=se(Math.cos(L)*o,a,Math.sin(L)*o);p.push(he);const D=se(l*Math.cos(L)/T,o/T,l*Math.sin(L)/T);m.push(D)}const y=new Array,x=new Array;if(s){for(let E=3;E<p.length;E++)y.push(1),y.push(E-1),y.push(E),x.push(0),x.push(0),x.push(0);y.push(p.length-1),y.push(2),y.push(1),x.push(0),x.push(0),x.push(0)}if(n){for(let E=3;E<p.length;E++)y.push(E),y.push(E-1),y.push(0),x.push(E),x.push(E-1),x.push(1);y.push(0),y.push(2),y.push(p.length-1),x.push(1),x.push(2),x.push(m.length-1)}const O=new Float32Array(3*_);for(let E=0;E<_;E++)O[3*E]=p[E][0],O[3*E+1]=p[E][1],O[3*E+2]=p[E][2];const R=new Float32Array(3*_);for(let E=0;E<_;E++)R[3*E]=m[E][0],R[3*E+1]=m[E][1],R[3*E+2]=m[E][2];const b=[[u.POSITION,y],[u.NORMAL,x]],A=[[u.POSITION,{size:3,data:O,exclusive:!0}],[u.NORMAL,{size:3,data:R,exclusive:!0}]];return new $e(A,b)}function wf(r,e,t,i,s,n){const a=i?Js(i):se(1,0,0),o=s?Js(s):se(0,0,0);n=n??!0;const l=Q();oe(l,a);const c=Q();W(c,l,Math.abs(r));const d=Q();W(d,c,-.5),ee(d,d,o);const h=se(0,1,0);Math.abs(1-st(l,h))<.2&&U(h,0,0,1);const f=Q();Je(f,l,h),oe(f,f),Je(h,f,l);const p=2*t+(n?2:0),m=t+(n?2:0),_=new Float32Array(3*p),T=new Float32Array(3*m),y=new Float32Array(2*p),x=new Array(3*t*(n?4:2)),O=new Array(3*t*(n?4:2));n&&(_[3*(p-2)+0]=d[0],_[3*(p-2)+1]=d[1],_[3*(p-2)+2]=d[2],y[2*(p-2)]=0,y[2*(p-2)+1]=0,_[3*(p-1)+0]=_[3*(p-2)+0]+c[0],_[3*(p-1)+1]=_[3*(p-2)+1]+c[1],_[3*(p-1)+2]=_[3*(p-2)+2]+c[2],y[2*(p-1)]=1,y[2*(p-1)+1]=1,T[3*(m-2)+0]=-l[0],T[3*(m-2)+1]=-l[1],T[3*(m-2)+2]=-l[2],T[3*(m-1)+0]=l[0],T[3*(m-1)+1]=l[1],T[3*(m-1)+2]=l[2]);const R=(D,G,ue)=>{x[D]=G,O[D]=ue};let b=0;const A=Q(),E=Q();for(let D=0;D<t;D++){const G=D*(2*Math.PI/t);W(A,h,Math.sin(G)),W(E,f,Math.cos(G)),ee(A,A,E),T[3*D+0]=A[0],T[3*D+1]=A[1],T[3*D+2]=A[2],W(A,A,e),ee(A,A,d),_[3*D+0]=A[0],_[3*D+1]=A[1],_[3*D+2]=A[2],y[2*D+0]=D/t,y[2*D+1]=0,_[3*(D+t)+0]=_[3*D+0]+c[0],_[3*(D+t)+1]=_[3*D+1]+c[1],_[3*(D+t)+2]=_[3*D+2]+c[2],y[2*(D+t)+0]=D/t,y[2*D+1]=1;const ue=(D+1)%t;R(b++,D,D),R(b++,D+t,D),R(b++,ue,ue),R(b++,ue,ue),R(b++,D+t,D),R(b++,ue+t,ue)}if(n){for(let D=0;D<t;D++){const G=(D+1)%t;R(b++,p-2,m-2),R(b++,D,m-2),R(b++,G,m-2)}for(let D=0;D<t;D++){const G=(D+1)%t;R(b++,D+t,m-1),R(b++,p-1,m-1),R(b++,G+t,m-1)}}const L=[[u.POSITION,x],[u.NORMAL,O],[u.UV0,x]],he=[[u.POSITION,{size:3,data:_,exclusive:!0}],[u.NORMAL,{size:3,data:T,exclusive:!0}],[u.UV0,{size:2,data:y,exclusive:!0}]];return new $e(he,L)}function Tf(r,e,t,i,s){t=t||10,i=i==null||i,de(r.length>1);const n=[[0,0,0]],a=[],o=[];for(let l=0;l<t;l++){a.push([0,-l-1,-(l+1)%t-1]);const c=l/t*2*Math.PI;o.push([Math.cos(c)*e,Math.sin(c)*e])}return jc(o,r,n,a,i,s)}function jc(r,e,t,i,s,n=se(0,0,0)){const a=r.length,o=new Float32Array(e.length*a*3+(6*t.length||0)),l=new Float32Array(e.length*a*3+(t?6:0)),c=new Array,d=new Array;let h=0,f=0;const p=Q(),m=Q(),_=Q(),T=Q(),y=Q(),x=Q(),O=Q(),R=I(),b=Q(),A=Q(),E=Q(),L=Q(),he=Q(),D=at();U(b,0,1,0),ie(m,e[1],e[0]),oe(m,m),s?(ee(R,e[0],n),oe(_,R)):U(_,0,0,1),pa(m,_,b,b,y,_,fa),z(T,_),z(L,y);for(let $=0;$<t.length;$++)W(x,y,t[$][0]),W(R,_,t[$][2]),ee(x,x,R),ee(x,x,e[0]),o[h++]=x[0],o[h++]=x[1],o[h++]=x[2];l[f++]=-m[0],l[f++]=-m[1],l[f++]=-m[2];for(let $=0;$<i.length;$++)c.push(i[$][0]>0?i[$][0]:-i[$][0]-1+t.length),c.push(i[$][1]>0?i[$][1]:-i[$][1]-1+t.length),c.push(i[$][2]>0?i[$][2]:-i[$][2]-1+t.length),d.push(0),d.push(0),d.push(0);let G=t.length;const ue=t.length-1;for(let $=0;$<e.length;$++){let Tt=!1;$>0&&(z(p,m),$<e.length-1?(ie(m,e[$+1],e[$]),oe(m,m)):Tt=!0,ee(A,p,m),oe(A,A),ee(E,e[$-1],T),Sn(e[$],A,D),xn(D,On(E,p),R)?(ie(R,R,e[$]),oe(_,R),Je(y,A,_),oe(y,y)):pa(A,T,L,b,y,_,fa),z(T,_),z(L,y)),s&&(ee(R,e[$],n),oe(he,R));for(let He=0;He<a;He++)if(W(x,y,r[He][0]),W(R,_,r[He][1]),ee(x,x,R),oe(O,x),l[f++]=O[0],l[f++]=O[1],l[f++]=O[2],ee(x,x,e[$]),o[h++]=x[0],o[h++]=x[1],o[h++]=x[2],!Tt){const wr=(He+1)%a;c.push(G+He),c.push(G+a+He),c.push(G+wr),c.push(G+wr),c.push(G+a+He),c.push(G+a+wr);for(let ot=0;ot<6;ot++){const un=c.length-6;d.push(c[un+ot]-ue)}}G+=a}const Ve=e[e.length-1];for(let $=0;$<t.length;$++)W(x,y,t[$][0]),W(R,_,t[$][1]),ee(x,x,R),ee(x,x,Ve),o[h++]=x[0],o[h++]=x[1],o[h++]=x[2];const jt=f/3;l[f++]=m[0],l[f++]=m[1],l[f++]=m[2];const Z=G-a;for(let $=0;$<i.length;$++)c.push(i[$][0]>=0?G+i[$][0]:-i[$][0]-1+Z),c.push(i[$][2]>=0?G+i[$][2]:-i[$][2]-1+Z),c.push(i[$][1]>=0?G+i[$][1]:-i[$][1]-1+Z),d.push(jt),d.push(jt),d.push(jt);const Me=[[u.POSITION,c],[u.NORMAL,d]],Fe=[[u.POSITION,{size:3,data:o,exclusive:!0}],[u.NORMAL,{size:3,data:l,exclusive:!0}]];return new $e(Fe,Me)}function Of(r,e,t){de(r.length>1,"createPolylineGeometry(): polyline needs at least 2 points"),de(r[0].length===3,"createPolylineGeometry(): malformed vertex"),de(e==null||e.length===r.length,"createPolylineGeometry: need same number of points and normals"),de(e==null||e[0].length===3,"createPolylineGeometry(): malformed normal");const i=new Float64Array(3*r.length),s=new Array(2*(r.length-1));let n=0,a=0;for(let c=0;c<r.length;c++){for(let d=0;d<3;d++)i[n++]=r[c][d];c>0&&(s[a++]=c-1,s[a++]=c)}const o=[],l=[];if(o.push([u.POSITION,s]),l.push([u.POSITION,{size:3,data:i,exclusive:!0}]),e){const c=new Float32Array(3*e.length);let d=0;for(let h=0;h<r.length;h++)for(let f=0;f<3;f++)c[d++]=e[h][f];o.push([u.NORMAL,s]),l.push([u.NORMAL,{size:3,data:c,exclusive:!0}])}return t&&(l.push([u.COLOR,{size:4,data:t}]),o.push([u.COLOR,_l(t.length/4)])),new $e(l,o,Ci.Line)}function Cf(r,e,t,i,s=0){const n=new Array(18),a=[[-e,s,i/2],[t,s,i/2],[0,r+s,i/2],[-e,s,-i/2],[t,s,-i/2],[0,r+s,-i/2]],o=[0,1,2,3,0,2,2,5,3,1,4,5,5,2,1,1,0,3,3,4,1,4,3,5];for(let l=0;l<6;l++)n[3*l]=a[l][0],n[3*l+1]=a[l][1],n[3*l+2]=a[l][2];return new $e([[u.POSITION,{size:3,data:n,exclusive:!0}]],[[u.POSITION,o]])}function bf(r,e){const t=r.getMutableAttribute(u.POSITION).data;for(let i=0;i<t.length;i+=3){const s=t[i],n=t[i+1],a=t[i+2];U(Ht,s,n,a),q(Ht,Ht,e),t[i]=Ht[0],t[i+1]=Ht[1],t[i+2]=Ht[2]}}function Af(r,e=r){const t=r.vertexAttributes,i=t.get(u.POSITION).data,s=t.get(u.NORMAL).data;if(s){const n=e.getMutableAttribute(u.NORMAL).data;for(let a=0;a<s.length;a+=3){const o=s[a+1];n[a+1]=-s[a+2],n[a+2]=o}}if(i){const n=e.getMutableAttribute(u.POSITION).data;for(let a=0;a<i.length;a+=3){const o=i[a+1];n[a+1]=-i[a+2],n[a+2]=o}}return e}function Hi(r,e,t,i,s){return!(Math.abs(st(e,r))>s)&&(Je(t,r,e),oe(t,t),Je(i,t,r),oe(i,i),!0)}function pa(r,e,t,i,s,n,a){return Hi(r,e,s,n,a)||Hi(r,t,s,n,a)||Hi(r,i,s,n,a)}const fa=.99619469809,Ht=Q();var mr,Fr;(function(r){r[r.Draped=0]="Draped",r[r.Screen=1]="Screen",r[r.World=2]="World",r[r.COUNT=3]="COUNT"})(mr||(mr={})),function(r){r[r.Center=0]="Center",r[r.Tip=1]="Tip",r[r.COUNT=2]="COUNT"}(Fr||(Fr={}));let ce=class extends gr{constructor(){super(...arguments),this.output=w.Color,this.transparencyPassType=K.NONE,this.occluder=!1,this.hasSlicePlane=!1,this.writeDepth=!1,this.space=mr.Screen,this.hideOnShortSegments=!1,this.hasCap=!1,this.anchor=Fr.Center,this.hasTip=!1,this.vvSize=!1,this.vvColor=!1,this.vvOpacity=!1,this.hasOccludees=!1,this.hasMultipassTerrain=!1,this.cullAboveGround=!1}};v([S({count:w.COUNT})],ce.prototype,"output",void 0),v([S({count:K.COUNT})],ce.prototype,"transparencyPassType",void 0),v([S()],ce.prototype,"occluder",void 0),v([S()],ce.prototype,"hasSlicePlane",void 0),v([S()],ce.prototype,"writeDepth",void 0),v([S({count:mr.COUNT})],ce.prototype,"space",void 0),v([S()],ce.prototype,"hideOnShortSegments",void 0),v([S()],ce.prototype,"hasCap",void 0),v([S({count:Fr.COUNT})],ce.prototype,"anchor",void 0),v([S()],ce.prototype,"hasTip",void 0),v([S()],ce.prototype,"vvSize",void 0),v([S()],ce.prototype,"vvColor",void 0),v([S()],ce.prototype,"vvOpacity",void 0),v([S()],ce.prototype,"hasOccludees",void 0),v([S()],ce.prototype,"hasMultipassTerrain",void 0),v([S()],ce.prototype,"cullAboveGround",void 0),v([S({constValue:!0})],ce.prototype,"hasVvInstancing",void 0),v([S({constValue:!0})],ce.prototype,"hasSliceTranslatedView",void 0);const ma=8;function Uc(r,e){const t=r.vertex;t.uniforms.add(new H("intrinsicWidth",i=>i.width)),e.vvSize?(r.attributes.add(u.SIZEFEATUREATTRIBUTE,"float"),t.uniforms.add(new Jt("vvSizeMinSize",i=>i.vvSizeMinSize)),t.uniforms.add(new Jt("vvSizeMaxSize",i=>i.vvSizeMaxSize)),t.uniforms.add(new Jt("vvSizeOffset",i=>i.vvSizeOffset)),t.uniforms.add(new Jt("vvSizeFactor",i=>i.vvSizeFactor)),t.code.add(g`float getSize() {
return intrinsicWidth * clamp(vvSizeOffset + sizeFeatureAttribute * vvSizeFactor, vvSizeMinSize, vvSizeMaxSize).x;
}`)):(r.attributes.add(u.SIZE,"float"),t.code.add(g`float getSize(){
return intrinsicWidth * size;
}`)),e.vvOpacity?(r.attributes.add(u.OPACITYFEATUREATTRIBUTE,"float"),t.constants.add("vvOpacityNumber","int",8),t.uniforms.add([new si("vvOpacityValues",i=>i.vvOpacityValues,ma),new si("vvOpacityOpacities",i=>i.vvOpacityOpacities,ma)]),t.code.add(g`float interpolateOpacity( float value ){
if (value <= vvOpacityValues[0]) {
return vvOpacityOpacities[0];
}
for (int i = 1; i < vvOpacityNumber; ++i) {
if (vvOpacityValues[i] >= value) {
float f = (value - vvOpacityValues[i-1]) / (vvOpacityValues[i] - vvOpacityValues[i-1]);
return mix(vvOpacityOpacities[i-1], vvOpacityOpacities[i], f);
}
}
return vvOpacityOpacities[vvOpacityNumber - 1];
}
vec4 applyOpacity( vec4 color ){
return vec4(color.xyz, interpolateOpacity(opacityFeatureAttribute));
}`)):t.code.add(g`vec4 applyOpacity( vec4 color ){
return color;
}`),e.vvColor?(r.attributes.add(u.COLORFEATUREATTRIBUTE,"float"),t.constants.add("vvColorNumber","int",Ir),t.uniforms.add(new si("vvColorValues",i=>i.vvColorValues,Ir)),t.uniforms.add(new no("vvColorColors",i=>i.vvColorColors,Ir)),t.code.add(g`vec4 interpolateColor( float value ) {
if (value <= vvColorValues[0]) {
return vvColorColors[0];
}
for (int i = 1; i < vvColorNumber; ++i) {
if (vvColorValues[i] >= value) {
float f = (value - vvColorValues[i-1]) / (vvColorValues[i] - vvColorValues[i-1]);
return mix(vvColorColors[i-1], vvColorColors[i], f);
}
}
return vvColorColors[vvColorNumber - 1];
}
vec4 getColor(){
return applyOpacity(interpolateColor(colorFeatureAttribute));
}`)):(r.attributes.add(u.COLOR,"vec4"),t.code.add(g`vec4 getColor(){
return applyOpacity(color);
}`))}let Vc=class{constructor(e){this._rctx=e,this._cache=new Map}dispose(){this._cache.forEach(e=>Le(e.stippleTexture)),this._cache.clear()}_acquire(e){if(V(e))return null;const t=this._patternId(e),i=this._cache.get(t);if(i)return i.refCount++,i;const{encodedData:s,paddedPixels:n}=Gc(e),a=new Hc(new Yt(this._rctx,{width:n,height:1,internalFormat:ur.RGBA,pixelFormat:ur.RGBA,dataType:Lr.UNSIGNED_BYTE,wrapMode:pr.CLAMP_TO_EDGE},s));return this._cache.set(t,a),a}release(e){if(V(e))return;const t=this._patternId(e),i=this._cache.get(t);i&&(i.refCount--,i.refCount===0&&(C(i.stippleTexture)&&i.stippleTexture.dispose(),this._cache.delete(t)))}swap(e,t){const i=this._acquire(t);return this.release(e),i}_patternId(e){return`${e.pattern.join(",")}-r${e.pixelRatio}`}},Hc=class extends Yl{constructor(e){super(),this.stippleTexture=e,this.refCount=1}};function Gc(r){const e=js(r),t=1/r.pixelRatio,i=Uo(r),s=Vo(r),n=(Math.floor(.5*(s-1))+.5)*t,a=[];let o=1;for(const p of e){for(let m=0;m<p;m++){const _=o*(Math.min(m,p-1-m)+.5)*t/n*.5+.5;a.push(_)}o=-o}const l=Math.round(e[0]/2),c=[...a.slice(l),...a.slice(0,l)],d=i+Ho,h=new Uint8Array(4*d);let f=4;for(const p of c)zo(p,h,f),f+=4;return h.copyWithin(0,f-4,f),h.copyWithin(f,4,8),{encodedData:h,paddedPixels:d}}function js(r){return r.pattern.map(e=>Math.round(e*r.pixelRatio))}function Uo(r){if(V(r))return 1;const e=js(r);return Math.floor(e.reduce((t,i)=>t+i))}function Vo(r){return js(r).reduce((e,t)=>Math.max(e,t))}const Ho=2;function Bc(r){return V(r)?Ls:r.length===4?r:Nr(Wc,r[0],r[1],r[2],1)}const Wc=Qe();function Go(r,e){r.constants.add("stippleAlphaColorDiscard","float",.001),r.constants.add("stippleAlphaHighlightDiscard","float",.5),e.stippleEnabled?kc(r,e):qc(r)}function kc(r,e){const t=!(e.draped&&e.stipplePreferContinuous),{vertex:i,fragment:s}=r;s.include(Ns),e.draped||(As(i,e),i.uniforms.add(new H("worldToScreenPerDistanceRatio",(a,o)=>1/o.camera.perScreenPixelRatio)),i.code.add(g`float computeWorldToScreenRatio(vec3 segmentCenter) {
float segmentDistanceToCamera = length(segmentCenter - cameraPosition);
return worldToScreenPerDistanceRatio / segmentDistanceToCamera;
}`)),r.varyings.add("vStippleDistance","float"),e.stippleRequiresClamp&&r.varyings.add("vStippleDistanceLimits","vec2"),e.stippleRequiresStretchMeasure&&r.varyings.add("vStipplePatternStretch","float"),i.code.add(g`
    float discretizeWorldToScreenRatio(float worldToScreenRatio) {
      float step = ${Zc};

      float discreteWorldToScreenRatio = log(worldToScreenRatio);
      discreteWorldToScreenRatio = ceil(discreteWorldToScreenRatio / step) * step;
      discreteWorldToScreenRatio = exp(discreteWorldToScreenRatio);
      return discreteWorldToScreenRatio;
    }
  `),i.code.add(g`vec2 computeStippleDistanceLimits(float startPseudoScreen, float segmentLengthPseudoScreen, float segmentLengthScreen, float patternLength) {`),i.code.add(g`
    if (segmentLengthPseudoScreen >= ${t?"patternLength":"1e4"}) {
  `),i.uniforms.add(new H("pixelRatio",(a,o)=>o.camera.pixelRatio)),i.code.add(g`
        // Round the screen length to get an integer number of pattern repetitions (minimum 1).
        float repetitions = segmentLengthScreen / (patternLength * pixelRatio);
        float flooredRepetitions = max(1.0, floor(repetitions + 0.5));
        float segmentLengthScreenRounded = flooredRepetitions * patternLength;

        ${e.stippleRequiresStretchMeasure?g`
              float stretch = repetitions / flooredRepetitions;

              // We need to impose a lower bound on the stretch factor to prevent the dots from merging together when there is only 1 repetition.
              // 0.75 is the lowest possible stretch value for flooredRepetitions > 1, so it makes sense as lower bound.
              vStipplePatternStretch = max(0.75, stretch);`:""}

        return vec2(0.0, segmentLengthScreenRounded);
      }
      return vec2(startPseudoScreen, startPseudoScreen + segmentLengthPseudoScreen);
    }
  `),s.constants.add("stippleTexturePadding","float",Ho);const n=e.hasWebGL2Context?hi.None:hi.Size;s.uniforms.add(bo("stipplePatternTexture",a=>a.stippleTexture,n)),s.uniforms.add([new H("stipplePatternSDFNormalizer",a=>Xc(a.stipplePattern)),new H("stipplePatternPixelSizeInv",a=>1/Us(a))]),s.code.add(g`
    float padStippleTexture(float u) {
      float paddedTextureSize = ${Kl(e,"stipplePatternTexture")}.x;
      float unpaddedTextureSize = paddedTextureSize - stippleTexturePadding;

      return (u * unpaddedTextureSize + stippleTexturePadding * 0.5) / paddedTextureSize;
    }
  `),s.code.add(g`
    float getStippleSDF(out bool isClamped) {
      ${e.stippleRequiresClamp?g`
          float stippleDistanceClamped = clamp(vStippleDistance, vStippleDistanceLimits.x, vStippleDistanceLimits.y);
          vec2 aaCorrectedLimits = vStippleDistanceLimits + vec2(1.0, -1.0) / gl_FragCoord.w;
          isClamped = vStippleDistance < aaCorrectedLimits.x || vStippleDistance > aaCorrectedLimits.y;`:g`
          float stippleDistanceClamped = vStippleDistance;
          isClamped = false;`}

      float u = stippleDistanceClamped * gl_FragCoord.w * stipplePatternPixelSizeInv;
      ${e.stippleScaleWithLineWidth?g`u *= vLineSizeInv;`:""}
      u = padStippleTexture(fract(u));

      float encodedSDF = rgba2float(texture2D(stipplePatternTexture, vec2(u, 0.5)));
      float sdf = (encodedSDF * 2.0 - 1.0) * stipplePatternSDFNormalizer;

      ${e.stippleRequiresStretchMeasure?g`return (sdf - 0.5) * vStipplePatternStretch + 0.5;`:g`return sdf;`}
    }

    float getStippleSDF() {
      bool ignored;
      return getStippleSDF(ignored);
    }

    float getStippleAlpha() {
      bool isClamped;
      float stippleSDF = getStippleSDF(isClamped);

      float antiAliasedResult = ${e.stippleScaleWithLineWidth?g`clamp(stippleSDF * vLineWidth + 0.5, 0.0, 1.0);`:g`clamp(stippleSDF + 0.5, 0.0, 1.0);`}

      return isClamped ? floor(antiAliasedResult + 0.5) : antiAliasedResult;
    }
  `),e.stippleOffColorEnabled?(s.uniforms.add(new Ae("stippleOffColor",a=>Bc(a.stippleOffColor))),s.code.add(g`#define discardByStippleAlpha(stippleAlpha, threshold) {}
#define blendStipple(color, stippleAlpha) mix(color, stippleOffColor, stippleAlpha)`)):s.code.add(g`#define discardByStippleAlpha(stippleAlpha, threshold) if (stippleAlpha < threshold) { discard; }
#define blendStipple(color, stippleAlpha) vec4(color.rgb, color.a * stippleAlpha)`)}function qc(r){r.fragment.code.add(g`float getStippleAlpha() { return 1.0; }
#define discardByStippleAlpha(_stippleAlpha_, _threshold_) {}
#define blendStipple(color, _stippleAlpha_) color`)}function Xc(r){return C(r)?(Math.floor(.5*(Vo(r)-1))+.5)/r.pixelRatio:1}function Us(r){const e=r.stipplePattern;return C(e)?Uo(r.stipplePattern)/e.pixelRatio:1}const Zc=g.float(.4),Vs=128,Bo=.5;function Jc(r,e=Vs,t=e*Bo,i=0){const s=Qc(r,e,t,i);return new En(s,{mipmap:!1,wrap:{s:pr.CLAMP_TO_EDGE,t:pr.CLAMP_TO_EDGE},width:e,height:e,components:4,noUnpackFlip:!0})}function Qc(r,e=Vs,t=e*Bo,i=0){switch(r){case"circle":default:return Yc(e,t);case"square":return Kc(e,t);case"cross":return td(e,t,i);case"x":return rd(e,t,i);case"kite":return ed(e,t);case"triangle":return id(e,t);case"arrow":return sd(e,t)}}function Yc(r,e){const t=r/2-.5;return Wr(r,qo(t,t,e/2))}function Kc(r,e){return Wo(r,e,!1)}function ed(r,e){return Wo(r,e,!0)}function td(r,e,t=0){return ko(r,e,!1,t)}function rd(r,e,t=0){return ko(r,e,!0,t)}function id(r,e){return Wr(r,Xo(r/2,e,e/2))}function sd(r,e){const t=e,i=e/2,s=r/2,n=.8*t,a=qo(s,(r-e)/2-n,Math.sqrt(n*n+i*i)),o=Xo(s,t,i);return Wr(r,(l,c)=>Math.max(o(l,c),-a(l,c)))}function Wo(r,e,t){return t&&(e/=Math.SQRT2),Wr(r,(i,s)=>{let n=i-.5*r+.25,a=.5*r-s-.75;if(t){const o=(n+a)/Math.SQRT2;a=(a-n)/Math.SQRT2,n=o}return Math.max(Math.abs(n),Math.abs(a))-.5*e})}function ko(r,e,t,i=0){e-=i,t&&(e*=Math.SQRT2);const s=.5*e;return Wr(r,(n,a)=>{let o,l=n-.5*r,c=.5*r-a-1;if(t){const d=(l+c)/Math.SQRT2;c=(c-l)/Math.SQRT2,l=d}return l=Math.abs(l),c=Math.abs(c),o=l>c?l>s?Math.sqrt((l-s)*(l-s)+c*c):c:c>s?Math.sqrt(l*l+(c-s)*(c-s)):l,o-=i/2,o})}function qo(r,e,t){return(i,s)=>{const n=i-r,a=s-e;return Math.sqrt(n*n+a*a)-t}}function Xo(r,e,t){const i=Math.sqrt(e*e+t*t);return(s,n)=>{const a=Math.abs(s-r)-t,o=n-r+e/2+.75,l=(e*a+t*o)/i,c=-o;return Math.max(l,c)}}function Wr(r,e){const t=new Uint8Array(4*r*r);for(let i=0;i<r;i++)for(let s=0;s<r;s++){const n=s+r*i;let a=e(s,i);a=a/r+.5,zo(a,t,4*n)}return t}const Hs=64,Zo=Hs/2,Jo=Zo/5,ad=Hs/Jo,Ef=.25;function If(r,e){return r.fromData(`${e}-marker`,()=>Jc(e,Hs,Zo,Jo))}function od(r,e){const t=r.vertex;r.constants.add("markerSizePerLineWidth","float",ad),t.uniforms.add(new H("pixelRatio",(i,s)=>s.camera.pixelRatio)),V(t.uniforms.get("markerScale"))&&t.constants.add("markerScale","float",1),t.code.add(g`float getLineWidth() {
return max(getSize(), 1.0) * pixelRatio;
}
float getScreenMarkerSize() {
return markerSizePerLineWidth * markerScale * getLineWidth();
}`),e.space===mr.World&&(t.constants.add("maxSegmentLengthFraction","float",.45),t.uniforms.add(new H("perRenderPixelRatio",(i,s)=>s.camera.perRenderPixelRatio)),t.code.add(g`float getWorldMarkerSize(vec4 pos) {
float distanceToCamera = length(pos.xyz);
float screenToWorldRatio = perRenderPixelRatio * distanceToCamera * 0.5;
return getScreenMarkerSize() * screenToWorldRatio;
}
bool areWorldMarkersHidden(vec4 pos, vec4 other) {
vec3 midPoint = mix(pos.xyz, other.xyz, 0.5);
float distanceToCamera = length(midPoint);
float screenToWorldRatio = perRenderPixelRatio * distanceToCamera * 0.5;
float worldMarkerSize = getScreenMarkerSize() * screenToWorldRatio;
float segmentLen = length(pos.xyz - other.xyz);
return worldMarkerSize > maxSegmentLengthFraction * segmentLen;
}`))}var Ft;(function(r){r[r.BUTT=0]="BUTT",r[r.SQUARE=1]="SQUARE",r[r.ROUND=2]="ROUND",r[r.COUNT=3]="COUNT"})(Ft||(Ft={}));let B=class extends gr{constructor(){super(...arguments),this.output=w.Color,this.capType=Ft.BUTT,this.transparencyPassType=K.NONE,this.occluder=!1,this.hasSlicePlane=!1,this.hasPolygonOffset=!1,this.writeDepth=!1,this.draped=!1,this.stippleEnabled=!1,this.stippleOffColorEnabled=!1,this.stippleScaleWithLineWidth=!1,this.stipplePreferContinuous=!0,this.roundJoins=!1,this.applyMarkerOffset=!1,this.vvSize=!1,this.vvColor=!1,this.vvOpacity=!1,this.falloffEnabled=!1,this.innerColorEnabled=!1,this.hasOccludees=!1,this.hasMultipassTerrain=!1,this.cullAboveGround=!1,this.wireframe=!1,this.objectAndLayerIdColorInstanced=!1}};v([S({count:w.COUNT})],B.prototype,"output",void 0),v([S({count:Ft.COUNT})],B.prototype,"capType",void 0),v([S({count:K.COUNT})],B.prototype,"transparencyPassType",void 0),v([S()],B.prototype,"occluder",void 0),v([S()],B.prototype,"hasSlicePlane",void 0),v([S()],B.prototype,"hasPolygonOffset",void 0),v([S()],B.prototype,"writeDepth",void 0),v([S()],B.prototype,"draped",void 0),v([S()],B.prototype,"stippleEnabled",void 0),v([S()],B.prototype,"stippleOffColorEnabled",void 0),v([S()],B.prototype,"stippleScaleWithLineWidth",void 0),v([S()],B.prototype,"stipplePreferContinuous",void 0),v([S()],B.prototype,"roundJoins",void 0),v([S()],B.prototype,"applyMarkerOffset",void 0),v([S()],B.prototype,"vvSize",void 0),v([S()],B.prototype,"vvColor",void 0),v([S()],B.prototype,"vvOpacity",void 0),v([S()],B.prototype,"falloffEnabled",void 0),v([S()],B.prototype,"innerColorEnabled",void 0),v([S()],B.prototype,"hasOccludees",void 0),v([S()],B.prototype,"hasMultipassTerrain",void 0),v([S()],B.prototype,"cullAboveGround",void 0),v([S()],B.prototype,"wireframe",void 0),v([S({constValue:!0})],B.prototype,"stippleRequiresClamp",void 0),v([S({constValue:!0})],B.prototype,"stippleRequiresStretchMeasure",void 0),v([S({constValue:!0})],B.prototype,"hasVvInstancing",void 0),v([S({constValue:!0})],B.prototype,"hasSliceTranslatedView",void 0),v([S()],B.prototype,"objectAndLayerIdColorInstanced",void 0);const vi=1;function nd(r){const e=new Gr,{vertex:t,fragment:i}=e,s=r.hasMultipassTerrain&&(r.output===w.Color||r.output===w.Alpha);e.include(In),e.include(Uc,r),e.include(Go,r);const n=r.applyMarkerOffset&&!r.draped;n&&(t.uniforms.add(new H("markerScale",p=>p.markerScale)),e.include(od,{space:mr.World})),r.output===w.Depth&&e.include(lo,r),e.include(Rs,r),jr(t,r),t.uniforms.add([new cr("inverseProjectionMatrix",(p,m)=>m.camera.inverseProjectionMatrix),new _t("nearFar",(p,m)=>m.camera.nearFar),new H("miterLimit",p=>p.join!=="miter"?0:p.miterLimit),new Ae("viewport",(p,m)=>m.camera.fullViewport)]),t.constants.add("LARGE_HALF_FLOAT","float",65500),e.attributes.add(u.POSITION,"vec3"),e.attributes.add(u.SUBDIVISIONFACTOR,"float"),e.attributes.add(u.UV0,"vec2"),e.attributes.add(u.AUXPOS1,"vec3"),e.attributes.add(u.AUXPOS2,"vec3"),e.varyings.add("vColor","vec4"),e.varyings.add("vpos","vec3"),co(e),s&&e.varyings.add("depth","float");const a=r.capType===Ft.ROUND,o=r.stippleEnabled&&r.stippleScaleWithLineWidth||a;o&&e.varyings.add("vLineWidth","float");const l=r.stippleEnabled&&r.stippleScaleWithLineWidth;l&&e.varyings.add("vLineSizeInv","float");const c=r.innerColorEnabled||a;c&&e.varyings.add("vLineDistance","float");const d=r.stippleEnabled&&a,h=r.falloffEnabled||d;h&&e.varyings.add("vLineDistanceNorm","float"),a&&(e.varyings.add("vSegmentSDF","float"),e.varyings.add("vReverseSegmentSDF","float")),t.code.add(g`#define PERPENDICULAR(v) vec2(v.y, -v.x);
float interp(float ncp, vec4 a, vec4 b) {
return (-ncp - a.z) / (b.z - a.z);
}
vec2 rotate(vec2 v, float a) {
float s = sin(a);
float c = cos(a);
mat2 m = mat2(c, -s, s, c);
return m * v;
}`),t.code.add(g`vec4 projectAndScale(vec4 pos) {
vec4 posNdc = proj * pos;
posNdc.xy *= viewport.zw / posNdc.w;
return posNdc;
}`),$n(e),t.code.add(g`
    void clipAndTransform(inout vec4 pos, inout vec4 prev, inout vec4 next, in bool isStartVertex) {
      float vnp = nearFar[0] * 0.99;

      if(pos.z > -nearFar[0]) {
        //current pos behind ncp --> we need to clip
        if (!isStartVertex) {
          if(prev.z < -nearFar[0]) {
            //previous in front of ncp
            pos = mix(prev, pos, interp(vnp, prev, pos));
            next = pos;
          } else {
            pos = vec4(0.0, 0.0, 0.0, 1.0);
          }
        } else {
          if(next.z < -nearFar[0]) {
            //next in front of ncp
            pos = mix(pos, next, interp(vnp, pos, next));
            prev = pos;
          } else {
            pos = vec4(0.0, 0.0, 0.0, 1.0);
          }
        }
      } else {
        //current position visible
        if (prev.z > -nearFar[0]) {
          //previous behind ncp
          prev = mix(pos, prev, interp(vnp, pos, prev));
        }
        if (next.z > -nearFar[0]) {
          //next behind ncp
          next = mix(next, pos, interp(vnp, next, pos));
        }
      }

      ${s?"depth = pos.z;":""}
      linearDepth = calculateLinearDepth(nearFar,pos.z);

      pos = projectAndScale(pos);
      next = projectAndScale(next);
      prev = projectAndScale(prev);
    }
  `),t.uniforms.add(new H("pixelRatio",(p,m)=>m.camera.pixelRatio)),t.code.add(g`
  void main(void) {
    // unpack values from uv0.y
    bool isStartVertex = abs(abs(uv0.y)-3.0) == 1.0;

    float coverage = 1.0;

    // Check for special value of uv0.y which is used by the Renderer when graphics
    // are removed before the VBO is recompacted. If this is the case, then we just
    // project outside of clip space.
    if (uv0.y == 0.0) {
      // Project out of clip space
      gl_Position = vec4(1e038, 1e038, 1e038, 1.0);
    }
    else {
      bool isJoin = abs(uv0.y) < 3.0;

      float lineSize = getSize();
      float lineWidth = lineSize * pixelRatio;

      ${o?g`vLineWidth = lineWidth;`:""}
      ${l?g`vLineSizeInv = 1.0 / lineSize;`:""}

      // convert sub-pixel coverage to alpha
      if (lineWidth < 1.0) {
        coverage = lineWidth;
        lineWidth = 1.0;
      }else{
        // Ribbon lines cannot properly render non-integer sizes. Round width to integer size if
        // larger than one for better quality. Note that we do render < 1 pixels more or less correctly
        // so we only really care to round anything larger than 1.
        lineWidth = floor(lineWidth + 0.5);
      }

      vec4 pos  = view * vec4(position.xyz, 1.0);
      vec4 prev = view * vec4(auxpos1.xyz, 1.0);
      vec4 next = view * vec4(auxpos2.xyz, 1.0);
  `),n&&t.code.add(g`vec4 other = isStartVertex ? next : prev;
bool markersHidden = areWorldMarkersHidden(pos, other);
if(!isJoin && !markersHidden) {
pos.xyz += normalize(other.xyz - pos.xyz) * getWorldMarkerSize(pos) * 0.5;
}`),t.code.add(g`clipAndTransform(pos, prev, next, isStartVertex);
vec2 left = (pos.xy - prev.xy);
vec2 right = (next.xy - pos.xy);
float leftLen = length(left);
float rightLen = length(right);`),(r.stippleEnabled||a)&&t.code.add(g`
      float isEndVertex = float(!isStartVertex);
      vec2 segmentOrigin = mix(pos.xy, prev.xy, isEndVertex);
      vec2 segment = mix(right, left, isEndVertex);
      ${a?g`vec2 segmentEnd = mix(next.xy, pos.xy, isEndVertex);`:""}
    `),t.code.add(g`left = (leftLen > 0.001) ? left/leftLen : vec2(0.0, 0.0);
right = (rightLen > 0.001) ? right/rightLen : vec2(0.0, 0.0);
vec2 capDisplacementDir = vec2(0, 0);
vec2 joinDisplacementDir = vec2(0, 0);
float displacementLen = lineWidth;
if (isJoin) {
bool isOutside = (left.x * right.y - left.y * right.x) * uv0.y > 0.0;
joinDisplacementDir = normalize(left + right);
joinDisplacementDir = PERPENDICULAR(joinDisplacementDir);
if (leftLen > 0.001 && rightLen > 0.001) {
float nDotSeg = dot(joinDisplacementDir, left);
displacementLen /= length(nDotSeg * left - joinDisplacementDir);
if (!isOutside) {
displacementLen = min(displacementLen, min(leftLen, rightLen)/abs(nDotSeg));
}
}
if (isOutside && (displacementLen > miterLimit * lineWidth)) {`),r.roundJoins?t.code.add(g`
        vec2 startDir = leftLen < 0.001 ? right : left;
        startDir = PERPENDICULAR(startDir);

        vec2 endDir = rightLen < 0.001 ? left : right;
        endDir = PERPENDICULAR(endDir);

        float factor = ${r.stippleEnabled?g`min(1.0, subdivisionFactor * ${g.float((vi+2)/(vi+1))})`:g`subdivisionFactor`};

        float rotationAngle = acos(clamp(dot(startDir, endDir), -1.0, 1.0));
        joinDisplacementDir = rotate(startDir, -sign(uv0.y) * factor * rotationAngle);
      `):t.code.add(g`if (leftLen < 0.001) {
joinDisplacementDir = right;
}
else if (rightLen < 0.001) {
joinDisplacementDir = left;
}
else {
joinDisplacementDir = (isStartVertex || subdivisionFactor > 0.0) ? right : left;
}
joinDisplacementDir = PERPENDICULAR(joinDisplacementDir);`);const f=r.capType!==Ft.BUTT;return t.code.add(g`
        displacementLen = lineWidth;
      }
    } else {
      // CAP handling ---------------------------------------------------
      joinDisplacementDir = isStartVertex ? right : left;
      joinDisplacementDir = PERPENDICULAR(joinDisplacementDir);

      ${f?g`capDisplacementDir = isStartVertex ? -right : left;`:""}
    }
  `),t.code.add(g`
    // Displacement (in pixels) caused by join/or cap
    vec2 dpos = joinDisplacementDir * sign(uv0.y) * displacementLen + capDisplacementDir * displacementLen;

    ${h||c?g`float lineDistNorm = sign(uv0.y) * pos.w;`:""}

    ${c?g`vLineDistance = lineWidth * lineDistNorm;`:""}
    ${h?g`vLineDistanceNorm = lineDistNorm;`:""}

    pos.xy += dpos;
  `),a&&t.code.add(g`vec2 segmentDir = normalize(segment);
vSegmentSDF = (isJoin && isStartVertex) ? LARGE_HALF_FLOAT : (dot(pos.xy - segmentOrigin, segmentDir) * pos.w) ;
vReverseSegmentSDF = (isJoin && !isStartVertex) ? LARGE_HALF_FLOAT : (dot(pos.xy - segmentEnd, -segmentDir) * pos.w);`),r.stippleEnabled&&(r.draped?t.uniforms.add(new H("worldToScreenRatio",(p,m)=>1/m.screenToPCSRatio)):t.code.add(g`vec3 segmentCenter = mix((auxpos2 + position) * 0.5, (position + auxpos1) * 0.5, isEndVertex);
float worldToScreenRatio = computeWorldToScreenRatio(segmentCenter);`),t.code.add(g`float segmentLengthScreenDouble = length(segment);
float segmentLengthScreen = segmentLengthScreenDouble * 0.5;
float discreteWorldToScreenRatio = discretizeWorldToScreenRatio(worldToScreenRatio);
float segmentLengthRender = length(mix(auxpos2 - position, position - auxpos1, isEndVertex));
vStipplePatternStretch = worldToScreenRatio / discreteWorldToScreenRatio;`),r.draped?t.code.add(g`float segmentLengthPseudoScreen = segmentLengthScreen / pixelRatio * discreteWorldToScreenRatio / worldToScreenRatio;
float startPseudoScreen = uv0.x * discreteWorldToScreenRatio - mix(0.0, segmentLengthPseudoScreen, isEndVertex);`):t.code.add(g`float startPseudoScreen = mix(uv0.x, uv0.x - segmentLengthRender, isEndVertex) * discreteWorldToScreenRatio;
float segmentLengthPseudoScreen = segmentLengthRender * discreteWorldToScreenRatio;`),t.uniforms.add(new H("stipplePatternPixelSize",p=>Us(p))),t.code.add(g`
      float patternLength = ${r.stippleScaleWithLineWidth?"lineSize * ":""} stipplePatternPixelSize;

      // Compute the coordinates at both start and end of the line segment, because we need both to clamp to in the fragment shader
      vStippleDistanceLimits = computeStippleDistanceLimits(startPseudoScreen, segmentLengthPseudoScreen, segmentLengthScreen, patternLength);

      vStippleDistance = mix(vStippleDistanceLimits.x, vStippleDistanceLimits.y, isEndVertex);

      // Adjust the coordinate to the displaced position (the pattern is shortened/overextended on the in/outside of joins)
      if (segmentLengthScreenDouble >= 0.001) {
        // Project the actual vertex position onto the line segment. Note that the resulting factor is within [0..1] at the
        // original vertex positions, and slightly outside of that range at the displaced positions
        vec2 stippleDisplacement = pos.xy - segmentOrigin;
        float stippleDisplacementFactor = dot(segment, stippleDisplacement) / (segmentLengthScreenDouble * segmentLengthScreenDouble);

        // Apply this offset to the actual vertex coordinate (can be screen or pseudo-screen space)
        vStippleDistance += (stippleDisplacementFactor - isEndVertex) * (vStippleDistanceLimits.y - vStippleDistanceLimits.x);
      }

      // Cancel out perspective correct interpolation because we want this length the really represent the screen distance
      vStippleDistanceLimits *= pos.w;
      vStippleDistance *= pos.w;

      // Disable stipple distance limits on caps
      vStippleDistanceLimits = isJoin ?
                                 vStippleDistanceLimits :
                                 isStartVertex ?
                                  vec2(-1e038, vStippleDistanceLimits.y) :
                                  vec2(vStippleDistanceLimits.x, 1e038);
    `)),t.code.add(g`
      // Convert back into NDC
      pos.xy = (pos.xy / viewport.zw) * pos.w;

      vColor = getColor();
      vColor.a *= coverage;

      ${r.wireframe&&!r.draped?"pos.z -= 0.001 * pos.w;":""}

      // transform final position to camera space for slicing
      vpos = (inverseProjectionMatrix * pos).xyz;
      gl_Position = pos;
      forwardObjectAndLayerIdColor();
    }
  }
  `),s&&e.include(Ps,r),e.include(pt,r),i.include(Ai),i.code.add(g`
  void main() {
    discardBySlice(vpos);
    ${s?"terrainDepthTest(gl_FragCoord, depth);":""}
  `),r.wireframe?i.code.add(g`vec4 finalColor = vec4(1.0, 0.0, 1.0, 1.0);`):(a&&i.code.add(g`
      float sdf = min(vSegmentSDF, vReverseSegmentSDF);
      vec2 fragmentPosition = vec2(
        min(sdf, 0.0),
        vLineDistance
      ) * gl_FragCoord.w;

      float fragmentRadius = length(fragmentPosition);
      float fragmentCapSDF = (fragmentRadius - vLineWidth) * 0.5; // Divide by 2 to transform from double pixel scale
      float capCoverage = clamp(0.5 - fragmentCapSDF, 0.0, 1.0);

      if (capCoverage < ${g.float(Ne)}) {
        discard;
      }
    `),d?i.code.add(g`
      vec2 stipplePosition = vec2(
        min(getStippleSDF() * 2.0 - 1.0, 0.0),
        vLineDistanceNorm * gl_FragCoord.w
      );
      float stippleRadius = length(stipplePosition * vLineWidth);
      float stippleCapSDF = (stippleRadius - vLineWidth) * 0.5; // Divide by 2 to transform from double pixel scale
      float stippleCoverage = clamp(0.5 - stippleCapSDF, 0.0, 1.0);
      float stippleAlpha = step(${g.float(Ne)}, stippleCoverage);
      `):i.code.add(g`float stippleAlpha = getStippleAlpha();`),i.uniforms.add(new Ae("intrinsicColor",p=>p.color)),i.code.add(g`discardByStippleAlpha(stippleAlpha, stippleAlphaColorDiscard);
vec4 color = intrinsicColor * vColor;`),r.innerColorEnabled&&(i.uniforms.add(new Ae("innerColor",p=>k(p.innerColor,p.color))),i.uniforms.add(new H("innerWidth",(p,m)=>p.innerWidth*m.camera.pixelRatio)),i.code.add(g`float distToInner = abs(vLineDistance * gl_FragCoord.w) - innerWidth;
float innerAA = clamp(0.5 - distToInner, 0.0, 1.0);
float innerAlpha = innerColor.a + color.a * (1.0 - innerColor.a);
color = mix(color, vec4(innerColor.rgb, innerAlpha), innerAA);`)),i.code.add(g`vec4 finalColor = blendStipple(color, stippleAlpha);`),r.falloffEnabled&&(i.uniforms.add(new H("falloff",p=>p.falloff)),i.code.add(g`finalColor.a *= pow(max(0.0, 1.0 - abs(vLineDistanceNorm * gl_FragCoord.w)), falloff);`))),i.code.add(g`
    if (finalColor.a < ${g.float(Ne)}) {
      discard;
    }

    ${r.output===w.Alpha?g`gl_FragColor = vec4(finalColor.a);`:""}
    ${r.output===w.Color?g`gl_FragColor = highlightSlice(finalColor, vpos);`:""}
    ${r.output===w.Color&&r.transparencyPassType===K.Color?"gl_FragColor = premultiplyAlpha(gl_FragColor);":""}
    ${r.output===w.Highlight?g`gl_FragColor = vec4(1.0);`:""}
    ${r.output===w.Depth?g`outputDepth(linearDepth);`:""}
    ${r.output===w.ObjectAndLayerIdColor?g`outputObjectAndLayerIdColor();`:""}
  }
  `),e}const ld=Object.freeze(Object.defineProperty({__proto__:null,NUM_ROUND_JOIN_SUBDIVISIONS:vi,build:nd},Symbol.toStringTag,{value:"Module"})),Qo=new Map([[u.POSITION,0],[u.SUBDIVISIONFACTOR,1],[u.UV0,2],[u.AUXPOS1,3],[u.AUXPOS2,4],[u.COLOR,5],[u.COLORFEATUREATTRIBUTE,5],[u.SIZE,6],[u.SIZEFEATUREATTRIBUTE,6],[u.OPACITYFEATUREATTRIBUTE,7],[u.OBJECTANDLAYERIDCOLOR,8]]);let Gs=class extends vr{initializeProgram(e){return new _r(e.rctx,Gs.shader.get().build(this.configuration),Qo)}_makePipelineState(e,t){const i=this.configuration,s=e===K.NONE,n=e===K.FrontFace;return Xe({blending:i.output===w.Color||i.output===w.Alpha?s?Er:bi(e):null,depthTest:{func:Cs(e)},depthWrite:s?i.writeDepth&&lr:to(e),colorWrite:it,stencilWrite:i.hasOccludees?ci:null,stencilTest:i.hasOccludees?t?di:Ds:null,polygonOffset:s||n?i.hasPolygonOffset&&ga:An})}initializePipeline(){const e=this.configuration;if(e.occluder){const t=e.hasPolygonOffset&&ga;this._occluderPipelineTransparent=Xe({blending:Er,polygonOffset:t,depthTest:Ys,depthWrite:null,colorWrite:it,stencilWrite:null,stencilTest:Mn}),this._occluderPipelineOpaque=Xe({blending:Er,polygonOffset:t,depthTest:Ys,depthWrite:null,colorWrite:it,stencilWrite:Ln,stencilTest:Nn}),this._occluderPipelineMaskWrite=Xe({blending:null,polygonOffset:t,depthTest:ho,depthWrite:null,colorWrite:null,stencilWrite:ci,stencilTest:di})}return this._occludeePipelineState=this._makePipelineState(this.configuration.transparencyPassType,!0),this._makePipelineState(this.configuration.transparencyPassType,!1)}get primitiveType(){return this.configuration.wireframe?fr.LINES:fr.TRIANGLE_STRIP}getPipelineState(e,t){return t?this._occludeePipelineState:this.configuration.occluder?e===j.TRANSPARENT_OCCLUDER_MATERIAL?this._occluderPipelineTransparent:e===j.OCCLUDER_MATERIAL?this._occluderPipelineOpaque:this._occluderPipelineMaskWrite:super.getPipelineState(e,t)}};Gs.shader=new yr(ld,()=>xr(()=>import("./RibbonLine.glsl-3bf90862.js"),["assets/RibbonLine.glsl-3bf90862.js","assets/SSAOHelper-868f5969.js","assets/typedArrayUtil-d9bc5fbd.js","assets/OrderIndependentTransparency-68bd812c.js","assets/enums-64ab819c.js","assets/cast-a534ae90.js","assets/string-480f3e3f.js","assets/Error-57322e92.js","assets/ensureType-25b8cc06.js","assets/nextTick-3ee5a785.js","assets/promiseUtils-32d9c228.js","assets/vec3-1863987c.js","assets/vec3f64-6cd30318.js","assets/common-c186b691.js","assets/Util-289ce3b5.js","assets/vec2f64-30dc1443.js","assets/vec4-46a9b36d.js","assets/vec4f64-939de194.js","assets/triangle-8cd02c5d.js","assets/sphere-622880b9.js","assets/mathUtils-57aba1ea.js","assets/mat4-7dde83b1.js","assets/byteSizeEstimations-90c5a50d.js","assets/quatf64-c94bd656.js","assets/mat4f64-fbeb2cd1.js","assets/lineSegment-c6f0b9d1.js","assets/Indices-d9b791ce.js","assets/VertexAttribute-9c5c630d.js","assets/ScreenSpacePass-6db805f2.js","assets/vec2-ab9f47bf.js","assets/compilerUtils-fefa73ae.js","assets/Evented-cbf5f368.js","assets/request-f17a8ddb.js","assets/preload-helper-101896b7.js","assets/requestImageUtils-f656eddc.js","assets/SSAO.glsl-3068f7bf.js","assets/assets-a5ce5e1a.js","assets/Texture-411ca148.js","assets/context-util-d4c193b5.js","assets/VertexArrayObject-3630ef4f.js","assets/mat4f32-77b3d8ac.js","assets/BufferView-478024d2.js","assets/aaBoundingBox-4a83dbbc.js","assets/Extent-a1a1de42.js","assets/aaBoundingRect-b340cf8c.js","assets/ViewingMode-915d19cb.js","assets/mat3-9a8d9db7.js","assets/quat-ec16a584.js","assets/vec3f32-4322908d.js","assets/SSAOBlur.glsl-ea338452.js","assets/VertexElementDescriptor-2925c6af.js","assets/floatRGBA-090399ba.js","assets/plane-46a8c767.js","assets/ElevationInfo-88554f24.js","assets/jsonMap-190c5593.js","assets/fieldUtils-77ec75e2.js","assets/arcadeOnDemand-5175e7d9.js","assets/geometry-eec1b371.js","assets/Polyline-b571c705.js","assets/typeUtils-cd52dc20.js","assets/lengthUtils-92fed992.js","assets/unitUtils-dd6fb8ee.js","assets/index-7dfdb274.js","assets/Basemap-f70b1b37.js","assets/Collection-7c37b74e.js","assets/SimpleObservable-8e532943.js","assets/collectionUtils-0365f48b.js","assets/deprecate-0d93948c.js","assets/Loadable-46524a7e.js","assets/Promise-368b703a.js","assets/loadAll-01cdf0a9.js","assets/asyncUtils-087555fc.js","assets/Portal-51616380.js","assets/locale-30120714.js","assets/PortalGroup-d495847c.js","assets/PortalUser-e16fc7d1.js","assets/PortalItem-6eebfb2b.js","assets/messages-28bf3b89.js","assets/writeUtils-3bde6e49.js","assets/layerUtils-68eea656.js","assets/Color-af6e0c66.js","assets/colorUtils-639f4d25.js","assets/enumeration-61a13175.js","assets/opacityUtils-1333f803.js","assets/CollectionFlattener-f43a0fce.js","assets/TablesMixin-a4aaaf91.js","assets/Layer-ead8c88c.js","assets/Identifiable-093f90a8.js","assets/Graphic-1859ae71.js","assets/PopupTemplate-52faab17.js","assets/Clonable-9b34e760.js","assets/number-2ab8ca0d.js","assets/symbols-75e7a993.js","assets/CIMSymbol-8f02a6e3.js","assets/Symbol-8266348e.js","assets/screenUtils-90993e16.js","assets/symbolLayerUtils3D-c8c40895.js","assets/persistableUrlUtils-56d43b12.js","assets/jsonUtils-c6684c52.js","assets/Cyclical-078b4564.js","assets/reactiveUtils-5869e41a.js","assets/workers-5d67fe7a.js","assets/Connection-b756149d.js","assets/Queue-275a6362.js","assets/intl-70c09a3c.js","assets/projection-0af97a56.js","assets/zscale-48bab05e.js","assets/TileInfo-c5c8c8d2.js","assets/widget-09d2e7af.js","assets/uuid-73213768.js","assets/dom-5b7af1bf.js","assets/HandleOwner-2edbba46.js","assets/executeQueryJSON-0696009a.js","assets/normalizeUtils-6483f6b5.js","assets/query-71223310.js","assets/pbfQueryUtils-c922ef32.js","assets/pbf-8b0546e8.js","assets/OptimizedFeature-73582c6e.js","assets/OptimizedFeatureSet-1d1ac4b9.js","assets/queryZScale-3c8de33a.js","assets/FeatureSet-9cc47aef.js","assets/Field-1d4f9ca4.js","assets/fieldType-b34e5d2d.js","assets/Query-13124a97.js","assets/TimeExtent-2004eecf.js","assets/RelationshipQuery-c27267ab.js","assets/LegendOptions-2e7b3d70.js","assets/utils-4aa03157.js","assets/BlendLayer-813950f9.js","assets/parser-01f6451e.js","assets/ItemCache-bf1028d4.js","assets/MemCache-1d2f56ee.js","assets/utils-0c7f5071.js","assets/jsonUtils-559e9000.js","assets/UniqueValueRenderer-30750d31.js","assets/diffUtils-8a8cb5bc.js","assets/colorRamps-8d7efc14.js","assets/sizeVariableUtils-d4870b0d.js","assets/jsonUtils-eb568237.js","assets/styleUtils-015eeecd.js","assets/DictionaryLoader-326d0e17.js","assets/LRUCache-b9228ca3.js","assets/heatmapUtils-3d7c22c5.js","assets/featureConversionUtils-d2229ed4.js","assets/TopFeaturesQuery-9aca00bf.js","assets/FeatureLayer-9a7e04cf.js","assets/MultiOriginJSONSupport-b8792dfa.js","assets/LayerFloorInfo-e7c896e5.js","assets/FeatureLayerBase-d5682b4b.js","assets/HeightModelInfo-34f16d74.js","assets/arcgisLayerUrl-6e9db12f.js","assets/OperationalLayer-1dad72ac.js","assets/editsZScale-12d81957.js","assets/APIKeyMixin-b6e4f897.js","assets/ArcGISService-e571bcff.js","assets/CustomParametersMixin-a5d06ccc.js","assets/EditBusLayer-b5dc3689.js","assets/FeatureReductionLayer-1e5c4045.js","assets/labelingInfo-be3a629c.js","assets/labelUtils-4f4b54c6.js","assets/defaultsJSON-59981e75.js","assets/OrderedLayer-9623e905.js","assets/PortalLayer-9dd15f09.js","assets/RefreshableLayer-49182ab8.js","assets/ScaleRangeLayer-c072e266.js","assets/TemporalLayer-f784dd83.js","assets/TimeInfo-f76d6c20.js","assets/FeatureTemplate-c4496b93.js","assets/FeatureType-0be9420b.js","assets/fieldProperties-9e220f14.js","assets/FieldsIndex-16707836.js","assets/versionUtils-f229b9a6.js","assets/styleUtils-08eaa4d2.js","assets/popupUtils-88fed094.js","assets/colorUtils-82440b70.js","assets/mat2d-d0b91e3e.js","assets/Scheduler-5e6ccc87.js","assets/GraphicsLayer-a7c6f685.js","assets/unitBezier-881ac1eb.js","assets/mat3f32-d3d088e8.js","assets/vec2f32-461e65a9.js","assets/TileStrategy-a5366189.js","assets/TileStore-8f580dbf.js","assets/TileKey-9cae9369.js","assets/rbush-8e36784a.js","assets/quickselect-322ec8e1.js","assets/capabilities-d08b6e58.js","assets/Subtype-a3103d84.js","assets/datetime-4f774298.js","assets/elevationInfoUtils-44cce436.js","assets/QueryEngineResult-eb704fb1.js","assets/utils-52ad3c09.js","assets/generateRendererUtils-2f0b667c.js","assets/WhereClause-6c9440a1.js","assets/utils-63166b41.js","assets/json-48e3ea08.js","assets/EffectView-dffeb0bc.js","assets/ExportImageParameters-3714ed4b.js","assets/sublayerUtils-eea48c01.js","assets/webStyleSymbolUtils-6bef877f.js","assets/devEnvironmentUtils-5002a058.js","assets/dehydratedFeatures-3dcd65f1.js","assets/enums-4b2a86a0.js","assets/index-a8abe695.css","assets/InterleavedLayout-b5930508.js","assets/types-e1c0a5bf.js","assets/triangulationUtils-6b510de4.js","assets/earcut-58237617.js","assets/deduplicate-d92c3cc2.js","assets/NestedMap-1b5db22e.js","assets/Octree-8ed6dc77.js","assets/boundedPlane-296928f6.js","assets/glUtil-7aa58841.js"]));const ga={factor:0,units:-4};var be;(function(r){r[r.LEFT_JOIN_START=-2]="LEFT_JOIN_START",r[r.LEFT_JOIN_END=-1]="LEFT_JOIN_END",r[r.LEFT_CAP_START=-4]="LEFT_CAP_START",r[r.LEFT_CAP_END=-5]="LEFT_CAP_END",r[r.RIGHT_JOIN_START=2]="RIGHT_JOIN_START",r[r.RIGHT_JOIN_END=1]="RIGHT_JOIN_END",r[r.RIGHT_CAP_START=4]="RIGHT_CAP_START",r[r.RIGHT_CAP_END=5]="RIGHT_CAP_END"})(be||(be={}));let cd=class extends Ur{constructor(e){super(e,new hd),this._configuration=new B,this._vertexAttributeLocations=Qo,this._layout=this.createLayout()}isClosed(e,t){return Yo(this.parameters,e,t)}getConfiguration(e,t){this._configuration.output=e,this._configuration.draped=t.slot===j.DRAPED_MATERIAL;const i=C(this.parameters.stipplePattern)&&e!==w.Highlight;return this._configuration.stippleEnabled=i,this._configuration.stippleOffColorEnabled=i&&C(this.parameters.stippleOffColor),this._configuration.stippleScaleWithLineWidth=i&&this.parameters.stippleScaleWithLineWidth,this._configuration.stipplePreferContinuous=i&&this.parameters.stipplePreferContinuous,this._configuration.hasSlicePlane=this.parameters.hasSlicePlane,this._configuration.hasOccludees=this.parameters.hasOccludees,this._configuration.roundJoins=this.parameters.join==="round",this._configuration.capType=this.parameters.cap,this._configuration.applyMarkerOffset=!!C(this.parameters.markerParameters)&&pd(this.parameters.markerParameters),this._configuration.hasPolygonOffset=this.parameters.hasPolygonOffset,this._configuration.writeDepth=this.parameters.writeDepth,this._configuration.vvColor=this.parameters.vvColorEnabled,this._configuration.vvOpacity=this.parameters.vvOpacityEnabled,this._configuration.vvSize=this.parameters.vvSizeEnabled,this._configuration.innerColorEnabled=this.parameters.innerWidth>0&&C(this.parameters.innerColor),this._configuration.falloffEnabled=this.parameters.falloff>0,this._configuration.occluder=this.parameters.renderOccluded===gt.OccludeAndTransparentStencil,this._configuration.transparencyPassType=t.transparencyPassType,this._configuration.hasMultipassTerrain=t.multipassTerrain.enabled,this._configuration.cullAboveGround=t.multipassTerrain.cullAboveGround,this._configuration.wireframe=this.parameters.wireframe,this._configuration}intersect(e,t,i,s,n,a,o,l,c){C(c)?this._intersectDrapedLineGeometry(e,s,c,a,o):this._intersectLineGeometry(e,t,i,s,o)}_intersectDrapedLineGeometry(e,t,i,s,n){if(!t.options.selectionMode)return;const a=e.vertexAttributes.get(u.POSITION).data,o=e.vertexAttributes.get(u.SIZE);let l=this.parameters.width;if(this.parameters.vvSizeEnabled){const m=e.vertexAttributes.get(u.SIZEFEATUREATTRIBUTE).data[0];l*=tr(this.parameters.vvSizeOffset[0]+m*this.parameters.vvSizeFactor[0],this.parameters.vvSizeMinSize[0],this.parameters.vvSizeMaxSize[0])}else o&&(l*=o.data[0]);const c=s[0],d=s[1],h=(l/2+4)*e.screenToWorldRatio;let f=Number.MAX_VALUE,p=0;for(let m=0;m<a.length-5;m+=3){const _=a[m],T=a[m+1],y=c-_,x=d-T,O=a[m+3]-_,R=a[m+4]-T,b=tr((O*y+R*x)/(O*O+R*R),0,1),A=O*b-y,E=R*b-x,L=A*A+E*E;L<f&&(f=L,p=m/3)}f<h*h&&n(i.dist,i.normal,p,!1)}_intersectLineGeometry(e,t,i,s,n){if(!s.options.selectionMode||Ri(t))return;if(!wo(i))return void Hr.getLogger("esri.views.3d.webgl-engine.materials.RibbonLineMaterial").error("intersection assumes a translation-only matrix");const a=e.vertexAttributes,o=a.get(u.POSITION).data;let l=this.parameters.width;if(this.parameters.vvSizeEnabled){const y=a.get(u.SIZEFEATUREATTRIBUTE).data[0];l*=tr(this.parameters.vvSizeOffset[0]+y*this.parameters.vvSizeFactor[0],this.parameters.vvSizeMinSize[0],this.parameters.vvSizeMaxSize[0])}else a.has(u.SIZE)&&(l*=a.get(u.SIZE).data[0]);const c=s.camera,d=fd;Sr(d,s.point);const h=l*c.pixelRatio/2+4*c.pixelRatio;U(Or[0],d[0]-h,d[1]+h,0),U(Or[1],d[0]+h,d[1]+h,0),U(Or[2],d[0]+h,d[1]-h,0),U(Or[3],d[0]-h,d[1]-h,0);for(let y=0;y<4;y++)if(!c.unprojectFromRenderScreen(Or[y],Ye[y]))return;ut(c.eye,Ye[0],Ye[1],Bi),ut(c.eye,Ye[1],Ye[2],Wi),ut(c.eye,Ye[2],Ye[3],ki),ut(c.eye,Ye[3],Ye[0],qi);let f=Number.MAX_VALUE,p=0;const m=ys(this.parameters,a,e.indices)?o.length-2:o.length-5;for(let y=0;y<m;y+=3){Se[0]=o[y]+i[12],Se[1]=o[y+1]+i[13],Se[2]=o[y+2]+i[14];const x=(y+3)%o.length;if(xe[0]=o[x]+i[12],xe[1]=o[x+1]+i[13],xe[2]=o[x+2]+i[14],ae(Bi,Se)<0&&ae(Bi,xe)<0||ae(Wi,Se)<0&&ae(Wi,xe)<0||ae(ki,Se)<0&&ae(ki,xe)<0||ae(qi,Se)<0&&ae(qi,xe)<0)continue;if(c.projectToRenderScreen(Se,bt),c.projectToRenderScreen(xe,At),bt[2]<0&&At[2]>0){ie(Ge,Se,xe);const R=c.frustum,b=-ae(R[mt.NEAR],Se)/st(Ge,li(R[mt.NEAR]));W(Ge,Ge,b),ee(Se,Se,Ge),c.projectToRenderScreen(Se,bt)}else if(bt[2]>0&&At[2]<0){ie(Ge,xe,Se);const R=c.frustum,b=-ae(R[mt.NEAR],xe)/st(Ge,li(R[mt.NEAR]));W(Ge,Ge,b),ee(xe,xe,Ge),c.projectToRenderScreen(xe,At)}else if(bt[2]<0&&At[2]<0)continue;bt[2]=0,At[2]=0;const O=No(sr(bt,At,ya),d);O<f&&(f=O,z(va,Se),z(_a,xe),p=y/3)}const _=s.rayBegin,T=s.rayEnd;if(f<h*h){let y=Number.MAX_VALUE;if(Fo(sr(va,_a,ya),sr(_,T,md),Ct)){ie(Ct,Ct,_);const x=rt(Ct);W(Ct,Ct,1/x),y=x/yt(_,T)}n(y,Ct,p,!1)}}computeAttachmentOrigin(e,t){const i=e.vertexAttributes;if(!i)return!1;const s=e.indices,n=i.get(u.POSITION);return uo(n,s?s.get(u.POSITION):null,s&&ys(this.parameters,i,s),t)}createLayout(){const e=wt().vec3f(u.POSITION).f32(u.SUBDIVISIONFACTOR).vec2f(u.UV0).vec3f(u.AUXPOS1).vec3f(u.AUXPOS2);return this.parameters.vvSizeEnabled?e.f32(u.SIZEFEATUREATTRIBUTE):e.f32(u.SIZE),this.parameters.vvColorEnabled?e.f32(u.COLORFEATUREATTRIBUTE):e.vec4f(u.COLOR),this.parameters.vvOpacityEnabled&&e.f32(u.OPACITYFEATUREATTRIBUTE),vt("enable-feature:objectAndLayerId-rendering")&&e.vec4u8(u.OBJECTANDLAYERIDCOLOR),e}createBufferWriter(){return new ud(this._layout,this.parameters)}requiresSlot(e,t){return t===w.Color||t===w.Alpha||t===w.Highlight||t===w.Depth||t===w.ObjectAndLayerIdColor?e===j.DRAPED_MATERIAL?!0:this.parameters.renderOccluded===gt.OccludeAndTransparentStencil?e===j.OPAQUE_MATERIAL||e===j.OCCLUDER_MATERIAL||e===j.TRANSPARENT_OCCLUDER_MATERIAL:t===w.Color||t===w.Alpha?e===(this.parameters.writeDepth?j.TRANSPARENT_MATERIAL:j.TRANSPARENT_DEPTH_WRITE_DISABLED_MATERIAL):e===j.OPAQUE_MATERIAL:!1}createGLMaterial(e){return new dd(e)}validateParameters(e){e.join!=="miter"&&(e.miterLimit=0),C(e.markerParameters)&&(e.markerScale=e.markerParameters.width/e.width)}},dd=class extends Pi{constructor(){super(...arguments),this._stipplePattern=null}dispose(){super.dispose(),this._stippleTextureRepository.release(this._stipplePattern),this._stipplePattern=null}_updateOccludeeState(e){e.hasOccludees!==this._material.parameters.hasOccludees&&this._material.setParameters({hasOccludees:e.hasOccludees})}beginSlot(e){this._output!==w.Color&&this._output!==w.Alpha||this._updateOccludeeState(e);const t=this._material.parameters.stipplePattern;return this._stipplePattern!==t&&(this._material.setParameters(this._stippleTextureRepository.swap(this._stipplePattern,t)),this._stipplePattern=t),this.ensureTechnique(Gs,e)}},hd=class extends Fn{constructor(){super(...arguments),this.width=0,this.color=Ei,this.join="miter",this.cap=Ft.BUTT,this.miterLimit=5,this.writeDepth=!0,this.hasPolygonOffset=!1,this.stippleTexture=null,this.stippleScaleWithLineWidth=!1,this.stipplePreferContinuous=!0,this.markerParameters=null,this.markerScale=1,this.hasSlicePlane=!1,this.vvFastUpdate=!1,this.isClosed=!1,this.falloff=0,this.innerWidth=0,this.hasOccludees=!1,this.wireframe=!1}},ud=class{constructor(e,t){this._parameters=t,this.numJoinSubdivisions=0,this.vertexBufferLayout=e;const i=t.stipplePattern?1:0;switch(this._parameters.join){case"miter":case"bevel":this.numJoinSubdivisions=i;break;case"round":this.numJoinSubdivisions=vi+i}}_isClosed(e){return ys(this._parameters,e.vertexAttributes,e.indices)}allocate(e){return this.vertexBufferLayout.createBuffer(e)}elementCount(e){const i=e.indices.get(u.POSITION).length/2+1,s=this._isClosed(e);let n=s?2:2*2;return n+=((s?i:i-1)-(s?0:1))*(2*this.numJoinSubdivisions+4),n+=2,this._parameters.wireframe&&(n=2+4*(n-2)),n}write(e,t,i,s,n){var jt;const a=gd,o=vd,l=_d,c=i.vertexAttributes.get(u.POSITION).data,d=i.indices&&i.indices.get(u.POSITION),h=(jt=i.vertexAttributes.get(u.DISTANCETOSTART))==null?void 0:jt.data;d&&d.length!==2*(c.length/3-1)&&console.warn("RibbonLineMaterial does not support indices");let f=1,p=0;this._parameters.vvSizeEnabled?p=i.vertexAttributes.get(u.SIZEFEATUREATTRIBUTE).data[0]:i.vertexAttributes.has(u.SIZE)&&(f=i.vertexAttributes.get(u.SIZE).data[0]);let m=[1,1,1,1],_=0;this._parameters.vvColorEnabled?_=i.vertexAttributes.get(u.COLORFEATUREATTRIBUTE).data[0]:i.vertexAttributes.has(u.COLOR)&&(m=i.vertexAttributes.get(u.COLOR).data);let T=null;vt("enable-feature:objectAndLayerId-rendering")&&(T=i.objectAndLayerIdColor);let y=0;this._parameters.vvOpacityEnabled&&(y=i.vertexAttributes.get(u.OPACITYFEATUREATTRIBUTE).data[0]);const x=c.length/3,O=new Float32Array(s.buffer),R=vt("enable-feature:objectAndLayerId-rendering")?new Uint8Array(s.buffer):null,b=this.vertexBufferLayout.stride/4;let A=n*b;const E=A;let L=0;const he=h?(Z,Me,Fe)=>L=h[Fe]:(Z,Me,Fe)=>L+=yt(Z,Me),D=(Z,Me,Fe,$,Tt,He,wr)=>{if(O[A++]=Me[0],O[A++]=Me[1],O[A++]=Me[2],O[A++]=$,O[A++]=wr,O[A++]=Tt,O[A++]=Z[0],O[A++]=Z[1],O[A++]=Z[2],O[A++]=Fe[0],O[A++]=Fe[1],O[A++]=Fe[2],this._parameters.vvSizeEnabled?O[A++]=p:O[A++]=f,this._parameters.vvColorEnabled)O[A++]=_;else{const ot=Math.min(4*He,m.length-4);O[A++]=m[ot+0],O[A++]=m[ot+1],O[A++]=m[ot+2],O[A++]=m[ot+3]}this._parameters.vvOpacityEnabled&&(O[A++]=y),vt("enable-feature:objectAndLayerId-rendering")&&(C(T)&&(R[4*A+0]=T[0],R[4*A+1]=T[1],R[4*A+2]=T[2],R[4*A+3]=T[3]),A++)};A+=b,U(o,c[0],c[1],c[2]),e&&q(o,o,e);const G=this._isClosed(i);if(G){const Z=c.length-3;U(a,c[Z],c[Z+1],c[Z+2]),e&&q(a,a,e)}else U(l,c[3],c[4],c[5]),e&&q(l,l,e),D(o,o,l,1,be.LEFT_CAP_START,0,0),D(o,o,l,1,be.RIGHT_CAP_START,0,0),z(a,o),z(o,l);const ue=G?0:1,Ve=G?x:x-1;for(let Z=ue;Z<Ve;Z++){const Me=(Z+1)%x*3;U(l,c[Me+0],c[Me+1],c[Me+2]),e&&q(l,l,e),he(a,o,Z),D(a,o,l,0,be.LEFT_JOIN_END,Z,L),D(a,o,l,0,be.RIGHT_JOIN_END,Z,L);const Fe=this.numJoinSubdivisions;for(let $=0;$<Fe;++$){const Tt=($+1)/(Fe+1);D(a,o,l,Tt,be.LEFT_JOIN_END,Z,L),D(a,o,l,Tt,be.RIGHT_JOIN_END,Z,L)}D(a,o,l,1,be.LEFT_JOIN_START,Z,L),D(a,o,l,1,be.RIGHT_JOIN_START,Z,L),z(a,o),z(o,l)}G?(U(l,c[3],c[4],c[5]),e&&q(l,l,e),L=he(a,o,Ve),D(a,o,l,0,be.LEFT_JOIN_END,ue,L),D(a,o,l,0,be.RIGHT_JOIN_END,ue,L)):(L=he(a,o,Ve),D(a,o,o,0,be.LEFT_CAP_END,Ve,L),D(a,o,o,0,be.RIGHT_CAP_END,Ve,L)),Gi(O,E+b,O,E,b),A=Gi(O,A-b,O,A,b),this._parameters.wireframe&&this._addWireframeVertices(s,E,A,b)}_addWireframeVertices(e,t,i,s){const n=new Float32Array(e.buffer,i*Float32Array.BYTES_PER_ELEMENT),a=new Float32Array(e.buffer,t*Float32Array.BYTES_PER_ELEMENT,i-t);let o=0;const l=c=>o=Gi(a,c,n,o,s);for(let c=0;c<a.length-1;c+=2*s)l(c),l(c+2*s),l(c+1*s),l(c+2*s),l(c+1*s),l(c+3*s)}};function Gi(r,e,t,i,s){for(let n=0;n<s;n++)t[i++]=r[e++];return i}function ys(r,e,t){return Yo(r,e.get(u.POSITION).data,t?t.get(u.POSITION):null)}function Yo(r,e,t){return!!r.isClosed&&(t?t.length>2:e.length>6)}function pd(r){return r.anchor===Fr.Tip&&r.hideOnShortSegments&&r.placement==="begin-end"&&r.worldSpace}const Se=I(),xe=I(),Ge=I(),Ct=I(),fd=I(),bt=Ie(),At=Ie(),va=I(),_a=I(),ya=$i(),md=$i(),gd=I(),vd=I(),_d=I(),Or=[Ie(),Ie(),Ie(),Ie()],Ye=[I(),I(),I(),I()],Bi=at(),Wi=at(),ki=at(),qi=at();function Ko(r){return r.type==="point"}function jf(r,e){if(r.type==="point")return nt(r,e,!1);if(Il(r))switch(r.type){case"extent":return nt(r.center,e,!1);case"polygon":return nt(r.centroid,e,!1);case"polyline":return nt(Sa(r),e,!0);case"mesh":return nt(r.origin,e,!1)}else switch(r.type){case"extent":return nt(yd(r),e,!0);case"polygon":return nt(Sd(r),e,!0);case"polyline":return nt(Sa(r),e,!0)}}function Sa(r){const e=r.paths[0];if(!e||e.length===0)return null;const t=gc(e,vc(e)/2);return zs(t[0],t[1],t[2],r.spatialReference)}function yd(r){const e=isFinite(r.zmin);return zs(.5*(r.xmax+r.xmin),.5*(r.ymax+r.ymin),e?.5*(r.zmax+r.zmin):void 0,r.spatialReference)}function Sd(r){const e=r.rings[0];if(!e||e.length===0)return null;const t=_c(r.rings,r.hasZ);return zs(t[0],t[1],t[2],r.spatialReference)}function nt(r,e,t){const i=t?r:$l(r);return e&&r?nc(r,i,e)?i:null:i}function Uf(r,e,t,i=0){if(r){e||(e=ir());const s=r;let n=.5*s.width*(t-1),a=.5*s.height*(t-1);return s.width<1e-7*s.height?n+=a/20:s.height<1e-7*s.width&&(a+=n/20),Nr(e,s.xmin-n-i,s.ymin-a-i,s.xmax+n+i,s.ymax+a+i),e}return null}function xd(r,e){for(let t=0;t<r.geometries.length;++t){const i=r.geometries[t].getMutableAttribute(u.AUXPOS1);i&&i.data[3]!==e&&(i.data[3]=e,r.geometryVertexAttrsUpdated(r.geometryRecords[t]))}}function Vf(r,e){const t=ql(Ei);return C(r)&&(t[0]=r[0],t[1]=r[1],t[2]=r[2]),C(e)?t[3]=e:C(r)&&r.length>3&&(t[3]=r[3]),t}function Hf(r=_n,e,t,i=1){const s=new Array(3);if(V(e)||V(t))s[0]=1,s[1]=1,s[2]=1;else{let n,a=0;for(let o=2;o>=0;o--){const l=r[o];let c;const d=l!=null,h=o===0&&!n&&!d,f=t[o];l==="symbol-value"||h?c=f!==0?e[o]/f:1:d&&l!=="proportional"&&isFinite(l)&&(c=f!==0?l/f:1),c!=null&&(s[o]=c,n=c,a=Math.max(a,Math.abs(c)))}for(let o=2;o>=0;o--)s[o]==null?s[o]=n:s[o]===0&&(s[o]=.001*a)}for(let n=2;n>=0;n--)s[n]/=i;return vn(s)}function wd(r){return r.isPrimitive!=null}function Gf(r){return wd(r)&&(r=[r.width,r.depth,r.height]),en(r)?null:"Symbol sizes may not be negative values"}function en(r){if(Array.isArray(r)){for(const e of r)if(!en(e))return!1;return!0}return r==null||r>=0}function Bf(r,e,t,i=X()){const s=r||0,n=e||0,a=t||0;return s!==0&&Fl(i,i,-s/180*Math.PI),n!==0&&zl(i,i,n/180*Math.PI),a!==0&&jl(i,i,a/180*Math.PI),i}function Wf(r,e,t){if(t.minDemResolution!=null)return t.minDemResolution;const i=dc(e),s=pc(r)*i,n=fc(r)*i,a=mc(r)*(e.isGeographic?1:i);return s===0&&n===0&&a===0?t.minDemResolutionForPoints:.01*Math.max(s,n,a)}let kf=class{constructor(e,t=null,i=0){this.array=e,this.spatialReference=t,this.offset=i}};function tn(r){return"array"in r}function Xr(r,e,t="ground"){if(Ko(e))return r.getElevation(e.x,e.y,e.z||0,e.spatialReference,t);if(tn(e)){let i=e.offset;return r.getElevation(e.array[i++],e.array[i++],e.array[i]||0,k(e.spatialReference,r.spatialReference),t)}return r.getElevation(e[0],e[1],e[2]||0,r.spatialReference,t)}function Td(r,e,t,i,s,n,a,o,l,c,d){const h=Dd[d.mode];let f,p,m=0;if(fi(r,e,t,i,l.spatialReference,s,o))return h.requiresAlignment(d)?(m=h.applyElevationAlignmentBuffer(i,s,n,a,o,l,c,d),f=n,p=a):(f=i,p=s),fi(f,l.spatialReference,p,n,c.spatialReference,a,o)?m:void 0}function rn(r,e,t,i,s){const n=(Ko(r)?r.z:tn(r)?r.array[r.offset+2]:r[2])||0;switch(t.mode){case"on-the-ground":{const a=k(Xr(e,r,"ground"),0);return s.verticalDistanceToGround=0,s.sampledElevation=a,void(s.z=a)}case"relative-to-ground":{const a=k(Xr(e,r,"ground"),0),o=t.geometryZWithOffset(n,i);return s.verticalDistanceToGround=o,s.sampledElevation=a,void(s.z=o+a)}case"relative-to-scene":{const a=k(Xr(e,r,"scene"),0),o=t.geometryZWithOffset(n,i);return s.verticalDistanceToGround=o,s.sampledElevation=a,void(s.z=o+a)}case"absolute-height":{const a=t.geometryZWithOffset(n,i),o=k(Xr(e,r,"ground"),0);return s.verticalDistanceToGround=a-o,s.sampledElevation=o,void(s.z=a)}default:return uc(t.mode),void(s.z=0)}}function Xf(r,e,t,i){return rn(r,e,t,i,Kt),Kt.z}function Zf(r,e,t){return e==null||t==null?r.definedChanged:e==="on-the-ground"&&t==="on-the-ground"?r.staysOnTheGround:e===t||e!=="on-the-ground"&&t!=="on-the-ground"?Ss.UPDATE:r.onTheGroundChanged}function Jf(r){return r==="relative-to-ground"||r==="relative-to-scene"}function Qf(r){return r!=="absolute-height"}function Yf(r,e,t,i,s){rn(e,t,s,i,Kt),xd(r,Kt.verticalDistanceToGround);const n=Kt.sampledElevation,a=qe(Ed,r.transformation);return Zr[0]=e.x,Zr[1]=e.y,Zr[2]=Kt.z,lc(e.spatialReference,Zr,a,i.spatialReference)?r.transformation=a:console.warn("Could not locate symbol object properly, it might be misplaced"),n}function Od(r,e,t,i,s,n){let a=0;const o=n.spatialReference;e*=3,i*=3;for(let l=0;l<s;++l){const c=r[e+0],d=r[e+1],h=r[e+2],f=k(n.getElevation(c,d,h,o,"ground"),0);a+=f,t[i+0]=c,t[i+1]=d,t[i+2]=f,e+=3,i+=3}return a/s}function Cd(r,e,t,i,s,n,a,o){let l=0;const c=o.calculateOffsetRenderUnits(a),d=o.featureExpressionInfoContext,h=n.spatialReference;e*=3,i*=3;for(let f=0;f<s;++f){const p=r[e+0],m=r[e+1],_=r[e+2],T=k(n.getElevation(p,m,_,h,"ground"),0);l+=T,t[i+0]=p,t[i+1]=m,t[i+2]=d==null?_+T+c:T+c,e+=3,i+=3}return l/s}function bd(r,e,t,i,s,n,a,o){let l=0;const c=o.calculateOffsetRenderUnits(a),d=o.featureExpressionInfoContext,h=n.spatialReference;e*=3,i*=3;for(let f=0;f<s;++f){const p=r[e+0],m=r[e+1],_=r[e+2],T=k(n.getElevation(p,m,_,h,"scene"),0);l+=T,t[i+0]=p,t[i+1]=m,t[i+2]=d==null?_+T+c:T+c,e+=3,i+=3}return l/s}function Ad(r){const e=r.meterUnitOffset,t=r.featureExpressionInfoContext;return e!==0||t!=null}function Rd(r,e,t,i,s,n,a,o){const l=o.calculateOffsetRenderUnits(a),c=o.featureExpressionInfoContext;e*=3,i*=3;for(let d=0;d<s;++d){const h=r[e+0],f=r[e+1],p=r[e+2];t[i+0]=h,t[i+1]=f,t[i+2]=c==null?p+l:l,e+=3,i+=3}return 0}let Pd=class{constructor(){this.verticalDistanceToGround=0,this.sampledElevation=0,this.z=0}};var Ss;(function(r){r[r.NONE=0]="NONE",r[r.UPDATE=1]="UPDATE",r[r.RECREATE=2]="RECREATE"})(Ss||(Ss={}));const Dd={"absolute-height":{applyElevationAlignmentBuffer:Rd,requiresAlignment:Ad},"on-the-ground":{applyElevationAlignmentBuffer:Od,requiresAlignment:()=>!0},"relative-to-ground":{applyElevationAlignmentBuffer:Cd,requiresAlignment:()=>!0},"relative-to-scene":{applyElevationAlignmentBuffer:bd,requiresAlignment:()=>!0}},Ed=X(),Kt=new Pd,Zr=I(),Id=Hr.getLogger("esri.views.3d.layers.graphics.featureExpressionInfoUtils");function $d(r){return{cachedResult:r.cachedResult,arcade:r.arcade?{func:r.arcade.func,context:r.arcade.modules.arcadeUtils.createExecContext(null,{sr:r.arcade.context.spatialReference}),modules:r.arcade.modules}:null}}async function em(r,e,t,i){const s=r&&r.expression;if(typeof s!="string")return null;const n=Fd(s);if(n!=null)return{cachedResult:n};const a=await Ll();El(t);const o=a.arcadeUtils,l=o.createSyntaxTree(s);return o.dependsOnView(l)?(i!=null&&i.error("Expressions containing '$view' are not supported on ElevationInfo"),{cachedResult:0}):{arcade:{func:o.createFunction(l),context:o.createExecContext(null,{sr:e}),modules:a}}}function Md(r,e,t){return r.arcadeUtils.createFeature(e.attributes,e.geometry,t)}function Ld(r,e){if(r!=null&&!sn(r)){if(!e||!r.arcade)return void Id.errorOncePerTick("Arcade support required but not provided");const t=e;t._geometry&&(t._geometry=Ml(t._geometry)),r.arcade.modules.arcadeUtils.updateExecContext(r.arcade.context,e)}}function Nd(r){if(r!=null){if(sn(r))return r.cachedResult;const e=r.arcade;let t=r.arcade.modules.arcadeUtils.executeFunction(e.func,e.context);return typeof t!="number"&&(r.cachedResult=0,t=0),t}return 0}function tm(r,e=!1){let t=r&&r.featureExpressionInfo;const i=t&&t.expression;return e||i==="0"||(t=null),t}const rm={cachedResult:0};function sn(r){return r.cachedResult!=null}function Fd(r){return r==="0"?0:null}let zd=class{constructor(){this._meterUnitOffset=0,this._renderUnitOffset=0,this._unit="meters",this._metersPerElevationInfoUnit=1,this._featureExpressionInfoContext=null,this.centerPointInElevationSR=null,this.mode=null}get featureExpressionInfoContext(){return this._featureExpressionInfoContext}get meterUnitOffset(){return this._meterUnitOffset}get unit(){return this._unit}set unit(e){this._unit=e,this._metersPerElevationInfoUnit=Pl(e)}get requiresSampledElevationInfo(){return this.mode!=="absolute-height"}reset(){this.mode=null,this._meterUnitOffset=0,this._renderUnitOffset=0,this._featureExpressionInfoContext=null,this.unit="meters"}set offsetMeters(e){this._meterUnitOffset=e,this._renderUnitOffset=0}set offsetElevationInfoUnits(e){this._meterUnitOffset=e*this._metersPerElevationInfoUnit,this._renderUnitOffset=0}addOffsetRenderUnits(e){this._renderUnitOffset+=e}geometryZWithOffset(e,t){const i=this.calculateOffsetRenderUnits(t);return this.featureExpressionInfoContext!=null?i:e+i}calculateOffsetRenderUnits(e){let t=this._meterUnitOffset;const i=this.featureExpressionInfoContext;return i!=null&&(t+=Nd(i)*this._metersPerElevationInfoUnit),t/e.unitInMeters+this._renderUnitOffset}setFromElevationInfo(e){this.mode=e.mode,this.unit=Dl(e.unit)?e.unit:"meters",this.offsetElevationInfoUnits=k(e.offset,0)}updateFeatureExpressionInfoContext(e,t,i){if(V(e))return void(this._featureExpressionInfoContext=null);const s=e&&e.arcade;s&&C(t)&&C(i)?(this._featureExpressionInfoContext=$d(e),Ld(this._featureExpressionInfoContext,Md(s.modules,t,i))):this._featureExpressionInfoContext=e}static fromElevationInfo(e){const t=new zd;return C(e)&&t.setFromElevationInfo(e),t}};function jd(r){return r instanceof Float32Array&&r.length>=16}function Ud(r){return Array.isArray(r)&&r.length>=16}function Vd(r){return jd(r)||Ud(r)}var _i;(function(r){r[r.Occluded=0]="Occluded",r[r.NotOccluded=1]="NotOccluded",r[r.Both=2]="Both",r[r.COUNT=3]="COUNT"})(_i||(_i={}));var Ue;function Hd(r,e){r.include(po),r.attributes.add(u.POSITION,"vec3"),r.attributes.add(u.NORMAL,"vec3"),r.attributes.add(u.AUXPOS1,"vec4");const t=r.vertex;jr(t,e),As(t,e),t.uniforms.add([new Ae("viewport",(i,s)=>s.camera.fullViewport),new H("polygonOffset",i=>i.shaderPolygonOffset),new H("cameraGroundRelative",(i,s)=>s.camera.aboveGround?1:-1),new H("renderTransparentlyOccludedHUD",(i,s)=>s.renderTransparentlyOccludedHUD===_i.Occluded?1:s.renderTransparentlyOccludedHUD===_i.NotOccluded?0:.75),new Nt("hudVisibilityTexture",(i,s)=>s.hudVisibilityTexture)]),e.hasVerticalOffset&&zn(t),t.constants.add("smallOffsetAngle","float",.984807753012208),t.code.add(g`struct ProjectHUDAux {
vec3 posModel;
vec3 posView;
vec3 vnormal;
float distanceToCamera;
float absCosAngle;
};`),t.code.add(g`float applyHUDViewDependentPolygonOffset(float pointGroundDistance, float absCosAngle, inout vec3 posView) {
float pointGroundSign = sign(pointGroundDistance);
if (pointGroundSign == 0.0) {
pointGroundSign = cameraGroundRelative;
}
float groundRelative = cameraGroundRelative * pointGroundSign;
if (polygonOffset > .0) {
float cosAlpha = clamp(absCosAngle, 0.01, 1.0);
float tanAlpha = sqrt(1.0 - cosAlpha * cosAlpha) / cosAlpha;
float factor = (1.0 - tanAlpha / viewport[2]);
if (groundRelative > 0.0) {
posView *= factor;
}
else {
posView /= factor;
}
}
return groundRelative;
}`),e.isDraped&&!e.hasVerticalOffset||jn(t),e.isDraped||(t.uniforms.add(new H("perDistancePixelRatio",(i,s)=>Math.tan(s.camera.fovY/2)/(s.camera.fullViewport[2]/2))),t.code.add(g`void applyHUDVerticalGroundOffset(vec3 normalModel, inout vec3 posModel, inout vec3 posView) {
float distanceToCamera = length(posView);
float pixelOffset = distanceToCamera * perDistancePixelRatio * 0.5;
vec3 modelOffset = normalModel * cameraGroundRelative * pixelOffset;
vec3 viewOffset = (viewNormal * vec4(modelOffset, 1.0)).xyz;
posModel += modelOffset;
posView += viewOffset;
}`)),e.screenCenterOffsetUnitsEnabled===Ue.Screen&&t.uniforms.add(new H("pixelRatio",(i,s)=>s.camera.pixelRatio)),e.hasScreenSizePerspective&&fo(t),t.code.add(g`
    vec4 projectPositionHUD(out ProjectHUDAux aux) {
      // centerOffset is in view space and is used to implement world size offsetting
      // of labels with respect to objects. It also pulls the label towards the viewer
      // so that the label is visible in front of the object.
      vec3 centerOffset = auxpos1.xyz;

      // The pointGroundDistance is the distance of the geometry to the ground and is
      // negative if the point is below the ground, or positive if the point is above
      // ground.
      float pointGroundDistance = auxpos1.w;

      aux.posModel = position;
      aux.posView = (view * vec4(aux.posModel, 1.0)).xyz;
      aux.vnormal = normal;
      ${e.isDraped?"":"applyHUDVerticalGroundOffset(aux.vnormal, aux.posModel, aux.posView);"}

      // Screen sized offset in world space, used for example for line callouts
      // Note: keep this implementation in sync with the CPU implementation, see
      //   - MaterialUtil.verticalOffsetAtDistance
      //   - HUDMaterial.applyVerticalOffsetTransformation

      aux.distanceToCamera = length(aux.posView);

      vec3 viewDirObjSpace = normalize(cameraPosition - aux.posModel);
      float cosAngle = dot(aux.vnormal, viewDirObjSpace);

      aux.absCosAngle = abs(cosAngle);

      ${e.hasScreenSizePerspective&&(e.hasVerticalOffset||e.screenCenterOffsetUnitsEnabled===Ue.Screen)?"vec4 perspectiveFactor = screenSizePerspectiveScaleFactor(aux.absCosAngle, aux.distanceToCamera, screenSizePerspectiveAlignment);":""}

      ${e.hasVerticalOffset?e.hasScreenSizePerspective?"float verticalOffsetScreenHeight = applyScreenSizePerspectiveScaleFactorFloat(verticalOffset.x, perspectiveFactor);":"float verticalOffsetScreenHeight = verticalOffset.x;":""}

      ${e.hasVerticalOffset?g`
            float worldOffset = clamp(verticalOffsetScreenHeight * verticalOffset.y * aux.distanceToCamera, verticalOffset.z, verticalOffset.w);
            vec3 modelOffset = aux.vnormal * worldOffset;
            aux.posModel += modelOffset;
            vec3 viewOffset = (viewNormal * vec4(modelOffset, 1.0)).xyz;
            aux.posView += viewOffset;
            // Since we elevate the object, we need to take that into account
            // in the distance to ground
            pointGroundDistance += worldOffset;`:""}

      float groundRelative = applyHUDViewDependentPolygonOffset(pointGroundDistance, aux.absCosAngle, aux.posView);

      ${e.screenCenterOffsetUnitsEnabled!==Ue.Screen?g`
            // Apply x/y in view space, but z in screen space (i.e. along posView direction)
            aux.posView += vec3(centerOffset.x, centerOffset.y, 0.0);

            // Same material all have same z != 0.0 condition so should not lead to
            // branch fragmentation and will save a normalization if it's not needed
            if (centerOffset.z != 0.0) {
              aux.posView -= normalize(aux.posView) * centerOffset.z;
            }
          `:""}

      vec4 posProj = proj * vec4(aux.posView, 1.0);

      ${e.screenCenterOffsetUnitsEnabled===Ue.Screen?e.hasScreenSizePerspective?"float centerOffsetY = applyScreenSizePerspectiveScaleFactorFloat(centerOffset.y, perspectiveFactor);":"float centerOffsetY = centerOffset.y;":""}

      ${e.screenCenterOffsetUnitsEnabled===Ue.Screen?"posProj.xy += vec2(centerOffset.x, centerOffsetY) * pixelRatio * 2.0 / viewport.zw * posProj.w;":""}

      // constant part of polygon offset emulation
      posProj.z -= groundRelative * polygonOffset * posProj.w;
      return posProj;
    }
  `),t.code.add(g`bool testVisibilityHUD(vec4 posProj) {
vec4 posProjCenter = alignToPixelCenter(posProj, viewport.zw);
vec4 occlusionPixel = texture2D(hudVisibilityTexture, .5 + .5 * posProjCenter.xy / posProjCenter.w);
if (renderTransparentlyOccludedHUD > 0.5) {
return occlusionPixel.r * occlusionPixel.g > 0.0 && occlusionPixel.g * renderTransparentlyOccludedHUD < 1.0;
}
return occlusionPixel.r * occlusionPixel.g > 0.0 && occlusionPixel.g == 1.0;
}`)}(function(r){r[r.World=0]="World",r[r.Screen=1]="Screen",r[r.COUNT=2]="COUNT"})(Ue||(Ue={}));function Gd(r){const e=g`vec4 alignToPixelCenter(vec4 clipCoord, vec2 widthHeight) {
vec2 xy = vec2(0.500123) + 0.5 * clipCoord.xy / clipCoord.w;
vec2 pixelSz = vec2(1.0) / widthHeight;
vec2 ij = (floor(xy * widthHeight) + vec2(0.5)) * pixelSz;
vec2 result = (ij * 2.0 - vec2(1.0)) * clipCoord.w;
return vec4(result, clipCoord.zw);
}`,t=g`vec4 alignToPixelOrigin(vec4 clipCoord, vec2 widthHeight) {
vec2 xy = vec2(0.5) + 0.5 * clipCoord.xy / clipCoord.w;
vec2 pixelSz = vec2(1.0) / widthHeight;
vec2 ij = floor((xy + 0.5 * pixelSz) * widthHeight) * pixelSz;
vec2 result = (ij * 2.0 - vec2(1.0)) * clipCoord.w;
return vec4(result, clipCoord.zw);
}`;r.vertex.code.add(e),r.vertex.code.add(t),r.fragment.code.add(e),r.fragment.code.add(t)}function Bd(r){r.include(Fs),r.uniforms.add([new Nt("geometryDepthTexture",(e,t)=>t.multipassGeometry.linearDepthTexture),new _t("nearFar",(e,t)=>t.camera.nearFar)]),r.code.add(g`bool geometryDepthTest(vec2 pos, float elementDepth) {
float geometryDepth = linearDepthFromTexture(geometryDepthTexture, pos, nearFar);
return (elementDepth < (geometryDepth - 1.0));
}`)}let Wd=class{constructor(){this.enabled=!1}};function kd(r,e){const{vertex:t,fragment:i}=r;e.hasMultipassGeometry&&t.include(Bd),e.hasMultipassTerrain&&r.varyings.add("depth","float"),t.code.add(g`
  void main(void) {
    vec4 posProjCenter;
    if (dot(position, position) > 0.0) {
      // Render single point to center of the pixel to avoid subpixel
      // filtering to affect the marker color
      ProjectHUDAux projectAux;
      vec4 posProj = projectPositionHUD(projectAux);
      posProjCenter = alignToPixelCenter(posProj, viewport.zw);

      ${e.hasMultipassGeometry?g`
        // Don't draw vertices behind geometry
        if(geometryDepthTest(.5 + .5 * posProjCenter.xy / posProjCenter.w, projectAux.posView.z)){
          posProjCenter = vec4(1e038, 1e038, 1e038, 1.0);
        }`:""}

      ${e.hasMultipassTerrain?"depth = projectAux.posView.z;":""}
      vec3 vpos = projectAux.posModel;
      if (rejectBySlice(vpos)) {
        // Project out of clip space
        posProjCenter = vec4(1e038, 1e038, 1e038, 1.0);
      }

    } else {
      // Project out of clip space
      posProjCenter = vec4(1e038, 1e038, 1e038, 1.0);
    }

    gl_Position = posProjCenter;
    gl_PointSize = 1.0;
  }
  `),e.hasMultipassTerrain&&i.include(Fs),e.hasMultipassTerrain&&i.uniforms.add([...bo("terrainDepthTexture",(s,n)=>n.multipassTerrain.linearDepthTexture,e.hasWebGL2Context?hi.None:hi.InvSize),new _t("nearFar",(s,n)=>n.camera.nearFar)]),i.include(Ns),i.code.add(g`
  void main() {
    gl_FragColor = vec4(1, 1, 1, 1);
    ${e.hasMultipassTerrain?g`
          vec2 uv = gl_FragCoord.xy;

          // Read the rgba data from the texture linear depth
          vec4 terrainDepthData = ${ec(e,"terrainDepthTexture","uv")};

          float terrainDepth = linearDepthFromFloat(rgba2float(terrainDepthData), nearFar);

          // If HUD vertex is behind terrain and the terrain depth is not the initialize value (e.g. we are not looking at the sky)
          // Mark the HUD vertex as occluded by transparent terrain
          if(depth < terrainDepth && terrainDepthData != vec4(0,0,0,1)){
            gl_FragColor.g = 0.5;
          }`:""}
  }
  `)}function qd(r){const e=new Gr,t=r.signedDistanceFieldEnabled;if(e.include(Gd),e.include(Hd,r),e.include(pt,r),r.occlusionPass)return e.include(kd,r),e;const{vertex:i,fragment:s}=e;e.include(po),s.include(Ns),s.include(Ai),e.include(Un,r),e.include(Rs,r),e.varyings.add("vcolor","vec4"),e.varyings.add("vtc","vec2"),e.varyings.add("vsize","vec2"),r.binaryHighlightOcclusionEnabled&&e.varyings.add("voccluded","float"),i.uniforms.add([new Ae("viewport",(c,d)=>d.camera.fullViewport),new _t("screenOffset",(c,d)=>Lt(an,2*c.screenOffset[0]*d.camera.pixelRatio,2*c.screenOffset[1]*d.camera.pixelRatio)),new _t("anchorPosition",c=>yi(c)),new Ae("materialColor",c=>c.color),new H("pixelRatio",(c,d)=>d.camera.pixelRatio)]),t&&(i.uniforms.add(new Ae("outlineColor",c=>c.outlineColor)),s.uniforms.add([new Ae("outlineColor",c=>xa(c)?c.outlineColor:Ls),new H("outlineSize",c=>xa(c)?c.outlineSize:0)])),r.hasScreenSizePerspective&&(Vn(i),fo(i)),(r.debugDrawLabelBorder||r.binaryHighlightOcclusionEnabled)&&e.varyings.add("debugBorderCoords","vec4"),e.attributes.add(u.UV0,"vec2"),e.attributes.add(u.COLOR,"vec4"),e.attributes.add(u.SIZE,"vec2"),e.attributes.add(u.AUXPOS2,"vec4"),i.code.add(g`
    void main(void) {
      ProjectHUDAux projectAux;
      vec4 posProj = projectPositionHUD(projectAux);
      forwardObjectAndLayerIdColor();

      if (rejectBySlice(projectAux.posModel)) {
        // Project outside of clip plane
        gl_Position = vec4(1e038, 1e038, 1e038, 1.0);
        return;
      }
      vec2 inputSize;
      ${r.hasScreenSizePerspective?g`
      inputSize = screenSizePerspectiveScaleVec2(size, projectAux.absCosAngle, projectAux.distanceToCamera, screenSizePerspective);
      vec2 screenOffsetScaled = screenSizePerspectiveScaleVec2(screenOffset, projectAux.absCosAngle, projectAux.distanceToCamera, screenSizePerspectiveAlignment);
         `:g`
      inputSize = size;
      vec2 screenOffsetScaled = screenOffset;`}

      ${r.vvSize?"inputSize *= vvScale(auxpos2).xx;":""}

      vec2 combinedSize = inputSize * pixelRatio;
      vec4 quadOffset = vec4(0.0);

      ${r.occlusionTestEnabled||r.binaryHighlightOcclusionEnabled?"bool visible = testVisibilityHUD(posProj);":""}

      ${r.binaryHighlightOcclusionEnabled?"voccluded = visible ? 0.0 : 1.0;":""}
    `);const n=g`vec2 uv01 = floor(uv0);
vec2 uv = uv0 - uv01;
quadOffset.xy = ((uv01 - anchorPosition) * 2.0 * combinedSize + screenOffsetScaled) / viewport.zw * posProj.w;`,a=r.pixelSnappingEnabled?t?g`posProj = alignToPixelOrigin(posProj, viewport.zw) + quadOffset;`:g`posProj += quadOffset;
if (inputSize.x == size.x) {
posProj = alignToPixelOrigin(posProj, viewport.zw);
}`:g`posProj += quadOffset;`;r.vvColor&&i.uniforms.add([new no("vvColorColors",c=>c.vvColorColors,Ir),new si("vvColorValues",c=>c.vvColorValues,Ir)]),i.uniforms.add(new _t("textureCoordinateScaleFactor",c=>C(c.texture)&&C(c.texture.descriptor.textureCoordinateScaleFactor)?c.texture.descriptor.textureCoordinateScaleFactor:kl)),i.code.add(g`
    ${r.occlusionTestEnabled?"if (visible) {":""}
    ${n}
    ${r.vvColor?"vcolor = vvGetColor(auxpos2, vvColorValues, vvColorColors) * materialColor;":"vcolor = color / 255.0 * materialColor;"}

    bool alphaDiscard = vcolor.a < ${g.float(Ne)};
    ${t?`alphaDiscard = alphaDiscard && outlineColor.a < ${g.float(Ne)};`:""}
    if (alphaDiscard) {
      // "early discard" if both symbol color (= fill) and outline color (if applicable) are transparent
      gl_Position = vec4(1e38, 1e38, 1e38, 1.0);
      return;
    } else {
      ${a}
      gl_Position = posProj;
    }

    vtc = uv * textureCoordinateScaleFactor;

    ${r.debugDrawLabelBorder?"debugBorderCoords = vec4(uv01, 1.5 / combinedSize);":""}
    vsize = inputSize;
    ${r.occlusionTestEnabled?g`} else { vtc = vec2(0.0);
      ${r.debugDrawLabelBorder?"debugBorderCoords = vec4(0.5, 0.5, 1.5 / combinedSize);}":"}"}`:""}
  }
  `),s.uniforms.add(new Nt("tex",c=>c.texture));const o=r.debugDrawLabelBorder?g`(isBorder > 0.0 ? 0.0 : ${g.float(Ks)})`:g.float(Ks),l=g`
    ${r.debugDrawLabelBorder?g`
      float isBorder = float(any(lessThan(debugBorderCoords.xy, debugBorderCoords.zw)) || any(greaterThan(debugBorderCoords.xy, 1.0 - debugBorderCoords.zw)));`:""}

    ${t?g`
      vec4 fillPixelColor = vcolor;

      // Attempt to sample texel centers to avoid that thin cross outlines
      // disappear with large symbol sizes.
      // see: https://devtopia.esri.com/WebGIS/arcgis-js-api/issues/7058#issuecomment-603041
      const float txSize = ${g.float(Vs)};
      const float texelSize = 1.0 / txSize;
      // Calculate how much we have to add/subtract to/from each texel to reach the size of an onscreen pixel
      vec2 scaleFactor = (vsize - txSize) * texelSize;
      vec2 samplePos = vtc + (vec2(1.0, -1.0) * texelSize) * scaleFactor;

      // Get distance and map it into [-0.5, 0.5]
      float d = rgba2float(texture2D(tex, samplePos)) - 0.5;

      // Distance in output units (i.e. pixels)
      float dist = d * vsize.x;

      // Create smooth transition from the icon into its outline
      float fillAlphaFactor = clamp(0.5 - dist, 0.0, 1.0);
      fillPixelColor.a *= fillAlphaFactor;

      if (outlineSize > 0.25) {
        vec4 outlinePixelColor = outlineColor;
        float clampedOutlineSize = min(outlineSize, 0.5*vsize.x);

        // Create smooth transition around outline
        float outlineAlphaFactor = clamp(0.5 - (abs(dist) - 0.5*clampedOutlineSize), 0.0, 1.0);
        outlinePixelColor.a *= outlineAlphaFactor;

        if (
          outlineAlphaFactor + fillAlphaFactor < ${o} ||
          fillPixelColor.a + outlinePixelColor.a < ${g.float(Ne)}
        ) {
          discard;
        }

        // perform un-premultiplied over operator (see https://en.wikipedia.org/wiki/Alpha_compositing#Description)
        float compositeAlpha = outlinePixelColor.a + fillPixelColor.a * (1.0 - outlinePixelColor.a);
        vec3 compositeColor = vec3(outlinePixelColor) * outlinePixelColor.a +
          vec3(fillPixelColor) * fillPixelColor.a * (1.0 - outlinePixelColor.a);

        gl_FragColor = vec4(compositeColor, compositeAlpha);
      } else {
        if (fillAlphaFactor < ${o}) {
          discard;
        }

        gl_FragColor = premultiplyAlpha(fillPixelColor);
      }

      // visualize SDF:
      // gl_FragColor = vec4(clamp(-dist/vsize.x*2.0, 0.0, 1.0), clamp(dist/vsize.x*2.0, 0.0, 1.0), 0.0, 1.0);
      `:g`
          vec4 texColor = texture2D(tex, vtc, -0.5);
          if (texColor.a < ${o}) {
            discard;
          }
          gl_FragColor = texColor * premultiplyAlpha(vcolor);
          `}

    // Draw debug border with transparency, so that original texels along border are still partially visible
    ${r.debugDrawLabelBorder?g`gl_FragColor = mix(gl_FragColor, vec4(1.0, 0.0, 1.0, 1.0), isBorder * 0.5);`:""}
  `;return r.output===w.Alpha&&s.code.add(g`
      void main() {
        ${l}
        gl_FragColor = vec4(gl_FragColor.a);
      }
      `),r.output===w.ObjectAndLayerIdColor&&s.code.add(g`
      void main() {
        ${l}
        outputObjectAndLayerIdColor();
      }
      `),r.output===w.Color&&s.code.add(g`
    void main() {
      ${l}
      ${r.transparencyPassType===K.FrontFace?"gl_FragColor.rgb /= gl_FragColor.a;":""}
    }
    `),r.output===w.Highlight&&(e.include(Di,r),s.code.add(g`
    void main() {
      ${l}
      ${r.binaryHighlightOcclusionEnabled?g`
          if (voccluded == 1.0) {
            gl_FragColor = vec4(1.0, 1.0, 0.0, 1.0);
          } else {
            gl_FragColor = vec4(1.0, 0.0, 1.0, 1.0);
          }`:"outputHighlight();"}
    }
    `)),e}function xa(r){return r.outlineColor[3]>0&&r.outlineSize>0}function yi(r,e=an){return r.textureIsSignedDistanceField?Xd(r.anchorPosition,r.distanceFieldBoundingBox,e):Sr(e,r.anchorPosition),e}function Xd(r,e,t){C(e)?Lt(t,r[0]*(e[2]-e[0])+e[0],r[1]*(e[3]-e[1])+e[1]):Lt(t,0,0)}const an=Y(),Zd=Object.freeze(Object.defineProperty({__proto__:null,build:qd,calculateAnchorPosForRendering:yi},Symbol.toStringTag,{value:"Module"}));let Bs=class extends vr{initializeConfiguration(e,t){t.hasWebGL2Context=e.rctx.type===Ii.WEBGL2,t.spherical=e.viewingMode===St.Global}initializeProgram(e){return new _r(e.rctx,Bs.shader.get().build(this.configuration),Vr)}_setPipelineState(e){const t=this.configuration,i=e===K.NONE,s=e===K.FrontFace,n=this.configuration.hasPolygonOffset&&Jd,a=(i||s)&&t.output!==w.Highlight?(t.depthEnabled||t.occlusionPass)&&lr:null;return Xe({blending:t.output===w.Color||t.output===w.Alpha||t.output===w.Highlight?i?Qd:bi(e):null,depthTest:{func:ic.LEQUAL},depthWrite:a,colorWrite:it,polygonOffset:n})}initializePipeline(){return this._setPipelineState(this.configuration.transparencyPassType)}get primitiveType(){return this.configuration.occlusionPass?fr.POINTS:fr.TRIANGLES}};Bs.shader=new yr(Zd,()=>xr(()=>import("./HUDMaterial.glsl-60a85e7d.js"),["assets/HUDMaterial.glsl-60a85e7d.js","assets/vec2-ab9f47bf.js","assets/common-c186b691.js","assets/vec2f64-30dc1443.js","assets/vec4f64-939de194.js","assets/string-480f3e3f.js","assets/typedArrayUtil-d9bc5fbd.js","assets/floatRGBA-090399ba.js","assets/mathUtils-57aba1ea.js","assets/vec3-1863987c.js","assets/vec3f64-6cd30318.js","assets/vec4-46a9b36d.js","assets/SSAOHelper-868f5969.js","assets/OrderIndependentTransparency-68bd812c.js","assets/enums-64ab819c.js","assets/cast-a534ae90.js","assets/Error-57322e92.js","assets/ensureType-25b8cc06.js","assets/nextTick-3ee5a785.js","assets/promiseUtils-32d9c228.js","assets/Util-289ce3b5.js","assets/triangle-8cd02c5d.js","assets/sphere-622880b9.js","assets/mat4-7dde83b1.js","assets/byteSizeEstimations-90c5a50d.js","assets/quatf64-c94bd656.js","assets/mat4f64-fbeb2cd1.js","assets/lineSegment-c6f0b9d1.js","assets/Indices-d9b791ce.js","assets/VertexAttribute-9c5c630d.js","assets/ScreenSpacePass-6db805f2.js","assets/compilerUtils-fefa73ae.js","assets/Evented-cbf5f368.js","assets/request-f17a8ddb.js","assets/preload-helper-101896b7.js","assets/requestImageUtils-f656eddc.js","assets/SSAO.glsl-3068f7bf.js","assets/assets-a5ce5e1a.js","assets/Texture-411ca148.js","assets/context-util-d4c193b5.js","assets/VertexArrayObject-3630ef4f.js","assets/mat4f32-77b3d8ac.js","assets/BufferView-478024d2.js","assets/aaBoundingBox-4a83dbbc.js","assets/Extent-a1a1de42.js","assets/aaBoundingRect-b340cf8c.js","assets/ViewingMode-915d19cb.js","assets/mat3-9a8d9db7.js","assets/quat-ec16a584.js","assets/vec3f32-4322908d.js","assets/SSAOBlur.glsl-ea338452.js","assets/VertexElementDescriptor-2925c6af.js","assets/plane-46a8c767.js","assets/ElevationInfo-88554f24.js","assets/jsonMap-190c5593.js","assets/fieldUtils-77ec75e2.js","assets/arcadeOnDemand-5175e7d9.js","assets/geometry-eec1b371.js","assets/Polyline-b571c705.js","assets/typeUtils-cd52dc20.js","assets/lengthUtils-92fed992.js","assets/unitUtils-dd6fb8ee.js","assets/index-7dfdb274.js","assets/Basemap-f70b1b37.js","assets/Collection-7c37b74e.js","assets/SimpleObservable-8e532943.js","assets/collectionUtils-0365f48b.js","assets/deprecate-0d93948c.js","assets/Loadable-46524a7e.js","assets/Promise-368b703a.js","assets/loadAll-01cdf0a9.js","assets/asyncUtils-087555fc.js","assets/Portal-51616380.js","assets/locale-30120714.js","assets/PortalGroup-d495847c.js","assets/PortalUser-e16fc7d1.js","assets/PortalItem-6eebfb2b.js","assets/messages-28bf3b89.js","assets/writeUtils-3bde6e49.js","assets/layerUtils-68eea656.js","assets/Color-af6e0c66.js","assets/colorUtils-639f4d25.js","assets/enumeration-61a13175.js","assets/opacityUtils-1333f803.js","assets/CollectionFlattener-f43a0fce.js","assets/TablesMixin-a4aaaf91.js","assets/Layer-ead8c88c.js","assets/Identifiable-093f90a8.js","assets/Graphic-1859ae71.js","assets/PopupTemplate-52faab17.js","assets/Clonable-9b34e760.js","assets/number-2ab8ca0d.js","assets/symbols-75e7a993.js","assets/CIMSymbol-8f02a6e3.js","assets/Symbol-8266348e.js","assets/screenUtils-90993e16.js","assets/symbolLayerUtils3D-c8c40895.js","assets/persistableUrlUtils-56d43b12.js","assets/jsonUtils-c6684c52.js","assets/Cyclical-078b4564.js","assets/reactiveUtils-5869e41a.js","assets/workers-5d67fe7a.js","assets/Connection-b756149d.js","assets/Queue-275a6362.js","assets/intl-70c09a3c.js","assets/projection-0af97a56.js","assets/zscale-48bab05e.js","assets/TileInfo-c5c8c8d2.js","assets/widget-09d2e7af.js","assets/uuid-73213768.js","assets/dom-5b7af1bf.js","assets/HandleOwner-2edbba46.js","assets/executeQueryJSON-0696009a.js","assets/normalizeUtils-6483f6b5.js","assets/query-71223310.js","assets/pbfQueryUtils-c922ef32.js","assets/pbf-8b0546e8.js","assets/OptimizedFeature-73582c6e.js","assets/OptimizedFeatureSet-1d1ac4b9.js","assets/queryZScale-3c8de33a.js","assets/FeatureSet-9cc47aef.js","assets/Field-1d4f9ca4.js","assets/fieldType-b34e5d2d.js","assets/Query-13124a97.js","assets/TimeExtent-2004eecf.js","assets/RelationshipQuery-c27267ab.js","assets/LegendOptions-2e7b3d70.js","assets/utils-4aa03157.js","assets/BlendLayer-813950f9.js","assets/parser-01f6451e.js","assets/ItemCache-bf1028d4.js","assets/MemCache-1d2f56ee.js","assets/utils-0c7f5071.js","assets/jsonUtils-559e9000.js","assets/UniqueValueRenderer-30750d31.js","assets/diffUtils-8a8cb5bc.js","assets/colorRamps-8d7efc14.js","assets/sizeVariableUtils-d4870b0d.js","assets/jsonUtils-eb568237.js","assets/styleUtils-015eeecd.js","assets/DictionaryLoader-326d0e17.js","assets/LRUCache-b9228ca3.js","assets/heatmapUtils-3d7c22c5.js","assets/featureConversionUtils-d2229ed4.js","assets/TopFeaturesQuery-9aca00bf.js","assets/FeatureLayer-9a7e04cf.js","assets/MultiOriginJSONSupport-b8792dfa.js","assets/LayerFloorInfo-e7c896e5.js","assets/FeatureLayerBase-d5682b4b.js","assets/HeightModelInfo-34f16d74.js","assets/arcgisLayerUrl-6e9db12f.js","assets/OperationalLayer-1dad72ac.js","assets/editsZScale-12d81957.js","assets/APIKeyMixin-b6e4f897.js","assets/ArcGISService-e571bcff.js","assets/CustomParametersMixin-a5d06ccc.js","assets/EditBusLayer-b5dc3689.js","assets/FeatureReductionLayer-1e5c4045.js","assets/labelingInfo-be3a629c.js","assets/labelUtils-4f4b54c6.js","assets/defaultsJSON-59981e75.js","assets/OrderedLayer-9623e905.js","assets/PortalLayer-9dd15f09.js","assets/RefreshableLayer-49182ab8.js","assets/ScaleRangeLayer-c072e266.js","assets/TemporalLayer-f784dd83.js","assets/TimeInfo-f76d6c20.js","assets/FeatureTemplate-c4496b93.js","assets/FeatureType-0be9420b.js","assets/fieldProperties-9e220f14.js","assets/FieldsIndex-16707836.js","assets/versionUtils-f229b9a6.js","assets/styleUtils-08eaa4d2.js","assets/popupUtils-88fed094.js","assets/colorUtils-82440b70.js","assets/mat2d-d0b91e3e.js","assets/Scheduler-5e6ccc87.js","assets/GraphicsLayer-a7c6f685.js","assets/unitBezier-881ac1eb.js","assets/mat3f32-d3d088e8.js","assets/vec2f32-461e65a9.js","assets/TileStrategy-a5366189.js","assets/TileStore-8f580dbf.js","assets/TileKey-9cae9369.js","assets/rbush-8e36784a.js","assets/quickselect-322ec8e1.js","assets/capabilities-d08b6e58.js","assets/Subtype-a3103d84.js","assets/datetime-4f774298.js","assets/elevationInfoUtils-44cce436.js","assets/QueryEngineResult-eb704fb1.js","assets/utils-52ad3c09.js","assets/generateRendererUtils-2f0b667c.js","assets/WhereClause-6c9440a1.js","assets/utils-63166b41.js","assets/json-48e3ea08.js","assets/EffectView-dffeb0bc.js","assets/ExportImageParameters-3714ed4b.js","assets/sublayerUtils-eea48c01.js","assets/webStyleSymbolUtils-6bef877f.js","assets/devEnvironmentUtils-5002a058.js","assets/dehydratedFeatures-3dcd65f1.js","assets/enums-4b2a86a0.js","assets/index-a8abe695.css","assets/InterleavedLayout-b5930508.js","assets/types-e1c0a5bf.js","assets/triangulationUtils-6b510de4.js","assets/earcut-58237617.js","assets/deduplicate-d92c3cc2.js","assets/NestedMap-1b5db22e.js","assets/Octree-8ed6dc77.js","assets/boundedPlane-296928f6.js","assets/glUtil-7aa58841.js"]));const Jd={factor:0,units:-4},Qd=Rn(Ze.ONE,Ze.ONE_MINUS_SRC_ALPHA);let J=class extends gr{constructor(){super(...arguments),this.output=w.Color,this.screenCenterOffsetUnitsEnabled=Ue.World,this.transparencyPassType=K.NONE,this.spherical=!1,this.occlusionTestEnabled=!0,this.signedDistanceFieldEnabled=!1,this.vvSize=!1,this.vvColor=!1,this.hasVerticalOffset=!1,this.hasScreenSizePerspective=!1,this.debugDrawLabelBorder=!1,this.binaryHighlightOcclusionEnabled=!0,this.hasSlicePlane=!1,this.hasPolygonOffset=!1,this.depthEnabled=!0,this.pixelSnappingEnabled=!0,this.isDraped=!1,this.hasMultipassGeometry=!1,this.hasMultipassTerrain=!1,this.cullAboveGround=!1,this.occlusionPass=!1,this.objectAndLayerIdColorInstanced=!1}};v([S({count:w.COUNT})],J.prototype,"output",void 0),v([S({count:Ue.COUNT})],J.prototype,"screenCenterOffsetUnitsEnabled",void 0),v([S({count:K.COUNT})],J.prototype,"transparencyPassType",void 0),v([S()],J.prototype,"spherical",void 0),v([S()],J.prototype,"occlusionTestEnabled",void 0),v([S()],J.prototype,"signedDistanceFieldEnabled",void 0),v([S()],J.prototype,"vvSize",void 0),v([S()],J.prototype,"vvColor",void 0),v([S()],J.prototype,"hasVerticalOffset",void 0),v([S()],J.prototype,"hasScreenSizePerspective",void 0),v([S()],J.prototype,"debugDrawLabelBorder",void 0),v([S()],J.prototype,"binaryHighlightOcclusionEnabled",void 0),v([S()],J.prototype,"hasSlicePlane",void 0),v([S()],J.prototype,"hasPolygonOffset",void 0),v([S()],J.prototype,"depthEnabled",void 0),v([S()],J.prototype,"pixelSnappingEnabled",void 0),v([S()],J.prototype,"isDraped",void 0),v([S()],J.prototype,"hasMultipassGeometry",void 0),v([S()],J.prototype,"hasMultipassTerrain",void 0),v([S()],J.prototype,"cullAboveGround",void 0),v([S()],J.prototype,"occlusionPass",void 0),v([S()],J.prototype,"objectAndLayerIdColorInstanced",void 0),v([S({constValue:!0})],J.prototype,"hasSliceInVertexProgram",void 0),v([S({constValue:!1})],J.prototype,"hasVvInstancing",void 0);let nm=class extends Ur{constructor(e){super(e,new nh),this._configuration=new J}getConfiguration(e,t){return this._configuration.output=e,this._configuration.hasSlicePlane=this.parameters.hasSlicePlane,this._configuration.hasVerticalOffset=!!this.parameters.verticalOffset,this._configuration.hasScreenSizePerspective=!!this.parameters.screenSizePerspective,this._configuration.screenCenterOffsetUnitsEnabled=this.parameters.centerOffsetUnits==="screen"?Ue.Screen:Ue.World,this._configuration.hasPolygonOffset=this.parameters.polygonOffset,this._configuration.isDraped=this.parameters.isDraped,this._configuration.occlusionTestEnabled=this.parameters.occlusionTest,this._configuration.pixelSnappingEnabled=this.parameters.pixelSnappingEnabled,this._configuration.signedDistanceFieldEnabled=this.parameters.textureIsSignedDistanceField,this._configuration.vvSize=!!this.parameters.vvSizeEnabled,this._configuration.vvColor=!!this.parameters.vvColorEnabled,this._configuration.occlusionPass=t.slot===j.OCCLUSION_PIXELS&&this.parameters.occlusionTest&&(e===w.Color||e===w.Alpha),e===w.Color&&(this._configuration.debugDrawLabelBorder=!!this.parameters.debugDrawLabelBorder),e===w.Highlight&&(this._configuration.binaryHighlightOcclusionEnabled=this.parameters.binaryHighlightOcclusion),this._configuration.depthEnabled=this.parameters.depthEnabled,this._configuration.transparencyPassType=t.transparencyPassType,this._configuration.hasMultipassGeometry=t.multipassGeometry.enabled,this._configuration.hasMultipassTerrain=t.multipassTerrain.enabled,this._configuration.cullAboveGround=t.multipassTerrain.cullAboveGround,this._configuration}intersect(e,t,i,s,n,a,o,l,c){C(c)?this._intersectDrapedHudGeometry(e,a,o,l,c):this._intersectHudGeometry(e,t,i,s,o,l)}_intersectDrapedHudGeometry(e,t,i,s,n){const a=e.vertexAttributes.get(u.POSITION),o=e.vertexAttributes.get(u.SIZE),l=this.parameters,c=yi(l);let d=1,h=1;if(C(s)){const p=s(Oa);d=p[0],h=p[5]}d*=e.screenToWorldRatio,h*=e.screenToWorldRatio;const f=ah*e.screenToWorldRatio;for(let p=0;p<a.data.length/a.size;p++){const m=p*a.size,_=a.data[m],T=a.data[m+1],y=p*o.size;let x;lt[0]=o.data[y]*d,lt[1]=o.data[y+1]*h,l.textureIsSignedDistanceField&&(x=l.outlineSize*e.screenToWorldRatio/2),wa(t,_,T,lt,f,x,l,c)&&i(n.dist,n.normal,-1,!1)}}_intersectHudGeometry(e,t,i,s,n,a){if(!s.options.selectionMode||!s.options.hud||Ri(t))return;const o=this.parameters;let l=1,c=1;if(sa(Zi,i),C(a)){const x=a(Oa);l=x[0],c=x[5],eh(Zi)}const d=e.vertexAttributes.get(u.POSITION),h=e.vertexAttributes.get(u.SIZE),f=e.vertexAttributes.get(u.NORMAL),p=e.vertexAttributes.get(u.AUXPOS1);de(d.size>=3);const m=s.point,_=s.camera,T=yi(o);l*=_.pixelRatio,c*=_.pixelRatio;const y=this.parameters.centerOffsetUnits==="screen";for(let x=0;x<d.data.length/d.size;x++){const O=x*d.size;U(pe,d.data[O],d.data[O+1],d.data[O+2]),q(pe,pe,i);const R=x*h.size;lt[0]=h.data[R]*l,lt[1]=h.data[R+1]*c,q(pe,pe,_.viewMatrix);const b=x*p.size;if(U(Re,p.data[b+0],p.data[b+1],p.data[b+2]),!y&&(pe[0]+=Re[0],pe[1]+=Re[1],Re[2]!==0)){const E=Re[2];oe(Re,pe),ie(pe,pe,W(Re,Re,E))}const A=x*f.size;if(U(Cr,f.data[A],f.data[A+1],f.data[A+2]),this._normalAndViewAngle(Cr,Zi,_,Ji),this._applyVerticalOffsetTransformationView(pe,Ji,_,Xi),_.applyProjection(pe,ve),ve[0]>-1){ve[0]=Math.floor(ve[0]),ve[1]=Math.floor(ve[1]),y&&(Re[0]||Re[1])&&(ve[0]+=Re[0],Re[1]!==0&&(ve[1]+=Hn(Re[1],Xi.factorAlignment)),_.unapplyProjection(ve,pe)),ve[0]+=this.parameters.screenOffset[0],ve[1]+=this.parameters.screenOffset[1],Gn(lt,Xi.factor,lt);const E=sh*_.pixelRatio;let L;if(o.textureIsSignedDistanceField&&(L=o.outlineSize*_.pixelRatio/2),wa(m,ve[0],ve[1],lt,E,L,o,T)){const he=s.ray;if(q(Ta,pe,rr(ih,_.viewMatrix)),ve[0]=m[0],ve[1]=m[1],_.unprojectFromRenderScreen(ve,pe)){const D=I();z(D,he.direction);const G=1/rt(D);W(D,D,G),n(yt(he.origin,pe)*G,D,-1,!0,1,Ta)}}}}}computeAttachmentOrigin(e,t){const i=e.vertexAttributes;if(!i)return!1;const s=i.get(u.POSITION),n=e.indices.get(u.POSITION);return Bn(s,n,t)}createBufferWriter(){return new ch(this)}_normalAndViewAngle(e,t,i,s){return Vd(t)&&(t=sa(rh,t)),pn(s.normal,e,t),q(s.normal,s.normal,i.viewInverseTransposeMatrix),s.cosAngle=st(on,oh),s}_updateScaleInfo(e,t,i){const s=this.parameters;C(s.screenSizePerspective)?ea(i,t,s.screenSizePerspective,e.factor):(e.factor.scale=1,e.factor.factor=0,e.factor.minPixelSize=0,e.factor.paddingPixels=0),C(s.screenSizePerspectiveAlignment)?ea(i,t,s.screenSizePerspectiveAlignment,e.factorAlignment):(e.factorAlignment.factor=e.factor.factor,e.factorAlignment.scale=e.factor.scale,e.factorAlignment.minPixelSize=e.factor.minPixelSize,e.factorAlignment.paddingPixels=e.factor.paddingPixels)}applyShaderOffsetsView(e,t,i,s,n,a,o){const l=this._normalAndViewAngle(t,i,n,Ji);return this._applyVerticalGroundOffsetView(e,l,n,o),this._applyVerticalOffsetTransformationView(o,l,n,a),this._applyPolygonOffsetView(o,l,s[3],n,o),this._applyCenterOffsetView(o,s,o),o}applyShaderOffsetsNDC(e,t,i,s,n){return this._applyCenterOffsetNDC(e,t,i,s),C(n)&&z(n,s),this._applyPolygonOffsetNDC(s,t,i,s),s}_applyPolygonOffsetView(e,t,i,s,n){const a=s.aboveGround?1:-1;let o=Math.sign(i);o===0&&(o=a);const l=a*o;if(this.parameters.shaderPolygonOffset<=0)return z(n,e);const c=tr(Math.abs(t.cosAngle),.01,1),d=1-Math.sqrt(1-c*c)/c/s.viewport[2];return W(n,e,l>0?d:1/d),n}_applyVerticalGroundOffsetView(e,t,i,s){const n=rt(e),a=i.aboveGround?1:-1,o=.5*i.computeRenderPixelSizeAtDist(n),l=W(pe,t.normal,a*o);return ee(s,e,l),s}_applyVerticalOffsetTransformationView(e,t,i,s){const n=this.parameters;if(!n.verticalOffset||!n.verticalOffset.screenLength){if(n.screenSizePerspective||n.screenSizePerspectiveAlignment){const c=rt(e);this._updateScaleInfo(s,c,t.cosAngle)}else s.factor.scale=1,s.factorAlignment.scale=1;return e}const a=rt(e),o=k(n.screenSizePerspectiveAlignment,n.screenSizePerspective),l=Wn(i,a,n.verticalOffset,t.cosAngle,o);return this._updateScaleInfo(s,a,t.cosAngle),W(t.normal,t.normal,l),ee(e,e,t.normal)}_applyCenterOffsetView(e,t,i){const s=this.parameters.centerOffsetUnits!=="screen";return i!==e&&z(i,e),s&&(i[0]+=t[0],i[1]+=t[1],t[2]&&(oe(Cr,i),ee(i,i,W(Cr,Cr,t[2])))),i}_applyCenterOffsetNDC(e,t,i,s){const n=this.parameters.centerOffsetUnits!=="screen";return s!==e&&z(s,e),n||(s[0]+=t[0]/i.fullWidth*2,s[1]+=t[1]/i.fullHeight*2),s}_applyPolygonOffsetNDC(e,t,i,s){const n=this.parameters.shaderPolygonOffset;if(e!==s&&z(s,e),n){const a=i.aboveGround?1:-1,o=a*Math.sign(t[3]);s[2]-=(o||a)*n}return s}requiresSlot(e,t){if(t===w.Color||t===w.Alpha||t===w.Highlight||t===w.ObjectAndLayerIdColor){if(e===j.DRAPED_MATERIAL)return!0;const{drawInSecondSlot:i,occlusionTest:s}=this.parameters;return e===(i?j.LABEL_MATERIAL:j.HUD_MATERIAL)||s&&e===j.OCCLUSION_PIXELS}return!1}createGLMaterial(e){return new Yd(e)}calculateRelativeScreenBounds(e,t,i=ir()){return Kd(this.parameters,e,t,i),i[2]=i[0]+e[0],i[3]=i[1]+e[1],i}},Yd=class extends kn{constructor(e){super({...e,...e.material.parameters})}selectProgram(e){return this.ensureTechnique(Bs,e)}beginSlot(e){return this.updateTexture(this._material.parameters.textureId),this._material.setParameters(this.textureBindParameters),this.selectProgram(e)}};function Kd(r,e,t,i=th){return Sr(i,r.anchorPosition),i[0]*=-e[0],i[1]*=-e[1],i[0]+=r.screenOffset[0]*t,i[1]+=r.screenOffset[1]*t,i}function eh(r){const e=r[0],t=r[1],i=r[2],s=r[3],n=r[4],a=r[5],o=r[6],l=r[7],c=r[8],d=1/Math.sqrt(e*e+t*t+i*i),h=1/Math.sqrt(s*s+n*n+a*a),f=1/Math.sqrt(o*o+l*l+c*c);return r[0]=e*d,r[1]=t*d,r[2]=i*d,r[3]=s*h,r[4]=n*h,r[5]=a*h,r[6]=o*f,r[7]=l*f,r[8]=c*f,r}function wa(r,e,t,i,s,n,a,o){let l=e-s-(o[0]>0?i[0]*o[0]:0),c=l+i[0]+2*s,d=t-s-(o[1]>0?i[1]*o[1]:0),h=d+i[1]+2*s;const f=a.distanceFieldBoundingBox;return a.textureIsSignedDistanceField&&C(f)&&(l+=i[0]*f[0],d+=i[1]*f[1],c-=i[0]*(1-f[2]),h-=i[1]*(1-f[3]),l-=n,c+=n,d-=n,h+=n),r[0]>l&&r[0]<c&&r[1]>d&&r[1]<h}const Xi={factor:{scale:0,factor:0,minPixelSize:0,paddingPixels:0},factorAlignment:{scale:0,factor:0,minPixelSize:0,paddingPixels:0}},th=Y(),pe=I(),Cr=I(),ve=Qe(),on=I(),Ta=I(),Zi=$s(),rh=$s(),ih=X(),Re=I(),Ji={normal:on,cosAngle:0},Oa=X(),sh=1,ah=2,lt=[0,0],oh=nr(0,0,1);class nh extends qn{constructor(){super(...arguments),this.renderOccluded=gt.Occlude,this.color=hr(1,1,1,1),this.texCoordScale=[1,1],this.polygonOffset=!1,this.anchorPosition=Ms(.5,.5),this.screenOffset=[0,0],this.shaderPolygonOffset=1e-5,this.textureIsSignedDistanceField=!1,this.outlineColor=hr(1,1,1,1),this.outlineSize=0,this.vvSizeEnabled=!1,this.vvSizeMinSize=[1,1,1],this.vvSizeMaxSize=[100,100,100],this.vvSizeOffset=[0,0,0],this.vvSizeFactor=[1,1,1],this.vvColorEnabled=!1,this.vvColorValues=[0,0,0,0,0,0,0,0],this.vvColorColors=[1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0],this.hasSlicePlane=!1,this.pixelSnappingEnabled=!0,this.occlusionTest=!0,this.binaryHighlightOcclusion=!0,this.debugDrawLabelBorder=!1,this.centerOffsetUnits="world",this.drawInSecondSlot=!1,this.depthEnabled=!0,this.isDraped=!1}}const nn=wt().vec3f(u.POSITION).vec3f(u.NORMAL).vec2f(u.UV0).vec4u8(u.COLOR).vec2f(u.SIZE).vec4f(u.AUXPOS1).vec4f(u.AUXPOS2),lh=nn.clone().vec4u8(u.OBJECTANDLAYERIDCOLOR);class ch{constructor(e){this._material=e,this.vertexBufferLayout=vt("enable-feature:objectAndLayerId-rendering")?lh:nn}allocate(e){return this.vertexBufferLayout.createBuffer(e)}elementCount(e){return 6*e.indices.get(u.POSITION).length}write(e,t,i,s,n){Xn(i.indices.get(u.POSITION),i.vertexAttributes.get(u.POSITION).data,e,s.position,n,6),Zn(i.indices.get(u.NORMAL),i.vertexAttributes.get(u.NORMAL).data,t,s.normal,n,6);{const a=i.vertexAttributes.get(u.UV0).data;let o,l,c,d;if(a==null||a.length<4){const m=this._material.parameters;o=0,l=0,c=m.texCoordScale[0],d=m.texCoordScale[1]}else o=a[0],l=a[1],c=a[2],d=a[3];c=Math.min(1.99999,c+1),d=Math.min(1.99999,d+1);const h=i.indices.get(u.POSITION).length,f=s.uv0;let p=n;for(let m=0;m<h;++m)f.set(p,0,o),f.set(p,1,l),p+=1,f.set(p,0,c),f.set(p,1,l),p+=1,f.set(p,0,c),f.set(p,1,d),p+=1,f.set(p,0,c),f.set(p,1,d),p+=1,f.set(p,0,o),f.set(p,1,d),p+=1,f.set(p,0,o),f.set(p,1,l),p+=1}Jn(i.indices.get(u.COLOR),i.vertexAttributes.get(u.COLOR).data,4,s.color,n,6);{const a=i.indices.get(u.SIZE),o=i.vertexAttributes.get(u.SIZE).data,l=a.length,c=s.size;let d=n;for(let h=0;h<l;++h){const f=o[2*a[h]],p=o[2*a[h]+1];for(let m=0;m<6;++m)c.set(d,0,f),c.set(d,1,p),d+=1}}if(i.indices.get(u.AUXPOS1)&&i.vertexAttributes.get(u.AUXPOS1)&&ta(i.indices.get(u.AUXPOS1),i.vertexAttributes.get(u.AUXPOS1).data,s.auxpos1,n,6),i.indices.get(u.AUXPOS2)&&i.vertexAttributes.get(u.AUXPOS2)&&ta(i.indices.get(u.AUXPOS2),i.vertexAttributes.get(u.AUXPOS2).data,s.auxpos2,n,6),C(i.objectAndLayerIdColor)&&i.objectAndLayerIdColor.length===4&&i.indices.get(u.POSITION)){const a=i.indices.get(u.POSITION).length,o=s.getField(u.OBJECTANDLAYERIDCOLOR,Zl);Qn(i.objectAndLayerIdColor,o,a,n,6)}}}const dh=wt().vec3f(u.POSITION),hh=wt().vec3f(u.POSITION).vec2f(u.UV0),ln=wt().vec3f(u.POSITION).vec4u8(u.COLOR);wt().vec3f(u.POSITION).vec4u8(u.OBJECTANDLAYERIDCOLOR);wt().vec3f(u.POSITION).vec2f(u.UV0).vec4u8(u.OBJECTANDLAYERIDCOLOR);const uh=wt().vec3f(u.POSITION).vec4u8(u.COLOR).vec4u8(u.OBJECTANDLAYERIDCOLOR);let Ws=class{constructor(e){this.vertexBufferLayout=e}allocate(e){return this.vertexBufferLayout.createBuffer(e)}elementCount(e){return e.indices.get(u.POSITION).length}write(e,t,i,s,n){mo(i,this.vertexBufferLayout,e,t,s,n)}};function ph(r){const e=new Gr,{vertex:t,fragment:i}=e,s=r.output===w.Depth,n=r.hasMultipassTerrain&&(r.output===w.Color||r.output===w.Alpha);return jr(t,r),e.include(Es,r),e.include(go,r),e.include(Rs,r),e.attributes.add(u.POSITION,"vec3"),e.varyings.add("vpos","vec3"),n&&e.varyings.add("depth","float"),s&&(e.include(lo,r),Yn(e),co(e)),t.code.add(g`
    void main(void) {
      vpos = position;
      forwardNormalizedVertexColor();
      forwardObjectAndLayerIdColor();
      ${n?"depth = (view * vec4(vpos, 1.0)).z;":""}
      gl_Position = ${s?g`transformPositionWithDepth(proj, view, vpos, nearFar, linearDepth);`:g`transformPosition(proj, view, vpos);`}
    }
  `),e.include(pt,r),n&&e.include(Ps,r),i.include(Ai),i.uniforms.add(new Ae("eColor",a=>a.color)),r.output===w.Highlight&&e.include(Di,r),i.code.add(g`
  void main() {
    discardBySlice(vpos);
    ${n?"terrainDepthTest(gl_FragCoord, depth);":""}
    vec4 fColor = ${r.hasVertexColors?"vColor * eColor;":"eColor;"}

    if (fColor.a < ${g.float(Ne)}) {
      discard;
    }

    ${r.output===w.Alpha?g`gl_FragColor = vec4(fColor.a);`:""}

    ${r.output===w.Color?g`gl_FragColor = highlightSlice(fColor, vpos); ${r.transparencyPassType===K.Color?"gl_FragColor = premultiplyAlpha(gl_FragColor);":""}`:""}
    ${r.output===w.Highlight?g`outputHighlight();`:""};
    ${r.output===w.Depth?g`outputDepth(linearDepth);`:""};
    ${r.output===w.ObjectAndLayerIdColor?g`outputObjectAndLayerIdColor();`:""}
  }
  `),e}const fh=Object.freeze(Object.defineProperty({__proto__:null,build:ph},Symbol.toStringTag,{value:"Module"}));let ks=class extends vr{initializeConfiguration(e,t){t.hasWebGL2Context=e.rctx.type===Ii.WEBGL2}initializeProgram(e){return new _r(e.rctx,ks.shader.get().build(this.configuration),Vr)}_createPipeline(e,t){const i=this.configuration,s=e===K.NONE,n=e===K.FrontFace;return Xe({blending:i.output!==w.Color&&i.output!==w.Alpha||!i.transparent?null:s?Er:bi(e),culling:Pn(i.cullFace),depthTest:{func:Cs(e)},depthWrite:s||n?i.writeDepth&&lr:null,colorWrite:it,stencilWrite:i.hasOccludees?ci:null,stencilTest:i.hasOccludees?t?di:Ds:null,polygonOffset:s||n?i.polygonOffset&&mh:ro(i.enableOffset)})}initializePipeline(){return this._occludeePipelineState=this._createPipeline(this.configuration.transparencyPassType,!0),this._createPipeline(this.configuration.transparencyPassType,!1)}getPipelineState(e,t){return t?this._occludeePipelineState:super.getPipelineState(e,t)}};ks.shader=new yr(fh,()=>xr(()=>import("./ColorMaterial.glsl-642fe0ef.js"),["assets/ColorMaterial.glsl-642fe0ef.js","assets/SSAOHelper-868f5969.js","assets/typedArrayUtil-d9bc5fbd.js","assets/OrderIndependentTransparency-68bd812c.js","assets/enums-64ab819c.js","assets/cast-a534ae90.js","assets/string-480f3e3f.js","assets/Error-57322e92.js","assets/ensureType-25b8cc06.js","assets/nextTick-3ee5a785.js","assets/promiseUtils-32d9c228.js","assets/vec3-1863987c.js","assets/vec3f64-6cd30318.js","assets/common-c186b691.js","assets/Util-289ce3b5.js","assets/vec2f64-30dc1443.js","assets/vec4-46a9b36d.js","assets/vec4f64-939de194.js","assets/triangle-8cd02c5d.js","assets/sphere-622880b9.js","assets/mathUtils-57aba1ea.js","assets/mat4-7dde83b1.js","assets/byteSizeEstimations-90c5a50d.js","assets/quatf64-c94bd656.js","assets/mat4f64-fbeb2cd1.js","assets/lineSegment-c6f0b9d1.js","assets/Indices-d9b791ce.js","assets/VertexAttribute-9c5c630d.js","assets/ScreenSpacePass-6db805f2.js","assets/vec2-ab9f47bf.js","assets/compilerUtils-fefa73ae.js","assets/Evented-cbf5f368.js","assets/request-f17a8ddb.js","assets/preload-helper-101896b7.js","assets/requestImageUtils-f656eddc.js","assets/SSAO.glsl-3068f7bf.js","assets/assets-a5ce5e1a.js","assets/Texture-411ca148.js","assets/context-util-d4c193b5.js","assets/VertexArrayObject-3630ef4f.js","assets/mat4f32-77b3d8ac.js","assets/BufferView-478024d2.js","assets/aaBoundingBox-4a83dbbc.js","assets/Extent-a1a1de42.js","assets/aaBoundingRect-b340cf8c.js","assets/ViewingMode-915d19cb.js","assets/mat3-9a8d9db7.js","assets/quat-ec16a584.js","assets/vec3f32-4322908d.js","assets/SSAOBlur.glsl-ea338452.js","assets/VertexElementDescriptor-2925c6af.js","assets/plane-46a8c767.js","assets/ElevationInfo-88554f24.js","assets/jsonMap-190c5593.js","assets/fieldUtils-77ec75e2.js","assets/arcadeOnDemand-5175e7d9.js","assets/geometry-eec1b371.js","assets/Polyline-b571c705.js","assets/typeUtils-cd52dc20.js","assets/lengthUtils-92fed992.js","assets/unitUtils-dd6fb8ee.js","assets/index-7dfdb274.js","assets/Basemap-f70b1b37.js","assets/Collection-7c37b74e.js","assets/SimpleObservable-8e532943.js","assets/collectionUtils-0365f48b.js","assets/deprecate-0d93948c.js","assets/Loadable-46524a7e.js","assets/Promise-368b703a.js","assets/loadAll-01cdf0a9.js","assets/asyncUtils-087555fc.js","assets/Portal-51616380.js","assets/locale-30120714.js","assets/PortalGroup-d495847c.js","assets/PortalUser-e16fc7d1.js","assets/PortalItem-6eebfb2b.js","assets/messages-28bf3b89.js","assets/writeUtils-3bde6e49.js","assets/layerUtils-68eea656.js","assets/Color-af6e0c66.js","assets/colorUtils-639f4d25.js","assets/enumeration-61a13175.js","assets/opacityUtils-1333f803.js","assets/CollectionFlattener-f43a0fce.js","assets/TablesMixin-a4aaaf91.js","assets/Layer-ead8c88c.js","assets/Identifiable-093f90a8.js","assets/Graphic-1859ae71.js","assets/PopupTemplate-52faab17.js","assets/Clonable-9b34e760.js","assets/number-2ab8ca0d.js","assets/symbols-75e7a993.js","assets/CIMSymbol-8f02a6e3.js","assets/Symbol-8266348e.js","assets/screenUtils-90993e16.js","assets/symbolLayerUtils3D-c8c40895.js","assets/persistableUrlUtils-56d43b12.js","assets/jsonUtils-c6684c52.js","assets/Cyclical-078b4564.js","assets/reactiveUtils-5869e41a.js","assets/workers-5d67fe7a.js","assets/Connection-b756149d.js","assets/Queue-275a6362.js","assets/intl-70c09a3c.js","assets/projection-0af97a56.js","assets/zscale-48bab05e.js","assets/TileInfo-c5c8c8d2.js","assets/widget-09d2e7af.js","assets/uuid-73213768.js","assets/dom-5b7af1bf.js","assets/HandleOwner-2edbba46.js","assets/executeQueryJSON-0696009a.js","assets/normalizeUtils-6483f6b5.js","assets/query-71223310.js","assets/pbfQueryUtils-c922ef32.js","assets/pbf-8b0546e8.js","assets/OptimizedFeature-73582c6e.js","assets/OptimizedFeatureSet-1d1ac4b9.js","assets/queryZScale-3c8de33a.js","assets/FeatureSet-9cc47aef.js","assets/Field-1d4f9ca4.js","assets/fieldType-b34e5d2d.js","assets/Query-13124a97.js","assets/TimeExtent-2004eecf.js","assets/RelationshipQuery-c27267ab.js","assets/LegendOptions-2e7b3d70.js","assets/utils-4aa03157.js","assets/BlendLayer-813950f9.js","assets/parser-01f6451e.js","assets/ItemCache-bf1028d4.js","assets/MemCache-1d2f56ee.js","assets/utils-0c7f5071.js","assets/jsonUtils-559e9000.js","assets/UniqueValueRenderer-30750d31.js","assets/diffUtils-8a8cb5bc.js","assets/colorRamps-8d7efc14.js","assets/sizeVariableUtils-d4870b0d.js","assets/jsonUtils-eb568237.js","assets/styleUtils-015eeecd.js","assets/DictionaryLoader-326d0e17.js","assets/LRUCache-b9228ca3.js","assets/heatmapUtils-3d7c22c5.js","assets/featureConversionUtils-d2229ed4.js","assets/TopFeaturesQuery-9aca00bf.js","assets/FeatureLayer-9a7e04cf.js","assets/MultiOriginJSONSupport-b8792dfa.js","assets/LayerFloorInfo-e7c896e5.js","assets/FeatureLayerBase-d5682b4b.js","assets/HeightModelInfo-34f16d74.js","assets/arcgisLayerUrl-6e9db12f.js","assets/OperationalLayer-1dad72ac.js","assets/editsZScale-12d81957.js","assets/APIKeyMixin-b6e4f897.js","assets/ArcGISService-e571bcff.js","assets/CustomParametersMixin-a5d06ccc.js","assets/EditBusLayer-b5dc3689.js","assets/FeatureReductionLayer-1e5c4045.js","assets/labelingInfo-be3a629c.js","assets/labelUtils-4f4b54c6.js","assets/defaultsJSON-59981e75.js","assets/OrderedLayer-9623e905.js","assets/PortalLayer-9dd15f09.js","assets/RefreshableLayer-49182ab8.js","assets/ScaleRangeLayer-c072e266.js","assets/TemporalLayer-f784dd83.js","assets/TimeInfo-f76d6c20.js","assets/FeatureTemplate-c4496b93.js","assets/FeatureType-0be9420b.js","assets/fieldProperties-9e220f14.js","assets/FieldsIndex-16707836.js","assets/versionUtils-f229b9a6.js","assets/styleUtils-08eaa4d2.js","assets/popupUtils-88fed094.js","assets/colorUtils-82440b70.js","assets/mat2d-d0b91e3e.js","assets/Scheduler-5e6ccc87.js","assets/GraphicsLayer-a7c6f685.js","assets/unitBezier-881ac1eb.js","assets/mat3f32-d3d088e8.js","assets/vec2f32-461e65a9.js","assets/TileStrategy-a5366189.js","assets/TileStore-8f580dbf.js","assets/TileKey-9cae9369.js","assets/rbush-8e36784a.js","assets/quickselect-322ec8e1.js","assets/capabilities-d08b6e58.js","assets/Subtype-a3103d84.js","assets/datetime-4f774298.js","assets/elevationInfoUtils-44cce436.js","assets/QueryEngineResult-eb704fb1.js","assets/utils-52ad3c09.js","assets/generateRendererUtils-2f0b667c.js","assets/WhereClause-6c9440a1.js","assets/utils-63166b41.js","assets/json-48e3ea08.js","assets/EffectView-dffeb0bc.js","assets/ExportImageParameters-3714ed4b.js","assets/sublayerUtils-eea48c01.js","assets/webStyleSymbolUtils-6bef877f.js","assets/devEnvironmentUtils-5002a058.js","assets/dehydratedFeatures-3dcd65f1.js","assets/enums-4b2a86a0.js","assets/index-a8abe695.css","assets/InterleavedLayout-b5930508.js","assets/types-e1c0a5bf.js","assets/triangulationUtils-6b510de4.js","assets/earcut-58237617.js","assets/deduplicate-d92c3cc2.js","assets/NestedMap-1b5db22e.js","assets/Octree-8ed6dc77.js","assets/floatRGBA-090399ba.js","assets/boundedPlane-296928f6.js","assets/glUtil-7aa58841.js"]));const mh={factor:1,units:1};let Oe=class extends gr{constructor(){super(...arguments),this.output=w.Color,this.cullFace=bs.None,this.hasSlicePlane=!1,this.hasVertexColors=!1,this.transparent=!1,this.polygonOffset=!1,this.enableOffset=!0,this.writeDepth=!0,this.hasOccludees=!1,this.transparencyPassType=K.NONE,this.hasMultipassTerrain=!1,this.cullAboveGround=!1,this.objectAndLayerIdColorInstanced=!1}};v([S({count:w.COUNT})],Oe.prototype,"output",void 0),v([S({count:bs.COUNT})],Oe.prototype,"cullFace",void 0),v([S()],Oe.prototype,"hasSlicePlane",void 0),v([S()],Oe.prototype,"hasVertexColors",void 0),v([S()],Oe.prototype,"transparent",void 0),v([S()],Oe.prototype,"polygonOffset",void 0),v([S()],Oe.prototype,"enableOffset",void 0),v([S()],Oe.prototype,"writeDepth",void 0),v([S()],Oe.prototype,"hasOccludees",void 0),v([S({count:K.COUNT})],Oe.prototype,"transparencyPassType",void 0),v([S()],Oe.prototype,"hasMultipassTerrain",void 0),v([S()],Oe.prototype,"cullAboveGround",void 0),v([S()],Oe.prototype,"objectAndLayerIdColorInstanced",void 0);let pm=class extends Ur{constructor(e){super(e,new vh),this.supportsEdges=!0,this._configuration=new Oe}getConfiguration(e,t){return this._configuration.output=e,this._configuration.cullFace=this.parameters.cullFace,this._configuration.hasVertexColors=this.parameters.hasVertexColors,this._configuration.hasSlicePlane=this.parameters.hasSlicePlane,this._configuration.transparent=this.parameters.transparent,this._configuration.polygonOffset=this.parameters.polygonOffset,this._configuration.writeDepth=this.parameters.writeDepth,this._configuration.hasOccludees=this.parameters.hasOccludees,this._configuration.transparencyPassType=t.transparencyPassType,this._configuration.enableOffset=t.camera.relativeElevation<io,this._configuration.hasMultipassTerrain=t.multipassTerrain.enabled,this._configuration.cullAboveGround=t.multipassTerrain.cullAboveGround,this._configuration}intersect(e,t,i,s,n,a,o){vo(e,t,s,n,a,void 0,o)}requiresSlot(e,t){return t===w.Color||t===w.Alpha||t===w.Highlight||t===w.Depth&&this.parameters.writeLinearDepth||t===w.ObjectAndLayerIdColor?e===j.DRAPED_MATERIAL?!0:t===w.Highlight?e===j.OPAQUE_MATERIAL:e===(this.parameters.transparent?this.parameters.writeDepth?j.TRANSPARENT_MATERIAL:j.TRANSPARENT_DEPTH_WRITE_DISABLED_MATERIAL:j.OPAQUE_MATERIAL):!1}createGLMaterial(e){return new gh(e)}createBufferWriter(){return new Ws(vt("enable-feature:objectAndLayerId-rendering")?uh:ln)}},gh=class extends Pi{_updateOccludeeState(e){e.hasOccludees!==this._material.parameters.hasOccludees&&this._material.setParameters({hasOccludees:e.hasOccludees})}beginSlot(e){return this._output!==w.Color&&this._output!==w.Alpha||this._updateOccludeeState(e),this.ensureTechnique(ks,e)}},vh=class extends Is{constructor(){super(...arguments),this.color=Ls,this.transparent=!1,this.writeDepth=!0,this.writeLinearDepth=!1,this.hasVertexColors=!1,this.polygonOffset=!1,this.hasSlicePlane=!1,this.cullFace=bs.None,this.hasOccludees=!1}};const fe={dash:[4,3],dot:[1,3],"long-dash":[8,3],"short-dash":[4,1],"short-dot":[1,1]},_h={dash:fe.dash,"dash-dot":[...fe.dash,...fe.dot],dot:fe.dot,"long-dash":fe["long-dash"],"long-dash-dot":[...fe["long-dash"],...fe.dot],"long-dash-dot-dot":[...fe["long-dash"],...fe.dot,...fe.dot],none:null,"short-dash":fe["short-dash"],"short-dash-dot":[...fe["short-dash"],...fe["short-dot"]],"short-dash-dot-dot":[...fe["short-dash"],...fe["short-dot"],...fe["short-dot"]],"short-dot":fe["short-dot"],solid:null},yh=8;function Sh(r,e=2){return V(r)?r:{pattern:r.slice(),pixelRatio:e}}function vm(r,e=2){return{pattern:[r,r],pixelRatio:e}}function _m(r){return C(r)&&r.type==="style"?xh(r.style):null}function xh(r){return C(r)?Sh(_h[r],yh):null}var Mr,xs;(function(r){r[r.RasterImage=0]="RasterImage",r[r.Features=1]="Features"})(Mr||(Mr={})),function(r){r[r.WithRasterImage=0]="WithRasterImage",r[r.WithoutRasterImage=1]="WithoutRasterImage"}(xs||(xs={}));var Si,je;(function(r){r[r.ADD=0]="ADD",r[r.UPDATE=1]="UPDATE",r[r.REMOVE=2]="REMOVE"})(Si||(Si={})),function(r){r[r.NONE=0]="NONE",r[r.VISIBILITIES=1]="VISIBILITIES",r[r.VERTEXATTRS=2]="VERTEXATTRS",r[r.TRANSFORMATION=4]="TRANSFORMATION",r[r.HIGHLIGHTS=8]="HIGHLIGHTS",r[r.OCCLUDEES=16]="OCCLUDEES"}(je||(je={}));function ym(r,e=null){const t=[],i=[];wh(r,i,t);const s=i[0][1].data,n=t[0][1].length,a=new Array(n).fill(0);return Th(r,i,t),Oh(r,i,t,a),Ah(r,i,t,a),Ch(r,i,t,a),bh(r,i,t,a),Rh(r,i,t,a),Ph(r,i,t,a),Dh(r,i,t,s),new $e(i,t,Ci.Line,e)}function wh(r,e,t){const{attributeData:{position:i},removeDuplicateStartEnd:s}=r,n=Eh(i)&&s,a=i.length/3-(n?1:0),o=new Array(2*(a-1)),l=n?bl(i,0,i.length-3):i;let c=0;for(let d=0;d<a-1;d++)o[c++]=d,o[c++]=d+1;e.push([u.POSITION,{size:3,data:l,exclusive:n}]),t.push([u.POSITION,o])}function Th(r,e,t){const i=r.attributeData.mapPosition;V(i)||(t.push([u.MAPPOS,t[0][1]]),e.push([u.MAPPOS,{size:3,data:i}]))}function Oh(r,e,t,i){if(C(r.attributeData.colorFeature))return;const s=r.attributeData.color;e.push([u.COLOR,{size:4,data:k(s,Ei)}]),t.push([u.COLOR,i])}function Ch(r,e,t,i){if(!C(r.attributeData.normal))return;const s=r.attributeData.normal;e.push([u.NORMAL,{size:3,data:s}]),t.push([u.NORMAL,i])}function bh(r,e,t,i){const s=r.attributeData.colorFeature;V(s)||(e.push([u.COLORFEATUREATTRIBUTE,{size:1,data:new Float32Array([s])}]),t.push([u.COLOR,i]))}function Ah(r,e,t,i){if(C(r.attributeData.sizeFeature))return;const s=r.attributeData.size;e.push([u.SIZE,{size:1,data:[k(s,1)]}]),t.push([u.SIZE,i])}function Rh(r,e,t,i){const s=r.attributeData.sizeFeature;V(s)||(e.push([u.SIZEFEATUREATTRIBUTE,{size:1,data:new Float32Array([s])}]),t.push([u.SIZEFEATUREATTRIBUTE,i]))}function Ph(r,e,t,i){const s=r.attributeData.opacityFeature;V(s)||(e.push([u.OPACITYFEATUREATTRIBUTE,{size:1,data:new Float32Array([s])}]),t.push([u.OPACITYFEATUREATTRIBUTE,i]))}function Dh(r,e,t,i){if(V(r.overlayInfo)||r.overlayInfo.renderCoordsHelper.viewingMode!==St.Global||!r.overlayInfo.spatialReference.isGeographic)return;const s=new Float64Array(i.length),n=hc(r.overlayInfo.spatialReference);for(let f=0;f<s.length;f+=3)cc(i,f,s,f,n);const a=i.length/3,o=new Float32Array(a+1);let l=Ih,c=$h,d=0,h=0;U(l,s[h++],s[h++],s[h++]),o[0]=0;for(let f=1;f<a+1;++f)f===a&&(h=0),U(c,s[h++],s[h++],s[h++]),d+=Gl(l,c),o[f]=d,[l,c]=[c,l];e.push([u.DISTANCETOSTART,{size:1,data:o}]),t.push([u.DISTANCETOSTART,t[0][1]])}function Eh(r){const e=r.length;return r[0]===r[e-3]&&r[1]===r[e-2]&&r[2]===r[e-1]}var Ca;(function(r){r[r.KEEP=0]="KEEP",r[r.REMOVE=1]="REMOVE"})(Ca||(Ca={}));const Ih=I(),$h=I();let Mh=class{constructor(e,t){this.vec3=e,this.id=t}};function oi(r,e,t,i){return new Mh(nr(r,e,t),i)}var er;(function(r){r[r.None=0]="None",r[r.ColorAndWater=1]="ColorAndWater",r[r.Highlight=2]="Highlight",r[r.Occluded=3]="Occluded",r[r.ObjectAndLayerIdColor=4]="ObjectAndLayerIdColor"})(er||(er={}));let ba=class{constructor(e,t){this.index=e,this.renderTargets=t,this._extent=ir(),this.resolution=0,this.renderLocalOrigin=oi(0,0,0,"O"),this.pixelRatio=1,this.mapUnitsPerPixel=1,this.canvasGeometries=new Lh,this.validTargets=null,this.hasDrapedFeatureSource=!1,this.hasDrapedRasterSource=!1,this.hasTargetWithoutRasterImage=!1,this.index=e,this.validTargets=new Array(t.renderTargets.length).fill(!1)}get extent(){return this._extent}getValidTexture(e){return this.validTargets[e]?this.renderTargets.getTarget(e).getTexture():null}get _needsColorWithoutRasterImage(){return this.hasDrapedRasterSource&&this.hasDrapedFeatureSource&&this.hasTargetWithoutRasterImage}getColorTexture(e){const t=e===er.ColorAndWater?this.renderTargets.getTarget(re.Color):e===er.Highlight?this.renderTargets.getTarget(re.Highlight):e===er.ObjectAndLayerIdColor?this.renderTargets.getTarget(re.ObjectAndLayerIdColor):this.renderTargets.getTarget(re.Occluded);return t?t.getTexture():null}getColorTextureNoRasterImage(){return this._needsColorWithoutRasterImage?this.getValidTexture(re.ColorNoRasterImage):this.hasDrapedFeatureSource?this.getValidTexture(re.Color):null}getNormalTexture(e){const t=e===er.ColorAndWater?this.renderTargets.getTarget(re.Water):null;return t?t.getTexture():null}draw(e,t){const i=this.computeRenderTargetValidityBitfield();for(const s of this.renderTargets.renderTargets)s.type!==re.ColorNoRasterImage||this._needsColorWithoutRasterImage?this.validTargets[s.type]=e.drawTarget(this,s,t):this.validTargets[s.type]=!1;return i^this.computeRenderTargetValidityBitfield()?Qs.CHANGED:Qs.UNCHANGED}computeRenderTargetValidityBitfield(){const e=this.validTargets;return+e[re.Color]|+e[re.ColorNoRasterImage]<<1|+e[re.Highlight]<<2|+e[re.Water]<<3|+e[re.Occluded]<<4}setupGeometryViewsCyclical(e){this.setupGeometryViewsDirect();const t=.001*e.range;if(this._extent[0]-t<=e.min){const i=this.canvasGeometries.extents[this.canvasGeometries.numViews++];la(this._extent,e.range,0,i)}if(this._extent[2]+t>=e.max){const i=this.canvasGeometries.extents[this.canvasGeometries.numViews++];la(this._extent,-e.range,0,i)}}setupGeometryViewsDirect(){this.canvasGeometries.numViews=1,Xl(this.canvasGeometries.extents[0],this._extent)}hasSomeSizedView(){for(let e=0;e<this.canvasGeometries.numViews;e++){const t=this.canvasGeometries.extents[e];if(t[0]!==t[2]&&t[1]!==t[3])return!0}return!1}applyViewport(e){e.setViewport(this.index===ai.INNER?0:this.resolution,0,this.resolution,this.resolution)}},Lh=class{constructor(){this.extents=[ir(),ir(),ir()],this.numViews=0}},cn=class{constructor(e,t){this._size=xc(),this._fbo=null,this._fbo=new Mo(e,{colorTarget:Ao.TEXTURE,depthStencilTarget:Ro.NONE},{target:$r.TEXTURE_2D,pixelFormat:ur.RGBA,dataType:Lr.UNSIGNED_BYTE,wrapMode:pr.CLAMP_TO_EDGE,samplingMode:ui.LINEAR_MIPMAP_LINEAR,hasMipmap:t,maxAnisotropy:8,width:0,height:0})}dispose(){this._fbo=Le(this._fbo)}getTexture(){return this._fbo?this._fbo.colorTexture:null}isValid(){return this._fbo!==null}resize(e,t){this._size[0]=e,this._size[1]=t,this._fbo.resize(this._size[0],this._size[1])}bind(e){e.bindFramebuffer(this._fbo)}generateMipMap(){const e=this._fbo.colorTexture;e.descriptor.hasMipmap&&e.generateMipmap()}disposeRenderTargetMemory(){var e;(e=this._fbo)==null||e.resize(0,0)}get gpuMemoryUsage(){var e;return((e=this._fbo)==null?void 0:e.gpuMemoryUsage)??0}},Gt=class{constructor(e,t,i,s=!0){this.output=t,this.type=i,this.valid=!1,this.lastUsed=1/0,this.fbo=new cn(e,s)}},Nh=class{constructor(e){this.renderTargets=[new Gt(e,w.Color,re.Color),new Gt(e,w.Color,re.ColorNoRasterImage),new Gt(e,w.Highlight,re.Highlight,!1),new Gt(e,w.Normal,re.Water),new Gt(e,w.Color,re.Occluded)],vt("enable-feature:objectAndLayerId-rendering")&&this.renderTargets.push(new Gt(e,w.ObjectAndLayerIdColor,re.ObjectAndLayerIdColor))}getTarget(e){return this.renderTargets[e].fbo}dispose(){for(const e of this.renderTargets)e.fbo.dispose()}disposeRenderTargetMemory(){for(const e of this.renderTargets)e.fbo.disposeRenderTargetMemory()}validateUsageForTarget(e,t,i){if(e)t.lastUsed=i;else if(i-t.lastUsed>Fh)t.fbo.disposeRenderTargetMemory(),t.lastUsed=1/0;else if(t.lastUsed<1/0)return!0;return!1}get gpuMemoryUsage(){return this.renderTargets.reduce((e,t)=>e+t.fbo.gpuMemoryUsage,0)}};const Fh=1e3;let zh=class{constructor(e){this._context=e,this._perConstructorInstances=new Lo,this._frameCounter=0,this._keepAliveFrameCount=Aa}get viewingMode(){return this._context.viewingMode}get constructionContext(){return this._context}dispose(){this._perConstructorInstances.forEach(e=>e.forEach(t=>t.technique.destroy())),this._perConstructorInstances.clear()}acquire(e,t=Uh){const i=t.key;let s=this._perConstructorInstances.get(e,i);if(V(s)){const n=new e(this._context,t,()=>this.release(n));s=new jh(n),this._perConstructorInstances.set(e,i,s)}return++s.refCount,s.technique}releaseAndAcquire(e,t,i){if(C(i)){if(t.key===i.key)return i;this.release(i)}return this.acquire(e,t)}release(e){if(V(e)||this._perConstructorInstances.empty)return;const t=this._perConstructorInstances.get(e.constructor,e.key);V(t)||(--t.refCount,t.refCount===0&&(t.refZeroFrame=this._frameCounter))}frameUpdate(){this._frameCounter++,this._keepAliveFrameCount!==Aa&&this._perConstructorInstances.forEach((e,t)=>{e.forEach((i,s)=>{i.refCount===0&&i.refZeroFrame+this._keepAliveFrameCount<this._frameCounter&&(i.technique.destroy(),this._perConstructorInstances.delete(t,s))})})}async reloadAll(){const e=new Array;this._perConstructorInstances.forEach((t,i)=>{const s=async(n,a)=>{const o=a.shader;o&&(await o.reload(),n.forEach(l=>l.technique.reload(this._context)))};e.push(s(t,i))}),await Promise.all(e)}},jh=class{constructor(e){this.technique=e,this.refCount=0,this.refZeroFrame=0}};const Aa=-1,Uh=new _o,Vh=r=>{class e extends r{constructor(){super(...arguments),this._isDisposed=!1}dispose(){for(const i of this._managedDisposables??[]){const s=this[i];this[i]=null,s&&typeof s.dispose=="function"&&s.dispose()}this._isDisposed=!0}get isDisposed(){return this._isDisposed}}return e};function Ra(){return(r,e)=>{var t,i;r.hasOwnProperty("_managedDisposables")||(r._managedDisposables=((t=r._managedDisposables)==null?void 0:t.slice())??[]),(i=r._managedDisposables)==null||i.unshift(e)}}let Mi=class{constructor(e=null,t=null,i=null){this._viewUp=I(),this._viewForward=I(),this._viewRight=I(),this._ray=ht(),this._viewport=hr(0,0,1,1),this._padding=hr(0,0,0,0),this._fov=55/180*Math.PI,this._nearFar=Ms(1,1e3),this._viewDirty=!0,this._viewMatrix=X(),this._projectionDirty=!0,this._projectionMatrix=X(),this._viewProjectionDirty=!0,this._viewProjectionMatrix=X(),this._viewInverseTransposeMatrixDirty=!0,this._viewInverseTransposeMatrix=X(),this._inverseProjectionDirty=!0,this._inverseProjectionMatrix=null,this._frustumDirty=!0,this._frustum=Ac(),this._fullViewport=Qe(),this._pixelRatio=1,this.relativeElevation=0,C(e)&&z(this._ray.origin,e),this._center=C(t)?ni(t):I(),this._up=C(i)?ni(i):nr(0,0,1)}get pixelRatio(){return this._pixelRatio}set pixelRatio(e){this._pixelRatio=e>0?e:1}get eye(){return this._ray.origin}set eye(e){this._compareAndSetView(e,this._ray.origin)}get center(){return this._center}set center(e){this._compareAndSetView(e,this._center)}get ray(){return ie(this._ray.direction,this.center,this.eye),this._ray}get up(){return this._up}set up(e){this._compareAndSetView(e,this._up)}get viewMatrix(){return this._ensureViewClean(),this._viewMatrix}set viewMatrix(e){qe(this._viewMatrix,e),this._viewDirty=!1,this._viewInverseTransposeMatrixDirty=!0,this._viewProjectionDirty=!0,this._frustumDirty=!0}get viewForward(){return this._ensureViewClean(),this._viewForward}get viewUp(){return this._ensureViewClean(),this._viewUp}get viewRight(){return this._ensureViewClean(),this._viewRight}get nearFar(){return this._nearFar}get near(){return this._nearFar[0]}set near(e){this._nearFar[0]!==e&&(this._nearFar[0]=e,this._projectionDirty=!0,this._inverseProjectionDirty=!0,this._viewProjectionDirty=!0,this._frustumDirty=!0)}get far(){return this._nearFar[1]}set far(e){this._nearFar[1]!==e&&(this._nearFar[1]=e,this._projectionDirty=!0,this._inverseProjectionDirty=!0,this._viewProjectionDirty=!0,this._frustumDirty=!0)}get viewport(){return this._viewport}set viewport(e){this.x=e[0],this.y=e[1],this.width=e[2],this.height=e[3]}get x(){return this._viewport[0]}set x(e){e+=this._padding[F.LEFT],this._viewport[0]!==e&&(this._viewport[0]=e,this._projectionDirty=!0,this._inverseProjectionDirty=!0,this._viewProjectionDirty=!0,this._frustumDirty=!0)}get y(){return this._viewport[1]}set y(e){e+=this._padding[F.BOTTOM],this._viewport[1]!==e&&(this._viewport[1]=e,this._projectionDirty=!0,this._inverseProjectionDirty=!0,this._viewProjectionDirty=!0,this._frustumDirty=!0)}get width(){return this._viewport[2]}set width(e){this._viewport[2]!==e&&(this._viewport[2]=e,this._projectionDirty=!0,this._inverseProjectionDirty=!0,this._viewProjectionDirty=!0,this._frustumDirty=!0)}get height(){return this._viewport[3]}set height(e){this._viewport[3]!==e&&(this._viewport[3]=e,this._projectionDirty=!0,this._inverseProjectionDirty=!0,this._viewProjectionDirty=!0,this._frustumDirty=!0)}get fullWidth(){return this._viewport[2]+this._padding[F.RIGHT]+this._padding[F.LEFT]}set fullWidth(e){this.width=e-(this._padding[F.RIGHT]+this._padding[F.LEFT])}get fullHeight(){return this._viewport[3]+this._padding[F.TOP]+this._padding[F.BOTTOM]}set fullHeight(e){this.height=e-(this._padding[F.TOP]+this._padding[F.BOTTOM])}get fullViewport(){return this._fullViewport[0]=this._viewport[0]-this._padding[F.LEFT],this._fullViewport[1]=this._viewport[1]-this._padding[F.BOTTOM],this._fullViewport[2]=this.fullWidth,this._fullViewport[3]=this.fullHeight,this._fullViewport}get aspect(){return this.width/this.height}get padding(){return this._padding}set padding(e){this._padding[F.TOP]===e[F.TOP]&&this._padding[F.RIGHT]===e[F.RIGHT]&&this._padding[F.BOTTOM]===e[F.BOTTOM]&&this._padding[F.LEFT]===e[F.LEFT]||(this._viewport[0]+=e[F.LEFT]-this._padding[F.LEFT],this._viewport[1]+=e[F.BOTTOM]-this._padding[F.BOTTOM],this._viewport[2]-=e[F.RIGHT]+e[F.LEFT]-(this._padding[F.RIGHT]+this._padding[F.LEFT]),this._viewport[3]-=e[F.TOP]+e[F.BOTTOM]-(this._padding[F.TOP]+this._padding[F.BOTTOM]),qr(this._padding,e),this._projectionDirty=!0,this._inverseProjectionDirty=!0,this._viewProjectionDirty=!0,this._frustumDirty=!0)}get viewProjectionMatrix(){return this._viewProjectionDirty&&(Mt(this._viewProjectionMatrix,this.projectionMatrix,this.viewMatrix),this._viewProjectionDirty=!1),this._viewProjectionMatrix}get projectionMatrix(){if(this._projectionDirty){const e=this.width,t=this.height,i=this.near*Math.tan(this.fovY/2),s=i*this.aspect;Ul(this._projectionMatrix,-s*(1+2*this._padding[F.LEFT]/e),s*(1+2*this._padding[F.RIGHT]/e),-i*(1+2*this._padding[F.BOTTOM]/t),i*(1+2*this._padding[F.TOP]/t),this.near,this.far),this._projectionDirty=!1}return this._projectionMatrix}get inverseProjectionMatrix(){return V(this._inverseProjectionMatrix)&&(this._inverseProjectionMatrix=X()),this._inverseProjectionDirty&&rr(this._inverseProjectionMatrix,this.projectionMatrix),this._inverseProjectionMatrix}set projectionMatrix(e){qe(this._projectionMatrix,e),this._projectionDirty=!1,this._inverseProjectionDirty=!0,this._viewProjectionDirty=!0,this._frustumDirty=!0}get fov(){return this._fov}set fov(e){this._fov=e,this._projectionDirty=!0,this._inverseProjectionDirty=!0,this._viewProjectionDirty=!0,this._frustumDirty=!0}get fovX(){return yl(this._fov,this.width,this.height)}set fovX(e){this._fov=Sl(e,this.width,this.height),this._projectionDirty=!0,this._inverseProjectionDirty=!0,this._viewProjectionDirty=!0,this._frustumDirty=!0}get fovY(){return xl(this._fov,this.width,this.height)}set fovY(e){this._fov=wl(e,this.width,this.height),this._projectionDirty=!0,this._inverseProjectionDirty=!0,this._viewProjectionDirty=!0,this._frustumDirty=!0}get distance(){return yt(this._center,this.eye)}get frustum(){return this._recomputeFrustum(),this._frustum}get viewInverseTransposeMatrix(){return(this._viewInverseTransposeMatrixDirty||this._viewDirty)&&(rr(this._viewInverseTransposeMatrix,this.viewMatrix),To(this._viewInverseTransposeMatrix,this._viewInverseTransposeMatrix),this._viewInverseTransposeMatrixDirty=!1),this._viewInverseTransposeMatrix}depthNDCToWorld(e){const t=2*e-1;return 2*this.near*this.far/(this.far+this.near-t*(this.far-this.near))}get perRenderPixelRatio(){return Math.tan(this.fovX/2)/(this.width/2)}get perScreenPixelRatio(){return this.perRenderPixelRatio*this._pixelRatio}get aboveGround(){return this.relativeElevation!=null&&this.relativeElevation>=0}copyFrom(e){z(this._ray.origin,e.eye),z(this._center,e.center),z(this._up,e.up),qr(this._viewport,e.viewport),qr(this._padding,e.padding),Sr(this._nearFar,e.nearFar),this._fov=e.fov,this.relativeElevation=e.relativeElevation;const t=e;return this._viewDirty=t._viewDirty,this._viewDirty||(qe(this._viewMatrix,e.viewMatrix),z(this._viewRight,e.viewRight),z(this._viewUp,e.viewUp),z(this._viewForward,e.viewForward)),t._projectionDirty?this._projectionDirty=!0:(qe(this._projectionMatrix,e.projectionMatrix),this._projectionDirty=!1),this._viewProjectionDirty=!0,this._inverseProjectionDirty=!0,this._frustumDirty=t._frustumDirty,this._frustumDirty||(Rc(this._frustum,e.frustum),this._frustumDirty=!1),t._viewInverseTransposeMatrixDirty?this._viewInverseTransposeMatrixDirty=!0:(qe(this._viewInverseTransposeMatrix,e.viewInverseTransposeMatrix),this._viewInverseTransposeMatrixDirty=!1),qr(this._fullViewport,e.fullViewport),this._pixelRatio=e.pixelRatio,this}copyViewFrom(e){this.eye=e.eye,this.center=e.center,this.up=e.up}clone(){return new Mi().copyFrom(this)}equals(e){return Dr(this.eye,e.eye)&&Dr(this._center,e.center)&&Dr(this._up,e.up)&&ca(this._viewport,e.viewport)&&ca(this._padding,e.padding)&&Bl(this._nearFar,e.nearFar)&&this._fov===e.fov&&this._pixelRatio===e.pixelRatio&&this.relativeElevation===e.relativeElevation}almostEquals(e){if(this._pixelRatio!==e.pixelRatio||Math.abs(e.fov-this._fov)>=.001)return!1;const t=5e-4,i=1-1e-10;Xs(me,e.eye,e.center),Xs(Qi,this.eye,this._center);const s=st(me,Qi),n=Zs(me),a=Zs(Qi);return s*s>=i*n*a&&fn(e.eye,this.eye)<Math.max(n,a)*t*t&&da(e.padding,this._padding)<.5&&da(e.viewport,this._viewport)<.5}computeRenderPixelSizeAt(e){return this.computeRenderPixelSizeAtDist(this._viewDirectionDistance(e))}computeRenderPixelSizeAtDist(e){return e*this.perRenderPixelRatio}computeScreenPixelSizeAt(e){return this.computeScreenPixelSizeAtDist(this._viewDirectionDistance(e))}_viewDirectionDistance(e){return Math.abs(Cn(this.viewForward,ie(me,e,this.eye)))}computeScreenPixelSizeAtDist(e){return e*this.perScreenPixelRatio}computeDistanceFromRadius(e,t){return e/Math.tan(Math.min(this.fovX,this.fovY)/(2*(t||1)))}getScreenCenter(e=Cc()){return e[0]=(this.padding[F.LEFT]+this.width/2)/this._pixelRatio,e[1]=(this.padding[F.TOP]+this.height/2)/this._pixelRatio,e}getRenderCenter(e,t=.5,i=.5){return e[0]=this.padding[F.LEFT]+this.width*t,e[1]=this.padding[F.BOTTOM]+this.height*i,e[2]=.5,e}setGLViewport(e){const t=this.viewport,i=this.padding;e.setViewport(t[0]-i[3],t[1]-i[2],t[2]+i[1]+i[3],t[3]+i[0]+i[2])}applyProjection(e,t){e!==M&&z(M,e),M[3]=1,Qt(M,M,this.projectionMatrix);const i=Math.abs(M[3]);W(M,M,1/i);const s=this.fullViewport;t[0]=It(0,s[0]+s[2],.5+.5*M[0]),t[1]=It(0,s[1]+s[3],.5+.5*M[1]),t[2]=.5*(M[2]+1),t[3]=i}unapplyProjection(e,t){const i=this.fullViewport;M[0]=(e[0]/(i[0]+i[2])*2-1)*e[3],M[1]=(e[1]/(i[1]+i[3])*2-1)*e[3],M[2]=(2*e[2]-1)*e[3],M[3]=e[3],Qt(M,M,this.inverseProjectionMatrix),t[0]=M[0],t[1]=M[1],t[2]=M[2]}projectToScreen(e,t){return this.projectToRenderScreen(e,Yi),this.renderToScreen(Yi,t),t}projectToRenderScreen(e,t){if(M[0]=e[0],M[1]=e[1],M[2]=e[2],M[3]=1,Qt(M,M,this.viewProjectionMatrix),M[3]===0)return null;W(M,M,1/Math.abs(M[3]));const i=this.fullViewport;return"x"in t?(t.x=It(0,i[0]+i[2],.5+.5*M[0]),t.y=It(0,i[1]+i[3],.5+.5*M[1])):(t[0]=It(0,i[0]+i[2],.5+.5*M[0]),t[1]=It(0,i[1]+i[3],.5+.5*M[1]),t.length>2&&(t[2]=.5*(M[2]+1))),t}unprojectFromScreen(e,t){return this.unprojectFromRenderScreen(this.screenToRender(e,Yi),t)}unprojectFromRenderScreen(e,t){if(Mt(Jr,this.projectionMatrix,this.viewMatrix),!rr(Jr,Jr))return null;const i=this.fullViewport;return M[0]=2*(e[0]-i[0])/i[2]-1,M[1]=2*(e[1]-i[1])/i[3]-1,M[2]=2*e[2]-1,M[3]=1,Qt(M,M,Jr),M[3]===0?null:(t[0]=M[0]/M[3],t[1]=M[1]/M[3],t[2]=M[2]/M[3],t)}constrainWindowSize(e,t,i,s=i){const n=e*this._pixelRatio,a=t*this._pixelRatio,o=Math.max(n-i/2,0),l=Math.max(this.fullHeight-a-s/2,0),c=-Math.min(n-i/2,0),d=-Math.min(this.fullHeight-a-s/2,0);return[o,l,i-c- -Math.min(this.fullWidth-n-i/2,0),s-d- -Math.min(a-s/2,0)]}computeUp(e){e===St.Global?this._computeUpGlobal():this._computeUpLocal()}screenToRender(e,t){const i=e[0]*this._pixelRatio,s=this.fullHeight-e[1]*this._pixelRatio;return t[0]=i,t[1]=s,t}renderToScreen(e,t){const i=e[0]/this._pixelRatio,s=(this.fullHeight-e[1])/this._pixelRatio;t[0]=i,t[1]=s}_computeUpGlobal(){ie(me,this.center,this.eye);const e=rt(this.center);e<1?(U(this._up,0,0,1),this._markViewDirty()):Math.abs(st(me,this.center))>.9999*rt(me)*e||(Je(this._up,me,this.center),Je(this._up,this._up,me),oe(this._up,this._up),this._markViewDirty())}_computeUpLocal(){mn(me,this.eye,this.center),Math.abs(me[2])<=.9999&&(W(me,me,me[2]),U(this._up,-me[0],-me[1],1-me[2]),oe(this._up,this._up),this._markViewDirty())}_compareAndSetView(e,t){typeof e[0]=="number"&&isFinite(e[0])&&typeof e[1]=="number"&&isFinite(e[1])&&typeof e[2]=="number"&&isFinite(e[2])?Dr(e,t)||(z(t,e),this._markViewDirty()):Hr.getLogger("esri.views.3d.webgl-engine.lib.Camera").warn("Camera vector contains invalid number, ignoring value")}_markViewDirty(){this._viewDirty=!0,this._frustumDirty=!0,this._viewProjectionDirty=!0}_recomputeFrustum(){this._frustumDirty&&(Pc(this.viewMatrix,this.projectionMatrix,this._frustum),this._frustumDirty=!1)}_ensureViewClean(){this._viewDirty&&(Oo(this._viewMatrix,this.eye,this._center,this._up),U(this._viewForward,-this._viewMatrix[2],-this._viewMatrix[6],-this._viewMatrix[10]),U(this._viewUp,this._viewMatrix[1],this._viewMatrix[5],this._viewMatrix[9]),U(this._viewRight,this._viewMatrix[0],this._viewMatrix[4],this._viewMatrix[8]),this._viewDirty=!1,this._viewInverseTransposeMatrixDirty=!0)}};const M=Qe(),Jr=X(),me=I(),Qi=I(),Yi=Ie();var F;(function(r){r[r.TOP=0]="TOP",r[r.RIGHT=1]="RIGHT",r[r.BOTTOM=2]="BOTTOM",r[r.LEFT=3]="LEFT"})(F||(F={}));class Hh{constructor(e,t,i,s){this._textureRepository=e,this._techniqueRepository=t,this.materialChanged=i,this.requestRender=s,this._id2glMaterialRef=new Lo}dispose(){this._textureRepository.dispose()}acquire(e,t,i){if(this._ownMaterial(e),!e.requiresSlot(t,i))return null;let s=this._id2glMaterialRef.get(i,e.id);if(V(s)){const n=e.createGLMaterial({material:e,techniqueRep:this._techniqueRepository,textureRep:this._textureRepository,output:i});s=new Gh(n),this._id2glMaterialRef.set(i,e.id,s)}return s.ref(),s.glMaterial}release(e,t){const i=this._id2glMaterialRef.get(t,e.id);C(i)&&(i.unref(),i.referenced||(Le(i.glMaterial),this._id2glMaterialRef.delete(t,e.id)))}_ownMaterial(e){C(e.repository)&&e.repository!==this&&Hr.getLogger("esri.views.3d.webgl-engine.lib.GLMaterialRepository").error("Material is already owned by a different material repository"),e.repository=this}}class Gh{constructor(e){this.glMaterial=e,this._refCnt=0}ref(){++this._refCnt}unref(){--this._refCnt,de(this._refCnt>=0)}get referenced(){return this._refCnt>0}}const Bh={rootOrigin:null};let Wh=class{constructor(e){this._originSR=e,this._origins=new Map,this._objects=new Map,this._gridSize=5e5,this._rootOriginId="root/"+Br()}getOrigin(e){const t=this._origins.get(this._rootOriginId);if(t==null){const d=Bh.rootOrigin;if(C(d))return this._origins.set(this._rootOriginId,oi(d[0],d[1],d[2],this._rootOriginId)),this.getOrigin(e);const h=oi(e[0]+Math.random()-.5,e[1]+Math.random()-.5,e[2]+Math.random()-.5,this._rootOriginId);return this._origins.set(this._rootOriginId,h),h}const i=this._gridSize,s=Math.round(e[0]/i),n=Math.round(e[1]/i),a=Math.round(e[2]/i),o=`${s}/${n}/${a}`;let l=this._origins.get(o);const c=.5*i;if(ie(ne,e,t.vec3),ne[0]=Math.abs(ne[0]),ne[1]=Math.abs(ne[1]),ne[2]=Math.abs(ne[2]),ne[0]<c&&ne[1]<c&&ne[2]<c){if(l){const d=Math.max(...ne);if(ie(ne,e,l.vec3),ne[0]=Math.abs(ne[0]),ne[1]=Math.abs(ne[1]),ne[2]=Math.abs(ne[2]),Math.max(...ne)<d)return l}return t}return l||(l=oi(s*i,n*i,a*i,o),this._origins.set(o,l)),l}_drawOriginBox(e,t=hr(1,1,0,1)){const i=window.view,s=i._stage,n=t.toString();if(!this._objects.has(n)){this._material=new cd({width:2,color:t}),s.add(this._material);const p=new zc({isPickable:!1}),m=new Nc({castShadow:!1});s.add(m),p.add(m),s.add(p),this._objects.set(n,m)}const a=this._objects.get(n),o=[0,1,5,4,0,2,1,7,6,2,0,1,3,7,5,4,6,2,0],l=o.length,c=new Array(3*l),d=new Array,h=.5*this._gridSize;for(let p=0;p<l;p++)c[3*p+0]=e[0]+(1&o[p]?h:-h),c[3*p+1]=e[1]+(2&o[p]?h:-h),c[3*p+2]=e[2]+(4&o[p]?h:-h),p>0&&d.push(p-1,p);fi(c,this._originSR,0,c,i.renderSpatialReference,0,l);const f=new $e([[u.POSITION,{size:3,data:c,exclusive:!0}]],[[u.POSITION,d]],Ci.Line);s.add(f),a.addGeometry(f,this._material,dr)}get test(){const e=this;return{set gridSize(t){e._gridSize=t}}}};const ne=I();var zr,xi;(function(r){r[r.RENDERING=0]="RENDERING",r[r.FINISHED_RENDERING=1]="FINISHED_RENDERING",r[r.FADING_TEXTURE_CHANNELS=2]="FADING_TEXTURE_CHANNELS",r[r.SWITCH_CHANNELS=3]="SWITCH_CHANNELS",r[r.FINISHED=4]="FINISHED"})(zr||(zr={})),function(r){r[r.RG=0]="RG",r[r.BA=1]="BA"}(xi||(xi={}));let kh=class{constructor(){this.readChannels=xi.RG,this.renderingStage=zr.FINISHED,this.startTime=0,this.startTimeHeightFade=0,this.cameraPositionLastFrame=I(),this.isCameraPositionFinal=!0,this.parallax=new Pa,this.parallaxNew=new Pa,this.crossFade={enabled:!1,factor:1,distanceThresholdFactor:.3},this.fadeInOut={stage:ar.FINISHED,factor:1,distanceThresholdFactor:.6},this.fadeIn={stage:wi.FINISHED,factor:1,distanceThresholdFactor:2},this.fadeInOutHeight={stage:Ti.FINISHED,factor:-1}}get isFading(){return this.fadeInOut.stage===ar.FADE_OUT||this.fadeInOut.stage===ar.FADE_IN||this.fadeIn.stage===wi.FADE_IN||this.fadeInOutHeight.stage!==Ti.FINISHED||this.renderingStage===zr.FADING_TEXTURE_CHANNELS}};var wi,ar,Ti;(function(r){r[r.FINISHED=0]="FINISHED",r[r.CHANGE_ANCHOR=1]="CHANGE_ANCHOR",r[r.FADE_IN=2]="FADE_IN"})(wi||(wi={})),function(r){r[r.FINISHED=0]="FINISHED",r[r.FADE_OUT=1]="FADE_OUT",r[r.SWITCH=2]="SWITCH",r[r.FADE_IN=3]="FADE_IN"}(ar||(ar={})),function(r){r[r.FINISHED=0]="FINISHED",r[r.HEIGHT_FADE=1]="HEIGHT_FADE"}(Ti||(Ti={}));let Pa=class{constructor(){this.anchorPointClouds=I(),this.cloudsHeight=1e5,this.radiusCurvatureCorrectionFactor=0,this.transform=X()}};function qh(r,e){const t=r.fragment;t.include(Fs),t.uniforms.add(new _t("nearFar",(i,s)=>s.camera.nearFar)),t.uniforms.add(new Nt("depthMap",(i,s)=>s.linearDepthTexture)),t.uniforms.add(new cr("proj",(i,s)=>s.ssr.camera.projectionMatrix)),t.uniforms.add(new H("invResolutionHeight",(i,s)=>1/s.ssr.camera.height)),t.uniforms.add(new cr("reprojectionMatrix",(i,s)=>s.ssr.reprojectionMatrix)),t.code.add(g`
  vec2 reprojectionCoordinate(vec3 projectionCoordinate)
  {
    vec4 zw = proj * vec4(0.0, 0.0, -projectionCoordinate.z, 1.0);
    vec4 reprojectedCoord = reprojectionMatrix * vec4(zw.w * (projectionCoordinate.xy * 2.0 - 1.0), zw.z, zw.w);
    reprojectedCoord.xy /= reprojectedCoord.w;
    return reprojectedCoord.xy * 0.5 + 0.5;
  }

  const int maxSteps = ${e.highStepCount?"150":"75"};

  vec4 applyProjectionMat(mat4 projectionMat, vec3 x)
  {
    vec4 projectedCoord =  projectionMat * vec4(x, 1.0);
    projectedCoord.xy /= projectedCoord.w;
    projectedCoord.xy = projectedCoord.xy*0.5 + 0.5;
    return projectedCoord;
  }

  vec3 screenSpaceIntersection(vec3 dir, vec3 startPosition, vec3 viewDir, vec3 normal)
  {
    vec3 viewPos = startPosition;
    vec3 viewPosEnd = startPosition;

    // Project the start position to the screen
    vec4 projectedCoordStart = applyProjectionMat(proj, viewPos);
    vec3  Q0 = viewPos / projectedCoordStart.w; // homogeneous camera space
    float k0 = 1.0/ projectedCoordStart.w;

    // advance the position in the direction of the reflection
    viewPos += dir;

    vec4 projectedCoordVanishingPoint = applyProjectionMat(proj, dir);

    // Project the advanced position to the screen
    vec4 projectedCoordEnd = applyProjectionMat(proj, viewPos);
    vec3  Q1 = viewPos / projectedCoordEnd.w; // homogeneous camera space
    float k1 = 1.0/ projectedCoordEnd.w;

    // calculate the reflection direction in the screen space
    vec2 projectedCoordDir = (projectedCoordEnd.xy - projectedCoordStart.xy);
    vec2 projectedCoordDistVanishingPoint = (projectedCoordVanishingPoint.xy - projectedCoordStart.xy);

    float yMod = min(abs(projectedCoordDistVanishingPoint.y), 1.0);

    float projectedCoordDirLength = length(projectedCoordDir);
    float maxSt = float(maxSteps);

    // normalize the projection direction depending on maximum steps
    // this determines how blocky the reflection looks
    vec2 dP = yMod * (projectedCoordDir)/(maxSt * projectedCoordDirLength);

    // Normalize the homogeneous camera space coordinates
    vec3  dQ = yMod * (Q1 - Q0)/(maxSt * projectedCoordDirLength);
    float dk = yMod * (k1 - k0)/(maxSt * projectedCoordDirLength);

    // initialize the variables for ray marching
    vec2 P = projectedCoordStart.xy;
    vec3 Q = Q0;
    float k = k0;
    float rayStartZ = -startPosition.z; // estimated ray start depth value
    float rayEndZ = -startPosition.z;   // estimated ray end depth value
    float prevEstimateZ = -startPosition.z;
    float rayDiffZ = 0.0;
    float dDepth;
    float depth;
    float rayDiffZOld = 0.0;

    // early outs
    if (dot(normal, dir) < 0.0 || dot(-viewDir, normal) < 0.0)
      return vec3(P, 0.0);

    for(int i = 0; i < maxSteps-1; i++)
    {
      depth = -linearDepthFromTexture(depthMap, P, nearFar); // get linear depth from the depth buffer

      // estimate depth of the marching ray
      rayStartZ = prevEstimateZ;
      dDepth = -rayStartZ - depth;
      rayEndZ = (dQ.z * 0.5 + Q.z)/ ((dk * 0.5 + k));
      rayDiffZ = rayEndZ- rayStartZ;
      prevEstimateZ = rayEndZ;

      if(-rayEndZ > nearFar[1] || -rayEndZ < nearFar[0] || P.y < 0.0  || P.y > 1.0 )
      {
        return vec3(P, 0.);
      }

      // If we detect a hit - return the intersection point, two conditions:
      //  - dDepth > 0.0 - sampled point depth is in front of estimated depth
      //  - if difference between dDepth and rayDiffZOld is not too large
      //  - if difference between dDepth and 0.025/abs(k) is not too large
      //  - if the sampled depth is not behind far plane or in front of near plane

      if((dDepth) < 0.025/abs(k) + abs(rayDiffZ) && dDepth > 0.0 && depth > nearFar[0] && depth < nearFar[1] && abs(P.y - projectedCoordStart.y) > invResolutionHeight)
      {
        return vec3(P, depth);
      }

      // continue with ray marching
      P += dP;
      Q.z += dQ.z;
      k += dk;
      rayDiffZOld = rayDiffZ;
    }
    return vec3(P, 0.0);
  }
  `)}let Xh=class{constructor(){this.reprojectionMatrix=X()}};class Zh{constructor(e,t,i){this.shadowMap=e,this.ssaoHelper=t,this.slicePlane=i,this.slot=j.OPAQUE_MATERIAL,this.hasOccludees=!1,this.enableFillLights=!0,this._inverseViewport=Y(),this.oldLighting=new zi,this.newLighting=new zi,this._fadedLighting=new zi,this._lighting=this.newLighting,this.ssr=new Xh,this.multipassTerrain=new Kn,this.multipassGeometry=new Wd,this.overlays=[],this.cloudsFade=new kh}get camera(){return this._camera}set camera(e){this._camera=this.ssr.camera=e,this._inverseViewport[0]=1/e.fullViewport[2],this._inverseViewport[1]=1/e.fullViewport[3]}get inverseViewport(){return this._inverseViewport}get lighting(){return this._lighting}get weatherFading(){return this._lighting===this._fadedLighting}fadeLighting(e){const{oldLighting:t,newLighting:i}=this;e>=1?this._lighting=i:(this._fadedLighting.lerpLighting(t,i,e),this._lighting=this._fadedLighting)}}let Jh=class{constructor(e,t,i,s=null){this.rctx=e,this.sliceHelper=s,this.lastFrameCamera=new Mi,this.output=w.Color,this.renderOccludedMask=Da,this.bindParameters=new Zh(t,i,C(s)?s.plane:null)}resetRenderOccludedMask(){this.renderOccludedMask=Da}};const Da=gt.Occlude|gt.OccludeAndTransparent|gt.OccludeAndTransparentStencil;var Ea;(function(r){r[r.Highlight=0]="Highlight",r[r.Default=1]="Default"})(Ea||(Ea={}));let Qr=class{constructor(){this.camera=new Mi,this.lightMat=X()}},Qh=class{constructor(e,t){this._rctx=e,this._viewingMode=t,this._enabled=!1,this._snapshots=new Array,this._textureSize=0,this._numCascades=1,this._maxNumCascades=4,this._splitSchemeLambda=0,this._warp=!0,this._cascadeDistances=[0,0,0,0,0],this._usedCascadeDistances=Qe(),this._cascades=[new Qr,new Qr,new Qr,new Qr],this._maxTextureSize=Math.min(vt("esri-mobile")?2048:8192,this._rctx.parameters.maxTextureSize)}get depthTexture(){return this._depthTexture}get textureSize(){return this._textureSize}get numCascades(){return this._numCascades}get cascadeDistances(){return Nr(this._usedCascadeDistances,this._cascadeDistances[0],this._numCascades>1?this._cascadeDistances[1]:1/0,this._numCascades>2?this._cascadeDistances[2]:1/0,this._numCascades>3?this._cascadeDistances[3]:1/0)}dispose(){this._discardDepthTexture(),this._discardAllSnapshots()}set maxCascades(e){this._maxNumCascades=tr(Math.floor(e),1,4)}get maxCascades(){return this._maxNumCascades}set enabled(e){this._enabled=e,e||(this._discardDepthTexture(),this._discardAllSnapshots())}get enabled(){return this._enabled}get ready(){return this._enabled&&C(this._depthTexture)}getSnapshot(e){return this.enabled?this._snapshots[e]:null}getCascades(){for(let e=0;e<this._numCascades;++e)es[e]=this._cascades[e];return es.length=this._numCascades,es}start(e,t,i){de(this.enabled),this._textureSize=this._computeTextureSize(e.fullWidth,e.fullHeight),this._ensureDepthTexture();const{near:s,far:n}=this._clampNearFar(i);this._computeCascadeDistances(n,s),this._setupMatrices(e,t);const a=e.viewMatrix,o=e.projectionMatrix;for(let l=0;l<this._numCascades;++l)this._constructCascade(l,o,a,t);this._lastOrigin=null,this.clear()}finish(e){de(this.enabled),this._rctx.bindFramebuffer(e)}getShadowMapMatrices(e){if(!this._lastOrigin||!Dr(e,this._lastOrigin)){this._lastOrigin=this._lastOrigin||I(),z(this._lastOrigin,e);for(let t=0;t<this._numCascades;++t){aa(Va,this._cascades[t].lightMat,e);for(let i=0;i<16;++i)Ha[16*t+i]=Va[i]}}return Ha}takeCascadeSnapshotTo(e,t){de(this.enabled);const i=this._ensureSnapshot(t);this._bindFbo();const s=this._rctx,n=s.bindTexture(i,Yt.TEXTURE_UNIT_FOR_UPDATES);s.gl.copyTexSubImage2D($r.TEXTURE_2D,0,e.camera.viewport[0],e.camera.viewport[1],e.camera.viewport[0],e.camera.viewport[1],e.camera.viewport[2],e.camera.viewport[3]),s.bindTexture(n,Yt.TEXTURE_UNIT_FOR_UPDATES)}clear(){const e=this._rctx;this._bindFbo(),e.setClearColor(1,1,1,1),e.clearSafe(pi.COLOR_BUFFER_BIT|pi.DEPTH_BUFFER_BIT)}_computeTextureSize(e,t){const i=.5*Math.log(e*e+t*t)*Math.LOG2E,s=.35,n=2**Math.round(i+s);return Math.min(this._maxTextureSize,2*n)}_ensureDepthTexture(){if(C(this._depthTexture)&&this._depthTexture.descriptor.width===this._textureSize)return;this._discardDepthTexture();const e={target:$r.TEXTURE_2D,pixelFormat:ur.RGBA,dataType:Lr.UNSIGNED_BYTE,wrapMode:pr.CLAMP_TO_EDGE,samplingMode:ui.NEAREST,flipped:!0,width:this._textureSize,height:this._textureSize};this._depthTexture=new Yt(this._rctx,e),this._fbo=new Mo(this._rctx,{colorTarget:Ao.TEXTURE,depthStencilTarget:Ro.DEPTH_RENDER_BUFFER,width:this._textureSize,height:this._textureSize},this._depthTexture)}_ensureSnapshot(e){let t=this._snapshots[e];if(C(t)&&t.descriptor.width===this._textureSize)return t;this._discardSnapshot(e);const i={target:$r.TEXTURE_2D,pixelFormat:ur.RGBA,dataType:Lr.UNSIGNED_BYTE,wrapMode:pr.CLAMP_TO_EDGE,samplingMode:ui.NEAREST,flipped:!0,width:this._textureSize,height:this._textureSize};return t=new Yt(this._rctx,i),this._snapshots[e]=t,t}_discardDepthTexture(){this._fbo=Le(this._fbo),this._depthTexture=Le(this._depthTexture)}_discardSnapshot(e){this._snapshots[e]=Le(this._snapshots[e])}_discardAllSnapshots(){for(let e=0;e<this._snapshots.length;++e)this._discardSnapshot(e);this._snapshots.length=0}_bindFbo(){const e=this._rctx;e.unbindTexture(this._depthTexture),e.bindFramebuffer(this._fbo)}_constructCascade(e,t,i,s){const n=this._cascades[e],a=-this._cascadeDistances[e],o=-this._cascadeDistances[e+1],l=(t[10]*a+t[14])/Math.abs(t[11]*a+t[15]),c=(t[10]*o+t[14])/Math.abs(t[11]*o+t[15]);de(l<c);for(let h=0;h<8;++h){Nr(La,h%4==0||h%4==3?-1:1,h%4==0||h%4==1?-1:1,h<4?l:c,1),Qt(Ce[h],La,Ma);for(let f=0;f<3;++f)Ce[h][f]/=Ce[h][3]}gn(Ki,Ce[0]),aa(Ia,Ua,Ki),n.camera.viewMatrix=Ia;for(let h=0;h<8;++h)q(Ce[h],Ce[h],n.camera.viewMatrix);z(Be,Ce[0]),z(We,Ce[0]);for(let h=1;h<8;++h)for(let f=0;f<3;++f)Be[f]=Math.min(Be[f],Ce[h][f]),We[f]=Math.max(We[f],Ce[h][f]);Be[2]-=200,We[2]+=200,n.camera.near=-We[2],n.camera.far=-Be[2],this._warp?this._constructTrapezoidalProjection(i,s,n):this._constructOrthogonalProjection(n),Mt(n.lightMat,n.camera.projectionMatrix,n.camera.viewMatrix);const d=this._textureSize/2;n.camera.viewport[0]=e%2==0?0:d,n.camera.viewport[1]=Math.floor(e/2)===0?0:d,n.camera.viewport[2]=d,n.camera.viewport[3]=d}_constructOrthogonalProjection(e){Co(e.camera.projectionMatrix,Be[0],We[0],Be[1],We[1],e.camera.near,e.camera.far)}_constructTrapezoidalProjection(e,t,i){const s=1/Ce[0][3],n=1/Ce[4][3];de(s<n);let a=s+Math.sqrt(s*n);const o=Math.sin(Nl(e[2]*t[0]+e[6]*t[1]+e[10]*t[2]));a/=o,Kh(Ce,a,o,Na,Fa,Yh,za,ja),eu(Na,Fa,za,ja,i.camera.projectionMatrix),i.camera.projectionMatrix[10]=2/(Be[2]-We[2]),i.camera.projectionMatrix[14]=-(Be[2]+We[2])/(Be[2]-We[2])}_setupMatrices(e,t){Mt($a,e.projectionMatrix,e.viewMatrix),rr(Ma,$a);const i=this._viewingMode===St.Global?e.eye:U(Ki,0,0,1);Oo(Ua,[0,0,0],[-t[0],-t[1],-t[2]],i)}_clampNearFar(e){let{near:t,far:i}=e;return t<2&&(t=2),i<2&&(i=2),t>=i&&(t=2,i=4),{near:t,far:i}}_computeCascadeDistances(e,t){this._numCascades=Math.min(1+Math.floor(Tl(e/t,4)),this._maxNumCascades);const i=(e-t)/this._numCascades,s=(e/t)**(1/this._numCascades);let n=t,a=t;for(let o=0;o<this._numCascades+1;++o)this._cascadeDistances[o]=It(n,a,this._splitSchemeLambda),n*=s,a+=i}get gpuMemoryUsage(){var e;return this._snapshots.reduce((t,i)=>t+wc(i),((e=this._fbo)==null?void 0:e.gpuMemoryUsage)??0)}get test(){const e=this;return{maxNumCascades:this._maxNumCascades,cascades:this._cascades,textureSize:this._textureSize,set splitSchemeLambda(t){e._splitSchemeLambda=t},get splitSchemeLambda(){return e._splitSchemeLambda},set warp(t){e._warp=t},get warp(){return e._warp}}}};const Ia=X(),$a=X(),Ma=X(),La=Qe(),Ce=[];for(let r=0;r<8;++r)Ce.push(Qe());const Be=I(),We=I(),Na=Y(),Fa=Y(),Yh=Y(),za=Y(),ja=Y(),Ua=X(),Ki=I(),es=[],Va=X(),Ha=new Float32Array(64),Pe=Y(),Bt=Y(),Rt=[Y(),Y(),Y(),Y()],te=Y(),ts=Y(),ct=Y(),br=Y(),Wt=Y(),kt=Y(),Yr=Y();function Kh(r,e,t,i,s,n,a,o){Lt(Pe,0,0);for(let b=0;b<4;++b)Ot(Pe,Pe,r[b]);qt(Pe,Pe,.25),Lt(Bt,0,0);for(let b=4;b<8;++b)Ot(Bt,Bt,r[b]);qt(Bt,Bt,.25),Tr(Rt[0],r[4],r[5],.5),Tr(Rt[1],r[5],r[6],.5),Tr(Rt[2],r[6],r[7],.5),Tr(Rt[3],r[7],r[4],.5);let l=0,c=oa(Rt[0],Pe);for(let b=1;b<4;++b){const A=oa(Rt[b],Pe);A<c&&(c=A,l=b)}Xt(te,Rt[l],r[l+4]);const d=te[0];let h,f;te[0]=-te[1],te[1]=d,Xt(ts,Bt,Pe),ge(ts,te)<0&&Wl(te,te),Tr(te,te,ts,t),na(te,te),h=f=ge(Xt(ct,r[0],Pe),te);for(let b=1;b<8;++b){const A=ge(Xt(ct,r[b],Pe),te);A<h?h=A:A>f&&(f=A)}Sr(i,Pe),qt(ct,te,h-e),Ot(i,i,ct);let p=-1,m=1,_=0,T=0;for(let b=0;b<8;++b){Xt(br,r[b],i),na(br,br);const A=te[0]*br[1]-te[1]*br[0];A>0?A>p&&(p=A,_=b):A<m&&(m=A,T=b)}Ut(p>0,"leftArea"),Ut(m<0,"rightArea"),qt(Wt,te,h),Ot(Wt,Wt,Pe),qt(kt,te,f),Ot(kt,kt,Pe),Yr[0]=-te[1],Yr[1]=te[0];const y=kr(i,r[T],kt,Ot(ct,kt,Yr),1,s),x=kr(i,r[_],kt,ct,1,n),O=kr(i,r[_],Wt,Ot(ct,Wt,Yr),1,a),R=kr(i,r[T],Wt,ct,1,o);Ut(y,"rayRay"),Ut(x,"rayRay"),Ut(O,"rayRay"),Ut(R,"rayRay")}function N(r,e){return 3*e+r}const Ga=Y();function Te(r,e){return Lt(Ga,r[e],r[e+3]),Ga}const we=Y(),P=$s();function eu(r,e,t,i,s){Xt(we,t,i),qt(we,we,.5),P[0]=we[0],P[1]=we[1],P[2]=0,P[3]=we[1],P[4]=-we[0],P[5]=0,P[6]=we[0]*we[0]+we[1]*we[1],P[7]=we[0]*we[1]-we[1]*we[0],P[8]=1,P[N(0,2)]=-ge(Te(P,0),r),P[N(1,2)]=-ge(Te(P,1),r);let n=ge(Te(P,0),t)+P[N(0,2)],a=ge(Te(P,1),t)+P[N(1,2)],o=ge(Te(P,0),i)+P[N(0,2)],l=ge(Te(P,1),i)+P[N(1,2)];n=-(n+o)/(a+l),P[N(0,0)]+=P[N(1,0)]*n,P[N(0,1)]+=P[N(1,1)]*n,P[N(0,2)]+=P[N(1,2)]*n,n=1/(ge(Te(P,0),t)+P[N(0,2)]),a=1/(ge(Te(P,1),t)+P[N(1,2)]),P[N(0,0)]*=n,P[N(0,1)]*=n,P[N(0,2)]*=n,P[N(1,0)]*=a,P[N(1,1)]*=a,P[N(1,2)]*=a,P[N(2,0)]=P[N(1,0)],P[N(2,1)]=P[N(1,1)],P[N(2,2)]=P[N(1,2)],P[N(1,2)]+=1,n=ge(Te(P,1),e)+P[N(1,2)],a=ge(Te(P,2),e)+P[N(2,2)],o=ge(Te(P,1),t)+P[N(1,2)],l=ge(Te(P,2),t)+P[N(2,2)],n=-.5*(n/a+o/l),P[N(1,0)]+=P[N(2,0)]*n,P[N(1,1)]+=P[N(2,1)]*n,P[N(1,2)]+=P[N(2,2)]*n,n=ge(Te(P,1),e)+P[N(1,2)],a=ge(Te(P,2),e)+P[N(2,2)],o=-a/n,P[N(1,0)]*=o,P[N(1,1)]*=o,P[N(1,2)]*=o,s[0]=P[0],s[1]=P[1],s[2]=0,s[3]=P[2],s[4]=P[3],s[5]=P[4],s[6]=0,s[7]=P[5],s[8]=0,s[9]=0,s[10]=1,s[11]=0,s[12]=P[6],s[13]=P[7],s[14]=0,s[15]=P[8]}let tu=class{constructor(){this.adds=new Ee,this.removes=new Ee,this.updates=new Ee({allocator:e=>e||new ru,deallocator:e=>(e.renderGeometry=null,e)})}clear(){this.adds.clear(),this.removes.clear(),this.updates.clear()}prune(){this.adds.prune(),this.removes.prune(),this.updates.prune()}},ru=class{},iu=class{constructor(){this.adds=new Array,this.removes=new Array,this.updates=new Array}};var xt,zt;(function(r){r[r.OBJECT=0]="OBJECT",r[r.HUD=1]="HUD",r[r.TERRAIN=2]="TERRAIN",r[r.OVERLAY=3]="OVERLAY",r[r.I3S=4]="I3S",r[r.PCL=5]="PCL",r[r.LOD=6]="LOD",r[r.VOXEL=7]="VOXEL"})(xt||(xt={}));let su=class{constructor(){this.verticalOffset=0,this.selectionMode=!1,this.hud=!0,this.selectOpaqueTerrainOnly=!0,this.invisibleTerrain=!1,this.backfacesTerrain=!0,this.isFiltered=!1,this.store=zt.ALL}};(function(r){r[r.MIN=0]="MIN",r[r.MINMAX=1]="MINMAX",r[r.ALL=2]="ALL"})(zt||(zt={}));function au(r){return C(r)&&C(r.dist)}const Ba=1e-5;let ou=class{constructor(e){this.options=new su,this._results=new nu,this.transform=new el,this.tolerance=Ba,this.verticalOffset=null,this._ray=ht(),this._rayEnd=I(),this._rayBeginTransformed=I(),this._rayEndTransformed=I(),this.viewingMode=e??St.Global}get results(){return this._results}get ray(){return this._ray}get rayBegin(){return this._ray.origin}get rayEnd(){return this._rayEnd}reset(e,t,i){this.resetWithRay(bn(e,t,this._ray),i)}resetWithRay(e,t){this.camera=t,e!==this._ray&&cs(e,this._ray),this.options.verticalOffset!==0?this.viewingMode===St.Local?this._ray.origin[2]-=this.options.verticalOffset:this.verticalOffset=this.options.verticalOffset:this.verticalOffset=null,ee(this._rayEnd,this._ray.origin,this._ray.direction),this._results.init(this._ray)}intersect(e=null,t,i,s,n){this.point=t,this.filterPredicate=s,this.tolerance=i??Ba;const a=ra(this.verticalOffset);if(C(e)&&e.length>0){const o=n?l=>{n(l)&&this.intersectObject(l)}:l=>{this.intersectObject(l)};for(const l of e){const c=l.getSpatialQueryAccelerator&&l.getSpatialQueryAccelerator();C(c)?(C(a)?c.forEachAlongRayWithVerticalOffset(this._ray.origin,this._ray.direction,o,a):c.forEachAlongRay(this._ray.origin,this._ray.direction,o),this.options.selectionMode&&this.options.hud&&c.forEachDegenerateObject(o)):l.objects.forAll(d=>o(d))}}this.sortResults()}intersectObject(e){const t=e.geometryRecords;if(!t)return;const i=e.transformation,s=ra(this.verticalOffset);for(const n of t){const{geometry:a,material:o,instanceParameters:l}=n;if(Ri(l))continue;const c=a.id;this.transform.setAndInvalidateLazyTransforms(i,n.getShaderTransformation()),q(this._rayBeginTransformed,this.rayBegin,this.transform.inverse),q(this._rayEndTransformed,this.rayEnd,this.transform.inverse);const d=this.transform.transform;C(s)&&(s.objectTransform=this.transform),o.intersect(a,l,this.transform.transform,this,this._rayBeginTransformed,this._rayEndTransformed,(h,f,p,m,_,T)=>{if(h>=0){if(C(this.filterPredicate)&&!this.filterPredicate(this._ray.origin,this._rayEnd,h))return;const y=m?this._results.hud:this._results,x=m?O=>{const R={object:e,geometryId:c,triangleNr:p,center:C(T)?[T[0],T[1],T[2]]:null};O.set(xt.HUD,R,h,f,dr,_)}:O=>O.set(xt.OBJECT,{object:e,geometryId:c,triangleNr:p},h,f,d,_);if((y.min.drapedLayerOrder==null||_>=y.min.drapedLayerOrder)&&(y.min.dist==null||h<y.min.dist)&&x(y.min),this.options.store!==zt.MIN&&(y.max.drapedLayerOrder==null||_<y.max.drapedLayerOrder)&&(y.max.dist==null||h>y.max.dist)&&x(y.max),this.options.store===zt.ALL)if(m){const O=new ws(this._ray);x(O),this._results.hud.all.push(O)}else{const O=new or(this._ray);x(O),this._results.all.push(O)}}},n.shaderTransformation)}}sortResults(e=this._results.all){e.sort((t,i)=>t.dist!==i.dist?k(t.dist,0)-k(i.dist,0):t.drapedLayerOrder!==i.drapedLayerOrder?k(t.drapedLayerOrder,Number.MAX_VALUE)-k(i.drapedLayerOrder,Number.MAX_VALUE):k(i.drapedLayerGraphicOrder,Number.MIN_VALUE)-k(t.drapedLayerGraphicOrder,Number.MIN_VALUE))}};function Vm(r){return new ou(r)}let nu=class{constructor(){this.min=new or(ht()),this.max=new or(ht()),this.hud={min:new ws(ht()),max:new ws(ht()),all:new Array},this.ground=new or(ht()),this.all=[]}init(e){this.min.init(e),this.max.init(e),this.ground.init(e),this.all.length=0,this.hud.min.init(e),this.hud.max.init(e),this.hud.all.length=0}};class or{constructor(e){this.intersector=xt.OBJECT,this.normal=I(),this.transformation=X(),this._ray=ht(),this.init(e)}get ray(){return this._ray}get distanceInRenderSpace(){return C(this.dist)?(W(Kr,this.ray.direction,this.dist),rt(Kr)):null}getIntersectionPoint(e){return!!au(this)&&(W(Kr,this.ray.direction,this.dist),ee(e,this.ray.origin,Kr),!0)}getTransformedNormal(e){return z(Ar,this.normal),Ar[3]=0,Qt(Ar,Ar,this.transformation),z(e,Ar),oe(e,e)}init(e){this.dist=null,this.target=null,this.drapedLayerOrder=null,this.drapedLayerGraphicOrder=null,this.intersector=xt.OBJECT,cs(e,this._ray)}set(e,t,i,s,n,a,o){this.intersector=e,this.dist=i,z(this.normal,k(s,yn)),qe(this.transformation,k(n,dr)),this.target=t,this.drapedLayerOrder=a,this.drapedLayerGraphicOrder=o}copy(e){cs(e.ray,this._ray),this.intersector=e.intersector,this.dist=e.dist,this.target=e.target,this.drapedLayerOrder=e.drapedLayerOrder,this.drapedLayerGraphicOrder=e.drapedLayerGraphicOrder,z(this.normal,e.normal),qe(this.transformation,e.transformation)}}let ws=class extends or{constructor(){super(...arguments),this.intersector=xt.HUD}};function lu(r){return new or(r)}const Kr=I(),Ar=Qe();function cu(r){const e=new Map,t=i=>{let s=e.get(i);return s||(s=new iu,e.set(i,s)),s};return r.removes.forAll(i=>{rs(i)&&t(i.material).removes.push(i)}),r.adds.forAll(i=>{rs(i)&&t(i.material).adds.push(i)}),r.updates.forAll(i=>{rs(i.renderGeometry)&&t(i.renderGeometry.material).updates.push(i)}),e}function rs(r){return r.data.indexCount>=1}let du=class{constructor(e,t){this._material=e,this._repository=t,this._map=new Map}destroy(){this._map.forEach((e,t)=>{C(e)&&this._repository.release(this._material,t)})}load(e,t,i){if(!this._material.requiresSlot(t,i))return null;this._map.has(i)||this._map.set(i,this._repository.acquire(this._material,t,i));const s=this._map.get(i);if(C(s)){if(s.ensureResources(e)===Dn.LOADED)return s;this._repository.requestRender()}return null}},hu=class extends tl{constructor(e=I()){super(),this.origin=e,this.slicePlaneLocalOrigin=this.origin}},uu=class{constructor(){this.enabled=!0,this._time=ac(0)}get time(){return this._time}advance(e){return this._time!==e.time&&(this._time=e.time,!0)}};function pu(r){r.fragment.code.add(g`float normals2FoamIntensity(vec3 n, float waveStrength){
float normalizationFactor =  max(0.015, waveStrength);
return max((n.x + n.y)*0.3303545/normalizationFactor + 0.3303545, 0.0);
}`)}function fu(r){r.fragment.code.add(g`vec3 foamIntensity2FoamColor(float foamIntensityExternal, float foamPixelIntensity, vec3 skyZenitColor, float dayMod){
return foamIntensityExternal * (0.075 * skyZenitColor * pow(foamPixelIntensity, 4.) +  50.* pow(foamPixelIntensity, 23.0)) * dayMod;
}`)}function Wa(r){r.fragment.uniforms.add(new Nt("texWaveNormal",e=>e.waveNormal)),r.fragment.uniforms.add(new Nt("texWavePerturbation",e=>e.wavePertubation)),r.fragment.uniforms.add([new Ae("waveParams",e=>Nr(mu,e.waveStrength,e.waveTextureRepeat,e.flowStrength,e.flowOffset)),new _t("waveDirection",e=>Lt(gu,e.waveDirection[0]*e.waveVelocity,e.waveDirection[1]*e.waveVelocity))]),r.include(pu),r.fragment.code.add(g`const vec2  FLOW_JUMP = vec2(6.0/25.0, 5.0/24.0);
vec2 textureDenormalized2D(sampler2D _tex, vec2 _uv) {
return 2.0 * texture2D(_tex, _uv).rg - 1.0;
}
float sampleNoiseTexture(vec2 _uv) {
return texture2D(texWavePerturbation, _uv).b;
}
vec3 textureDenormalized3D(sampler2D _tex, vec2 _uv) {
return 2.0 * texture2D(_tex, _uv).rgb - 1.0;
}
float computeProgress(vec2 uv, float time) {
return fract(time);
}
float computeWeight(vec2 uv, float time) {
float progress = computeProgress(uv, time);
return 1.0 - abs(1.0 - 2.0 * progress);
}
vec3 computeUVPerturbedWeigth(sampler2D texFlow, vec2 uv, float time, float phaseOffset) {
float flowStrength = waveParams[2];
float flowOffset = waveParams[3];
vec2 flowVector = textureDenormalized2D(texFlow, uv) * flowStrength;
float progress = computeProgress(uv, time + phaseOffset);
float weight = computeWeight(uv, time + phaseOffset);
vec2 result = uv;
result -= flowVector * (progress + flowOffset);
result += phaseOffset;
result += (time - progress) * FLOW_JUMP;
return vec3(result, weight);
}
const float TIME_NOISE_TEXTURE_REPEAT = 0.3737;
const float TIME_NOISE_STRENGTH = 7.77;
vec3 getWaveLayer(sampler2D _texNormal, sampler2D _dudv, vec2 _uv, vec2 _waveDir, float time) {
float waveStrength = waveParams[0];
vec2 waveMovement = time * -_waveDir;
float timeNoise = sampleNoiseTexture(_uv * TIME_NOISE_TEXTURE_REPEAT) * TIME_NOISE_STRENGTH;
vec3 uv_A = computeUVPerturbedWeigth(_dudv, _uv + waveMovement, time + timeNoise, 0.0);
vec3 uv_B = computeUVPerturbedWeigth(_dudv, _uv + waveMovement, time + timeNoise, 0.5);
vec3 normal_A = textureDenormalized3D(_texNormal, uv_A.xy) * uv_A.z;
vec3 normal_B = textureDenormalized3D(_texNormal, uv_B.xy) * uv_B.z;
vec3 mixNormal = normalize(normal_A + normal_B);
mixNormal.xy *= waveStrength;
mixNormal.z = sqrt(1.0 - dot(mixNormal.xy, mixNormal.xy));
return mixNormal;
}
vec4 getSurfaceNormalAndFoam(vec2 _uv, float _time) {
float waveTextureRepeat = waveParams[1];
vec3 normal = getWaveLayer(texWaveNormal, texWavePerturbation, _uv * waveTextureRepeat, waveDirection, _time);
float foam  = normals2FoamIntensity(normal, waveParams[0]);
return vec4(normal, foam);
}`)}const mu=Qe(),gu=Y();function ka(r,e){e.spherical?r.vertex.code.add(g`vec3 getLocalUp(in vec3 pos, in vec3 origin) {
return normalize(pos + origin);
}`):r.vertex.code.add(g`vec3 getLocalUp(in vec3 pos, in vec3 origin) {
return vec3(0.0, 0.0, 1.0);
}`),e.spherical?r.vertex.code.add(g`mat3 getTBNMatrix(in vec3 n) {
vec3 t = normalize(cross(vec3(0.0, 0.0, 1.0), n));
vec3 b = normalize(cross(n, t));
return mat3(t, b, n);
}`):r.vertex.code.add(g`mat3 getTBNMatrix(in vec3 n) {
vec3 t = vec3(1.0, 0.0, 0.0);
vec3 b = normalize(cross(n, t));
return mat3(t, b, n);
}`)}function vu(r){r.fragment.code.add(g`const float GAMMA = 2.2;
const float INV_GAMMA = 0.4545454545;
vec4 delinearizeGamma(vec4 color) {
return vec4(pow(color.rgb, vec3(INV_GAMMA)), color.w);
}
vec3 linearizeGamma(vec3 color) {
return pow(color, vec3(GAMMA));
}`)}let _u=class extends tc{constructor(e,t){super(e,"samplerCube",rc.Pass,(i,s,n)=>i.bindTexture(e,t(s,n)))}};function yu(r){const e=r.fragment;e.uniforms.add([new cr("rotationMatrixClouds",(t,i)=>i.cloudsFade.parallax.transform),new cr("rotationMatrixCloudsCrossFade",(t,i)=>i.cloudsFade.parallaxNew.transform),new Jt("anchorPosition",(t,i)=>i.cloudsFade.parallax.anchorPointClouds),new Jt("anchorPositionCrossFade",(t,i)=>i.cloudsFade.parallaxNew.anchorPointClouds),new H("cloudsHeight",(t,i)=>i.cloudsFade.parallax.cloudsHeight),new H("radiusCurvatureCorrectionFactor",(t,i)=>i.cloudsFade.parallax.radiusCurvatureCorrectionFactor),new H("totalFadeInOut",(t,i)=>i.cloudsFade.fadeInOut.stage===ar.FINISHED?i.cloudsFade.fadeInOutHeight.factor+1-i.cloudsFade.fadeIn.factor:i.cloudsFade.fadeInOutHeight.factor+1-i.cloudsFade.fadeInOut.factor),new H("crossFadeAnchorFactor",(t,i)=>tr(i.cloudsFade.crossFade.factor,0,1)),new _u("cubeMap",(t,i)=>C(i.cloudsFade.data)&&C(i.cloudsFade.data.cubeMap)?i.cloudsFade.data.cubeMap.colorTexture:null),new ji("crossFade",(t,i)=>i.cloudsFade.crossFade.enabled),new ji("readChannelsRG",(t,i)=>i.cloudsFade.readChannels===xi.RG),new ji("fadeTextureChannels",(t,i)=>i.cloudsFade.renderingStage===zr.FADING_TEXTURE_CHANNELS)]),e.constants.add("planetRadius","float",Ec.radius),e.code.add(g`vec3 intersectWithCloudLayer(vec3 dir, vec3 cameraPosition, vec3 spherePos)
{
float radiusClouds = planetRadius + cloudsHeight;
float B = 2.0 * dot(cameraPosition, dir);
float C = dot(cameraPosition, cameraPosition) - radiusClouds * radiusClouds;
float det = B * B - 4.0 * C;
float pointIntDist = max(0.0, 0.5 *(-B + sqrt(det)));
vec3 intersectionPont = cameraPosition + dir * pointIntDist;
intersectionPont =  intersectionPont - spherePos;
return intersectionPont;
}`),e.code.add(g`vec3 correctForPlanetCurvature(vec3 dir)
{
dir.z = dir.z*(1.-radiusCurvatureCorrectionFactor) + radiusCurvatureCorrectionFactor;
return dir;
}`),e.code.add(g`vec3 rotateDirectionToAnchorPoint(mat4 rotMat, vec3 inVec)
{
return (rotMat * vec4(inVec, 0.0)).xyz;
}`),yo(e),So(e),e.code.add(g`const float SUNSET_TRANSITION_FACTOR = 0.3;
const vec3 RIM_COLOR = vec3(0.28, 0.175, 0.035);
const float RIM_SCATTERING_FACTOR = 140.0;
const float BACKLIGHT_FACTOR = 0.2;
const float BACKLIGHT_SCATTERING_FACTOR = 10.0;
const float BACKLIGHT_TRANSITION_FACTOR = 0.3;
vec3 calculateCloudColor(vec3 cameraPosition, vec3 worldSpaceRay, vec4 clouds)
{
float upDotLight = dot(normalize(cameraPosition), normalize(mainLightDirection));
float dirDotLight = max(dot(normalize(-worldSpaceRay), normalize(mainLightDirection)), 0.0);
float sunsetTransition = clamp(pow(max(upDotLight, 0.0), SUNSET_TRANSITION_FACTOR), 0.0, 1.0);
vec3 ambientLight = calculateAmbientIrradiance(normalize(cameraPosition),  0.0);
vec3 mainLight = evaluateMainLighting(normalize(cameraPosition),  0.0);
vec3 combinedLight = clamp((mainLightIntensity + ambientLight )/PI, vec3(0.0), vec3(1.0));
vec3 baseCloudColor = pow(combinedLight * pow(clouds.xyz, vec3(GAMMA)), vec3(INV_GAMMA));
float scatteringMod = max(clouds.a < 0.5 ? clouds.a / 0.5 : - clouds.a / 0.5 + 2.0, 0.0);
float rimLightIntensity = 0.5 + 0.5 *pow(max(upDotLight, 0.0), 0.35);
vec3 directSunScattering = RIM_COLOR * rimLightIntensity * (pow(dirDotLight, RIM_SCATTERING_FACTOR)) * scatteringMod;
float additionalLight = BACKLIGHT_FACTOR * pow(dirDotLight, BACKLIGHT_SCATTERING_FACTOR) * (1. - pow(sunsetTransition, BACKLIGHT_TRANSITION_FACTOR)) ;
return vec3(baseCloudColor * (1. + additionalLight) + directSunScattering);
}`),e.code.add(g`vec4 getCloudData(vec3 rayDir, bool readOtherChannel)
{
vec4 cloudData = textureCube(cubeMap, rayDir);
float mu = dot(rayDir, vec3(0, 0, 1));
bool readChannels = readChannelsRG ^^ readOtherChannel;
if (readChannels) {
cloudData = vec4(vec3(cloudData.r), cloudData.g);
} else {
cloudData = vec4(vec3(cloudData.b), cloudData.a);
}
if (length(cloudData) == 0.0) {
return vec4(cloudData.rgb, 1.0);
}
return cloudData;
}`),e.code.add(g`vec4 renderCloudsNoFade(vec3 worldRay, vec3 cameraPosition)
{
vec3 intersectionPoint = intersectWithCloudLayer(normalize(worldRay), cameraPosition, anchorPosition);
vec3 worldRayRotated = rotateDirectionToAnchorPoint(rotationMatrixClouds, normalize(intersectionPoint));
vec3 worldRayRotatedCorrected = correctForPlanetCurvature(worldRayRotated);
vec4 cloudData = getCloudData(worldRayRotatedCorrected, false);
float totalTransmittance = clamp(cloudData.a * (1.0 - totalFadeInOut) + totalFadeInOut, 0.0 , 1.0);
if (length(cloudData.rgb) == 0.0) {
totalTransmittance = 1.0;
}
return vec4(calculateCloudColor(cameraPosition, normalize(-worldRay), cloudData), totalTransmittance);
}`),e.code.add(g`vec4 renderCloudsCrossFade(vec3 worldRay, vec3 cameraPosition)
{
vec3 intersectionPoint = intersectWithCloudLayer(normalize(worldRay), cameraPosition, anchorPosition);
vec3 worldRayRotated = rotateDirectionToAnchorPoint(rotationMatrixClouds, normalize(intersectionPoint));
vec3 worldRayRotatedCorrected = correctForPlanetCurvature(worldRayRotated);
vec4 cloudData = getCloudData(worldRayRotatedCorrected, false);
vec4 cloudColor = vec4(calculateCloudColor(cameraPosition, normalize(-worldRay), cloudData), cloudData.a);
intersectionPoint = intersectWithCloudLayer(normalize(worldRay), cameraPosition, anchorPositionCrossFade);
worldRayRotated = rotateDirectionToAnchorPoint(rotationMatrixCloudsCrossFade, normalize(intersectionPoint));
worldRayRotatedCorrected = correctForPlanetCurvature(worldRayRotated);
cloudData = getCloudData(worldRayRotatedCorrected, fadeTextureChannels);
vec4 cloudColorCrossFade = vec4(calculateCloudColor(cameraPosition, normalize(-worldRay), cloudData), cloudData.a);
cloudColor = mix(cloudColor, cloudColorCrossFade, crossFadeAnchorFactor);
float totalTransmittance = clamp(cloudColor.a * (1.0 - totalFadeInOut) + totalFadeInOut, 0.0 , 1.0);
if (length(cloudColor.rgb) == 0.0) {
totalTransmittance = 1.0;
}
return vec4(cloudColor.rgb, totalTransmittance);
}`),e.code.add(g`vec4 renderClouds(vec3 worldRay, vec3 cameraPosition)
{
return crossFade ? renderCloudsCrossFade(worldRay, cameraPosition) : renderCloudsNoFade(worldRay, cameraPosition);
}`)}function Su(r,e){r.include(rl,e),r.include(vu),r.include(fu),e.hasCloudsReflections&&r.include(yu,e),e.hasScreenSpaceReflections&&r.include(qh,e);const t=r.fragment;t.constants.add("fresnelSky","vec3",[.02,1,15]).add("fresnelMaterial","vec2",[.02,.1]).add("roughness","float",.015).add("foamIntensityExternal","float",1.7).add("ssrIntensity","float",.65).add("ssrHeightFadeStart","float",3e5).add("ssrHeightFadeEnd","float",5e5).add("waterDiffusion","float",.92).add("waterSeaColorMod","float",.8).add("correctionViewingPowerFactor","float",.4).add("skyZenitColor","vec3",[.52,.68,.9]).add("skyColor","vec3",[.67,.79,.9]).add("cloudFresnelModifier","vec2",[1.2,.01]),t.code.add(g`PBRShadingWater shadingInfo;
vec3 getSkyGradientColor(in float cosTheta, in vec3 horizon, in vec3 zenit) {
float exponent = pow((1.0 - cosTheta), fresnelSky[2]);
return mix(zenit, horizon, exponent);
}`),t.uniforms.add([new H("lightingSpecularStrength",(i,s)=>s.lighting.mainLight.specularStrength),new H("lightingEnvironmentStrength",(i,s)=>s.lighting.mainLight.environmentStrength)]),t.code.add(g`vec3 getSeaColor(in vec3 n, in vec3 v, in vec3 l, vec3 color, in vec3 lightIntensity, in vec3 localUp, in float shadow, float foamIntensity, vec3 viewPosition, vec3 position) {
float reflectionHit = 0.0;
float reflectionHitDiffused = 0.0;
vec3 seaWaterColor = linearizeGamma(color);
vec3 h = normalize(l + v);
shadingInfo.NdotL = clamp(dot(n, l), 0.0, 1.0);
shadingInfo.NdotV = clamp(dot(n, v), 0.001, 1.0);
shadingInfo.VdotN = clamp(dot(v, n), 0.001, 1.0);
shadingInfo.NdotH = clamp(dot(n, h), 0.0, 1.0);
shadingInfo.VdotH = clamp(dot(v, h), 0.0, 1.0);
shadingInfo.LdotH = clamp(dot(l, h), 0.0, 1.0);
float upDotV = max(dot(localUp,v), 0.0);
vec3 skyHorizon = linearizeGamma(skyColor);
vec3 skyZenit = linearizeGamma(skyZenitColor);
vec3 skyColor = getSkyGradientColor(upDotV, skyHorizon, skyZenit );
float upDotL = max(dot(localUp,l),0.0);
float daytimeMod = 0.1 + upDotL * 0.9;
skyColor *= daytimeMod;
float shadowModifier = clamp(shadow, 0.8, 1.0);
vec3 fresnelModifier = fresnelReflection(shadingInfo.VdotN, vec3(fresnelSky[0]), fresnelSky[1]);
vec3 reflSky = lightingEnvironmentStrength * fresnelModifier * skyColor * shadowModifier;
vec3 reflSea = seaWaterColor * mix(skyColor, upDotL * lightIntensity * LIGHT_NORMALIZATION, 2.0 / 3.0) * shadowModifier;
vec3 specular = vec3(0.0);
if(upDotV > 0.0 && upDotL > 0.0) {
vec3 specularSun = brdfSpecularWater(shadingInfo, roughness, vec3(fresnelMaterial[0]), fresnelMaterial[1]);
vec3 incidentLight = lightIntensity * LIGHT_NORMALIZATION * shadow;
specular = lightingSpecularStrength * shadingInfo.NdotL * incidentLight * specularSun;
}
vec3 foam = vec3(0.0);
if(upDotV > 0.0) {
foam = foamIntensity2FoamColor(foamIntensityExternal, foamIntensity, skyZenitColor, daytimeMod);
}
float correctionViewingFactor = pow(max(dot(v, localUp), 0.0), correctionViewingPowerFactor);
vec3 normalCorrectedClouds = mix(localUp, n, correctionViewingFactor);
vec3 reflectedWorld = normalize(reflect(-v, normalCorrectedClouds));`),e.hasCloudsReflections&&t.code.add(g`vec4 cloudsColor = renderClouds(reflectedWorld, position);
cloudsColor.a = 1.0 - cloudsColor.a;
cloudsColor = pow(cloudsColor, vec4(GAMMA));
cloudsColor *= clamp(fresnelModifier.y*cloudFresnelModifier[0] - cloudFresnelModifier[1], 0.0, 1.0) * clamp((1.0 - totalFadeInOut), 0.0, 1.0);`),e.hasScreenSpaceReflections?(t.uniforms.add(new cr("view",(i,s)=>s.ssr.camera.viewMatrix)),t.uniforms.add(new Nt("lastFrameColorMap",(i,s)=>s.ssr.lastFrameColorTexture)),t.code.add(g`vec3 viewDir = normalize(viewPosition);
vec4 viewNormalVectorCoordinate = view *vec4(n, 0.0);
vec3 viewNormal = normalize(viewNormalVectorCoordinate.xyz);
vec4 viewUp = view * vec4(localUp, 0.0);
vec3 viewNormalCorrectedSSR = mix(viewUp.xyz, viewNormal, correctionViewingFactor);
vec3 reflected = normalize(reflect(viewDir, viewNormalCorrectedSSR));
vec3 hitCoordinate = screenSpaceIntersection(reflected, viewPosition, viewDir, viewUp.xyz);
vec3 reflectedColor = vec3(0.0);
if (hitCoordinate.z > 0.0)
{
vec2 reprojectedCoordinate = reprojectionCoordinate(hitCoordinate);
vec2 dCoords = smoothstep(0.3, 0.6, abs(vec2(0.5, 0.5) - hitCoordinate.xy));
float heightMod = smoothstep(ssrHeightFadeEnd, ssrHeightFadeStart, -viewPosition.z);
reflectionHit = clamp(1.0 - (1.3*dCoords.y), 0.0, 1.0) * heightMod;
reflectionHitDiffused = waterDiffusion * reflectionHit;
reflectedColor = linearizeGamma(texture2D(lastFrameColorMap, reprojectedCoordinate).xyz)* reflectionHitDiffused * fresnelModifier.y * ssrIntensity;
}
float seaColorMod =  mix(waterSeaColorMod, waterSeaColorMod*0.5, reflectionHitDiffused);
vec3 waterRenderedColor = tonemapACES((1.0 - reflectionHitDiffused) * reflSky + reflectedColor + reflSea * seaColorMod + specular  + foam);`)):t.code.add(g`vec3 waterRenderedColor = tonemapACES(reflSky + reflSea * waterSeaColorMod + specular + foam);`),e.hasCloudsReflections?e.hasScreenSpaceReflections?t.code.add(g`return waterRenderedColor * (1.0 - (1.0 - reflectionHit) * cloudsColor.a) + (1.0 - reflectionHit) * cloudsColor.xyz;
}`):t.code.add(g`return waterRenderedColor * (1.0 - cloudsColor.a) + cloudsColor.xyz;
}`):t.code.add(g`return waterRenderedColor;
}`)}function xu(r){const e=new Gr,{vertex:t,fragment:i}=e;jr(t,r),e.include(Es,r),e.attributes.add(u.POSITION,"vec3"),e.attributes.add(u.UV0,"vec2");const s=new Ae("waterColor",n=>n.color);if(r.output===w.Color&&r.isDraped)return e.varyings.add("vpos","vec3"),t.uniforms.add(s),t.code.add(g`
        void main(void) {
          if (waterColor.a < ${g.float(Ne)}) {
            // Discard this vertex
            gl_Position = vec4(1e38, 1e38, 1e38, 1.0);
            return;
          }

          vpos = position;
          gl_Position = transformPosition(proj, view, vpos);
        }
    `),i.uniforms.add(s),i.code.add(g`void main() {
gl_FragColor = waterColor;
}`),e;switch(r.output!==w.Color&&r.output!==w.Alpha||(e.include(ka,r),e.include(il,r),e.varyings.add("vuv","vec2"),e.varyings.add("vpos","vec3"),e.varyings.add("vnormal","vec3"),e.varyings.add("vtbnMatrix","mat3"),r.hasMultipassTerrain&&e.varyings.add("depth","float"),t.uniforms.add(s),t.code.add(g`
      void main(void) {
        if (waterColor.a < ${g.float(Ne)}) {
          // Discard this vertex
          gl_Position = vec4(1e38, 1e38, 1e38, 1.0);
          return;
        }

        vuv = uv0;
        vpos = position;

        vnormal = getLocalUp(vpos, localOrigin);
        vtbnMatrix = getTBNMatrix(vnormal);

        ${r.hasMultipassTerrain?"depth = (view * vec4(vpos, 1.0)).z;":""}

        gl_Position = transformPosition(proj, view, vpos);
        ${r.output===w.Color?"forwardLinearDepth();":""}
      }
    `)),e.include(Ps,r),r.output){case w.Alpha:e.include(pt,r),i.uniforms.add(s),i.code.add(g`
        void main() {
          discardBySlice(vpos);
          ${r.hasMultipassTerrain?"terrainDepthTest(gl_FragCoord, depth);":""}

          gl_FragColor = vec4(waterColor.a);
        }
      `);break;case w.Color:e.include(sl,r),e.include(al,{pbrMode:xo.Disabled,lightingSphericalHarmonicsOrder:2}),e.include(Wa),e.include(pt,r),e.include(ol,r),e.include(Su,r),i.uniforms.add([s,new H("timeElapsed",n=>n.timeElapsed),t.uniforms.get("view"),t.uniforms.get("localOrigin")]),As(i,r),i.include(Ai),yo(i),So(i),i.code.add(g`
      void main() {
        discardBySlice(vpos);
        ${r.hasMultipassTerrain?"terrainDepthTest(gl_FragCoord, depth);":""}
        vec3 localUp = vnormal;
        // the created normal is in tangent space
        vec4 tangentNormalFoam = getSurfaceNormalAndFoam(vuv, timeElapsed);

        // we rotate the normal according to the tangent-bitangent-normal-Matrix
        vec3 n = normalize(vtbnMatrix * tangentNormalFoam.xyz);
        vec3 v = -normalize(vpos - cameraPosition);
        float shadow = ${r.receiveShadows?g`1.0 - readShadowMap(vpos, linearDepth)`:"1.0"};
        vec4 vPosView = view * vec4(vpos, 1.0);
        vec4 final = vec4(getSeaColor(n, v, mainLightDirection, waterColor.rgb, mainLightIntensity, localUp, shadow, tangentNormalFoam.w, vPosView.xyz, vpos + localOrigin), waterColor.w);

        // gamma correction
        gl_FragColor = delinearizeGamma(final);
        gl_FragColor = highlightSlice(gl_FragColor, vpos);
        ${r.transparencyPassType===K.Color?"gl_FragColor = premultiplyAlpha(gl_FragColor);":""}
      }
    `);break;case w.Normal:e.include(ka,r),e.include(Wa,r),e.include(pt,r),e.varyings.add("vpos","vec3"),e.varyings.add("vuv","vec2"),t.uniforms.add(s),t.code.add(g`
        void main(void) {
          if (waterColor.a < ${g.float(Ne)}) {
            // Discard this vertex
            gl_Position = vec4(1e38, 1e38, 1e38, 1.0);
            return;
          }

          vuv = uv0;
          vpos = position;

          gl_Position = transformPosition(proj, view, vpos);
        }
    `),i.uniforms.add(new H("timeElapsed",n=>n.timeElapsed)),i.code.add(g`void main() {
discardBySlice(vpos);
vec4 tangentNormalFoam = getSurfaceNormalAndFoam(vuv, timeElapsed);
tangentNormalFoam.xyz = normalize(tangentNormalFoam.xyz);
gl_FragColor = vec4((tangentNormalFoam.xyz + vec3(1.0)) * 0.5, tangentNormalFoam.w);
}`);break;case w.Highlight:e.include(Di,r),e.varyings.add("vpos","vec3"),t.uniforms.add(s),t.code.add(g`
      void main(void) {
        if (waterColor.a < ${g.float(Ne)}) {
          // Discard this vertex
          gl_Position = vec4(1e38, 1e38, 1e38, 1.0);
          return;
        }

        vpos = position;
        gl_Position = transformPosition(proj, view, vpos);
      }
    `),e.include(pt,r),i.code.add(g`void main() {
discardBySlice(vpos);
outputHighlight();
}`)}return e}const wu=Object.freeze(Object.defineProperty({__proto__:null,build:xu},Symbol.toStringTag,{value:"Module"}));class Li extends vr{initializeConfiguration(e,t){t.hasWebGL2Context=e.rctx.type===Ii.WEBGL2,t.spherical=e.viewingMode===St.Global,t.doublePrecisionRequiresObfuscation=nl(e.rctx)}initializeProgram(e){return new _r(e.rctx,Li.shader.get().build(this.configuration),Vr)}_setPipelineState(e){const t=this.configuration,i=e===K.NONE,s=e===K.FrontFace;return Xe({blending:t.output!==w.Normal&&t.output!==w.Highlight&&t.transparent?i?Er:bi(e):null,depthTest:{func:Cs(e)},depthWrite:i?t.writeDepth&&lr:to(e),colorWrite:it,polygonOffset:i||s?null:ro(t.enableOffset)})}initializePipeline(){return this._setPipelineState(this.configuration.transparencyPassType)}}Li.shader=new yr(wu,()=>xr(()=>import("./WaterSurface.glsl-72fadca6.js"),["assets/WaterSurface.glsl-72fadca6.js","assets/SSAOHelper-868f5969.js","assets/typedArrayUtil-d9bc5fbd.js","assets/OrderIndependentTransparency-68bd812c.js","assets/enums-64ab819c.js","assets/cast-a534ae90.js","assets/string-480f3e3f.js","assets/Error-57322e92.js","assets/ensureType-25b8cc06.js","assets/nextTick-3ee5a785.js","assets/promiseUtils-32d9c228.js","assets/vec3-1863987c.js","assets/vec3f64-6cd30318.js","assets/common-c186b691.js","assets/Util-289ce3b5.js","assets/vec2f64-30dc1443.js","assets/vec4-46a9b36d.js","assets/vec4f64-939de194.js","assets/triangle-8cd02c5d.js","assets/sphere-622880b9.js","assets/mathUtils-57aba1ea.js","assets/mat4-7dde83b1.js","assets/byteSizeEstimations-90c5a50d.js","assets/quatf64-c94bd656.js","assets/mat4f64-fbeb2cd1.js","assets/lineSegment-c6f0b9d1.js","assets/Indices-d9b791ce.js","assets/VertexAttribute-9c5c630d.js","assets/ScreenSpacePass-6db805f2.js","assets/vec2-ab9f47bf.js","assets/compilerUtils-fefa73ae.js","assets/Evented-cbf5f368.js","assets/request-f17a8ddb.js","assets/preload-helper-101896b7.js","assets/requestImageUtils-f656eddc.js","assets/SSAO.glsl-3068f7bf.js","assets/assets-a5ce5e1a.js","assets/Texture-411ca148.js","assets/context-util-d4c193b5.js","assets/VertexArrayObject-3630ef4f.js","assets/mat4f32-77b3d8ac.js","assets/BufferView-478024d2.js","assets/aaBoundingBox-4a83dbbc.js","assets/Extent-a1a1de42.js","assets/aaBoundingRect-b340cf8c.js","assets/ViewingMode-915d19cb.js","assets/mat3-9a8d9db7.js","assets/quat-ec16a584.js","assets/vec3f32-4322908d.js","assets/SSAOBlur.glsl-ea338452.js","assets/VertexElementDescriptor-2925c6af.js","assets/plane-46a8c767.js","assets/ElevationInfo-88554f24.js","assets/jsonMap-190c5593.js","assets/fieldUtils-77ec75e2.js","assets/arcadeOnDemand-5175e7d9.js","assets/geometry-eec1b371.js","assets/Polyline-b571c705.js","assets/typeUtils-cd52dc20.js","assets/lengthUtils-92fed992.js","assets/unitUtils-dd6fb8ee.js","assets/index-7dfdb274.js","assets/Basemap-f70b1b37.js","assets/Collection-7c37b74e.js","assets/SimpleObservable-8e532943.js","assets/collectionUtils-0365f48b.js","assets/deprecate-0d93948c.js","assets/Loadable-46524a7e.js","assets/Promise-368b703a.js","assets/loadAll-01cdf0a9.js","assets/asyncUtils-087555fc.js","assets/Portal-51616380.js","assets/locale-30120714.js","assets/PortalGroup-d495847c.js","assets/PortalUser-e16fc7d1.js","assets/PortalItem-6eebfb2b.js","assets/messages-28bf3b89.js","assets/writeUtils-3bde6e49.js","assets/layerUtils-68eea656.js","assets/Color-af6e0c66.js","assets/colorUtils-639f4d25.js","assets/enumeration-61a13175.js","assets/opacityUtils-1333f803.js","assets/CollectionFlattener-f43a0fce.js","assets/TablesMixin-a4aaaf91.js","assets/Layer-ead8c88c.js","assets/Identifiable-093f90a8.js","assets/Graphic-1859ae71.js","assets/PopupTemplate-52faab17.js","assets/Clonable-9b34e760.js","assets/number-2ab8ca0d.js","assets/symbols-75e7a993.js","assets/CIMSymbol-8f02a6e3.js","assets/Symbol-8266348e.js","assets/screenUtils-90993e16.js","assets/symbolLayerUtils3D-c8c40895.js","assets/persistableUrlUtils-56d43b12.js","assets/jsonUtils-c6684c52.js","assets/Cyclical-078b4564.js","assets/reactiveUtils-5869e41a.js","assets/workers-5d67fe7a.js","assets/Connection-b756149d.js","assets/Queue-275a6362.js","assets/intl-70c09a3c.js","assets/projection-0af97a56.js","assets/zscale-48bab05e.js","assets/TileInfo-c5c8c8d2.js","assets/widget-09d2e7af.js","assets/uuid-73213768.js","assets/dom-5b7af1bf.js","assets/HandleOwner-2edbba46.js","assets/executeQueryJSON-0696009a.js","assets/normalizeUtils-6483f6b5.js","assets/query-71223310.js","assets/pbfQueryUtils-c922ef32.js","assets/pbf-8b0546e8.js","assets/OptimizedFeature-73582c6e.js","assets/OptimizedFeatureSet-1d1ac4b9.js","assets/queryZScale-3c8de33a.js","assets/FeatureSet-9cc47aef.js","assets/Field-1d4f9ca4.js","assets/fieldType-b34e5d2d.js","assets/Query-13124a97.js","assets/TimeExtent-2004eecf.js","assets/RelationshipQuery-c27267ab.js","assets/LegendOptions-2e7b3d70.js","assets/utils-4aa03157.js","assets/BlendLayer-813950f9.js","assets/parser-01f6451e.js","assets/ItemCache-bf1028d4.js","assets/MemCache-1d2f56ee.js","assets/utils-0c7f5071.js","assets/jsonUtils-559e9000.js","assets/UniqueValueRenderer-30750d31.js","assets/diffUtils-8a8cb5bc.js","assets/colorRamps-8d7efc14.js","assets/sizeVariableUtils-d4870b0d.js","assets/jsonUtils-eb568237.js","assets/styleUtils-015eeecd.js","assets/DictionaryLoader-326d0e17.js","assets/LRUCache-b9228ca3.js","assets/heatmapUtils-3d7c22c5.js","assets/featureConversionUtils-d2229ed4.js","assets/TopFeaturesQuery-9aca00bf.js","assets/FeatureLayer-9a7e04cf.js","assets/MultiOriginJSONSupport-b8792dfa.js","assets/LayerFloorInfo-e7c896e5.js","assets/FeatureLayerBase-d5682b4b.js","assets/HeightModelInfo-34f16d74.js","assets/arcgisLayerUrl-6e9db12f.js","assets/OperationalLayer-1dad72ac.js","assets/editsZScale-12d81957.js","assets/APIKeyMixin-b6e4f897.js","assets/ArcGISService-e571bcff.js","assets/CustomParametersMixin-a5d06ccc.js","assets/EditBusLayer-b5dc3689.js","assets/FeatureReductionLayer-1e5c4045.js","assets/labelingInfo-be3a629c.js","assets/labelUtils-4f4b54c6.js","assets/defaultsJSON-59981e75.js","assets/OrderedLayer-9623e905.js","assets/PortalLayer-9dd15f09.js","assets/RefreshableLayer-49182ab8.js","assets/ScaleRangeLayer-c072e266.js","assets/TemporalLayer-f784dd83.js","assets/TimeInfo-f76d6c20.js","assets/FeatureTemplate-c4496b93.js","assets/FeatureType-0be9420b.js","assets/fieldProperties-9e220f14.js","assets/FieldsIndex-16707836.js","assets/versionUtils-f229b9a6.js","assets/styleUtils-08eaa4d2.js","assets/popupUtils-88fed094.js","assets/colorUtils-82440b70.js","assets/mat2d-d0b91e3e.js","assets/Scheduler-5e6ccc87.js","assets/GraphicsLayer-a7c6f685.js","assets/unitBezier-881ac1eb.js","assets/mat3f32-d3d088e8.js","assets/vec2f32-461e65a9.js","assets/TileStrategy-a5366189.js","assets/TileStore-8f580dbf.js","assets/TileKey-9cae9369.js","assets/rbush-8e36784a.js","assets/quickselect-322ec8e1.js","assets/capabilities-d08b6e58.js","assets/Subtype-a3103d84.js","assets/datetime-4f774298.js","assets/elevationInfoUtils-44cce436.js","assets/QueryEngineResult-eb704fb1.js","assets/utils-52ad3c09.js","assets/generateRendererUtils-2f0b667c.js","assets/WhereClause-6c9440a1.js","assets/utils-63166b41.js","assets/json-48e3ea08.js","assets/EffectView-dffeb0bc.js","assets/ExportImageParameters-3714ed4b.js","assets/sublayerUtils-eea48c01.js","assets/webStyleSymbolUtils-6bef877f.js","assets/devEnvironmentUtils-5002a058.js","assets/dehydratedFeatures-3dcd65f1.js","assets/enums-4b2a86a0.js","assets/index-a8abe695.css","assets/InterleavedLayout-b5930508.js","assets/types-e1c0a5bf.js","assets/triangulationUtils-6b510de4.js","assets/earcut-58237617.js","assets/deduplicate-d92c3cc2.js","assets/NestedMap-1b5db22e.js","assets/Octree-8ed6dc77.js","assets/floatRGBA-090399ba.js","assets/boundedPlane-296928f6.js","assets/glUtil-7aa58841.js"]));class le extends gr{constructor(){super(...arguments),this.output=w.Color,this.transparencyPassType=K.NONE,this.spherical=!1,this.receiveShadows=!1,this.hasSlicePlane=!1,this.transparent=!1,this.enableOffset=!0,this.writeDepth=!1,this.hasScreenSpaceReflections=!1,this.doublePrecisionRequiresObfuscation=!1,this.hasCloudsReflections=!1,this.isDraped=!1,this.hasMultipassTerrain=!1,this.cullAboveGround=!1}}v([S({count:w.COUNT})],le.prototype,"output",void 0),v([S({count:K.COUNT})],le.prototype,"transparencyPassType",void 0),v([S()],le.prototype,"spherical",void 0),v([S()],le.prototype,"receiveShadows",void 0),v([S()],le.prototype,"hasSlicePlane",void 0),v([S()],le.prototype,"transparent",void 0),v([S()],le.prototype,"enableOffset",void 0),v([S()],le.prototype,"writeDepth",void 0),v([S()],le.prototype,"hasScreenSpaceReflections",void 0),v([S()],le.prototype,"doublePrecisionRequiresObfuscation",void 0),v([S()],le.prototype,"hasCloudsReflections",void 0),v([S()],le.prototype,"isDraped",void 0),v([S()],le.prototype,"hasMultipassTerrain",void 0),v([S()],le.prototype,"cullAboveGround",void 0),v([S({constValue:xo.Water})],le.prototype,"pbrMode",void 0),v([S({constValue:!0})],le.prototype,"useCustomDTRExponentForWater",void 0),v([S({constValue:!0})],le.prototype,"highStepCount",void 0),v([S({constValue:!1})],le.prototype,"useFillLights",void 0);let Tu=class extends Pi{_updateShadowState(e){e.shadowMap.enabled!==this._material.parameters.receiveShadows&&this._material.setParameters({receiveShadows:e.shadowMap.enabled})}_updateSSRState(e){e.ssr.enabled!==this._material.parameters.hasScreenSpaceReflections&&this._material.setParameters({hasScreenSpaceReflections:e.ssr.enabled})}_updateCloudsReflectionState(e){const t=C(e.cloudsFade.data);t!==this._material.parameters.hasCloudsReflections&&this._material.setParameters({hasCloudsReflections:t})}ensureResources(e){return this._techniqueRepository.constructionContext.waterTextureRepository.ensureResources(e)}beginSlot(e){return this._output===w.Color&&(this._updateShadowState(e),this._updateSSRState(e),this._updateCloudsReflectionState(e)),this._material.setParameters(this._techniqueRepository.constructionContext.waterTextureRepository.passParameters),this.ensureTechnique(Li,e)}},Ou=class extends Ur{constructor(e){super(e,new Cu),this._configuration=new le,this.animation=new uu}getConfiguration(e,t){return this._configuration.output=e,this._configuration.writeDepth=this.parameters.writeDepth,this._configuration.receiveShadows=this.parameters.receiveShadows,this._configuration.hasSlicePlane=this.parameters.hasSlicePlane,this._configuration.transparent=this.parameters.transparent,this._configuration.hasScreenSpaceReflections=this.parameters.hasScreenSpaceReflections,this._configuration.hasCloudsReflections=this.parameters.hasCloudsReflections,this._configuration.isDraped=this.parameters.isDraped,this._configuration.transparencyPassType=t.transparencyPassType,this._configuration.enableOffset=t.camera.relativeElevation<io,this._configuration.hasMultipassTerrain=t.multipassTerrain.enabled,this._configuration.cullAboveGround=t.multipassTerrain.cullAboveGround,this._configuration}update(e){const t=Math.min(e.camera.relativeElevation,e.camera.distance);this.animation.enabled=Math.sqrt(this.parameters.waveTextureRepeat/this.parameters.waveStrength)*t<bu;const i=this.animation.advance(e);return this.setParameters({timeElapsed:oc(this.animation.time)*this.parameters.animationSpeed},!1),this.animation.enabled&&i}intersect(e,t,i,s,n,a,o){vo(e,t,s,n,a,void 0,o)}requiresSlot(e,t){switch(t){case w.Normal:return e===j.DRAPED_WATER;case w.Color:if(this.parameters.isDraped)return e===j.DRAPED_MATERIAL;break;case w.Alpha:break;case w.Highlight:return e===j.OPAQUE_MATERIAL||e===j.DRAPED_MATERIAL;default:return!1}let i=j.OPAQUE_MATERIAL;return this.parameters.transparent&&(i=this.parameters.writeDepth?j.TRANSPARENT_MATERIAL:j.TRANSPARENT_DEPTH_WRITE_DISABLED_MATERIAL),e===i}createGLMaterial(e){return new Tu(e)}createBufferWriter(){return new Ws(hh)}};class Cu extends Is{constructor(){super(...arguments),this.waveStrength=.06,this.waveTextureRepeat=32,this.waveDirection=Ms(1,0),this.waveVelocity=.05,this.flowStrength=.015,this.flowOffset=-.5,this.animationSpeed=.35,this.timeElapsed=0,this.color=hr(0,0,0,0),this.transparent=!0,this.writeDepth=!0,this.hasSlicePlane=!1,this.isDraped=!1,this.receiveShadows=!0,this.hasScreenSpaceReflections=!1,this.hasCloudsReflections=!1}}const bu=35e3;let ei=class{constructor(){this.first=0,this.count=0}};class Zt{constructor(e=0,t=0){this.from=e,this.to=t}}let Au=class extends Zt{constructor(e,t,i,s,n,a){super(t,i),this.id=e,this.isVisible=s,this.hasHighlights=n,this.hasOccludees=a}};function qa(r){return Array.from(r.values()).sort(Ru)}function Ru(r,e){return r.from===e.from?r.to-e.to:r.from-e.from}function ti(r,e){const t=r.back();if(t==null){const i=r.pushNew();return i.first=e.from,void(i.count=e.to-e.from)}if(Pu(t,e)){const i=e.from-t.first+e.to-e.from;t.count=i}else{const i=r.pushNew();i.first=e.from,i.count=e.to-e.from}}function Pu(r,e){return r.first+r.count>=e.from}class Du{constructor(e,t){this._pool=e,this._size=0,this._buffer=e.newBuffer(Os(t))}dispose(){this._buffer=this._pool.deleteBuffer(this._buffer),this._size=0}release(){this.erase(0,this._size),this.dispose()}get buffer(){return this._buffer}get size(){return this._size}grow(e){this._resize(this._size+e,!0).dispose()}allocate(e){return this._resize(e,!1)}_resize(e,t){let i;const s=Eu(this._buffer.length,this._size,e);if(this._buffer.length!==s){const a=this._pool.newBuffer(s);t&&(a.array.set(this._buffer.array.subarray(0,Math.min(this._size,s))),a.vao.vertexBuffers.geometry.setSubData(a.array,0,0,a.array.length)),i=this._buffer,this._buffer=a}const n=this._size;return this._size=e,i?{dispose:()=>{i.array.fill(0,0,n),this._pool.deleteBuffer(i)},copy:(a,o,l)=>this._buffer.array.set(i.array.subarray(o,l),a),hasNewBuffer:!0}:{dispose:()=>{},copy:(a,o,l)=>{a!==o&&this._buffer.array.copyWithin(a,o,l)},hasNewBuffer:!1}}erase(e,t){this._buffer.array.fill(0,e,t)}}const Ts=65536;function Os(r){return Math.ceil(r/Ts)*Ts}function Eu(r,e,t){return e<=t?r>=t?r:Os(Math.max(2*r,t)):r<=2*t?r:Os(t)}let Iu=class{constructor(e,t,i,s){this.vao=new ll(e,t,{geometry:i},{geometry:Tc.createVertex(e,sc.STATIC_DRAW)}),this.array=new Float32Array(s),this.vao.vertexBuffers.geometry.setSize(this.array.byteLength)}dispose(){this.vao.dispose(!0)}get length(){return this.array.length}};const $u=$c+1;class Mu{constructor(e,t,i){this._rctx=e,this._locations=t,this._layout=i,this._cache=e.newCache(`MergedRenderer pool ${Br()}`,Lu)}dispose(){this._cache.destroy()}newBuffer(e){const t=e.toString(),i=this._cache.pop(t);if(C(i)){const s=i.pop();return i.length>0&&this._cache.put(t,i,s.array.byteLength*i.length,$u),s}return new Iu(this._rctx,this._locations,this._layout,e)}deleteBuffer(e){const t=e.array.byteLength,i=e.array.length.toString(),s=this._cache.pop(i);return C(s)?(s.push(e),this._cache.put(i,s,t*s.length,-1)):this._cache.put(i,[e],t,-1),null}}function Lu(r,e){if(e===Ic.ALL)return void r.forEach(s=>s.dispose());const t=r.pop(),i=r.length*t.array.byteLength;return t.dispose(),i}let Nu=class{constructor(e,t,i){this._rctx=e,this._materialRepository=t,this._material=i,this.type="MergedRenderer",this._dataByOrigin=new Map,this._renderCommandData=new Ee,this._hasHighlights=!1,this._hasOccludees=!1,this._glMaterials=new du(this._material,this._materialRepository),this._bufferWriter=i.createBufferWriter(),this._bufferPool=new Mu(e,i.vertexAttributeLocations,Dc(this._bufferWriter.vertexBufferLayout))}dispose(){this._glMaterials.destroy(),this._dataByOrigin.forEach(e=>e.geometry.dispose()),this._dataByOrigin.clear(),this._bufferPool.dispose()}get isEmpty(){return this._dataByOrigin.size===0}get hasHighlights(){return this._hasHighlights}get hasOccludees(){return this._hasOccludees}get hasWater(){return!this.isEmpty&&this._material instanceof Ou}get rendersOccluded(){return!this.isEmpty&&this._material.renderOccluded!==gt.Occlude}modify(e){this._updateGeometries(e.updates),this._addAndRemoveGeometries(e.adds,e.removes),this._updateDrawCommands()}_addAndRemoveGeometries(e,t){const i=this._bufferWriter,s=i.vertexBufferLayout.stride/4,n=this._dataByOrigin,a=zu(e,t);a.forEach((o,l)=>{a.delete(l);const c=o.add.reduce((y,x)=>y+i.elementCount(x.data),0);let d=n.get(l);if(d==null)de(o.remove.length===0),d=new Uu(o.origin,new Du(this._bufferPool,c*s)),n.set(l,d);else if(o.add.length===0&&d.instances.size===o.remove.length)return d.geometry.dispose(),void n.delete(l);let h=0;d.instances.forEach(y=>h+=y.to-y.from);const f=o.remove.reduce((y,x)=>y+i.elementCount(x.data),0),p=d.geometry.size,m=(h+c-f)*s,_=Hu;if(m>Ts&&(m<p/2||p-m>1048576)?this._removeAndRebuild(d,o.remove,s,m,_):o.remove.length>0&&this._remove(d,o.remove,s,_),o.add.length>0){const y=Gu;Ol(y,-o.origin[0],-o.origin[1],-o.origin[2]),this._add(d,o.add,s,y,_)}const T=d.geometry.buffer.vao.vertexBuffers.geometry;Ja(_),_.forAll(({from:y,to:x})=>{if(y<x){const O=d.geometry.buffer.array;T.setSubData(O,y,y,x)}}),_.clear(),d.drawCommandsDirty=!0})}_updateGeometries(e){const t=this._bufferWriter,i=t.vertexBufferLayout.stride/4;for(const s of e){const n=s.renderGeometry,a=this._dataByOrigin.get(n.origin.id),o=a&&a.instances.get(n.id);if(!o)return;const l=s.updateType;if(l&je.VISIBILITIES&&(o.isVisible=n.instanceParameters.visible),l&(je.HIGHLIGHTS|je.VISIBILITIES)){const c=n.instanceParameters.visible;o.hasHighlights=!!n.instanceParameters.highlights&&c}if(l&je.OCCLUDEES&&(o.hasOccludees=!!n.instanceParameters.occludees),l&(je.VERTEXATTRS|je.TRANSFORMATION)){const{array:c,vao:d}=a.geometry.buffer;cl(n,is,Rr),t.write(is,Rr,n.data,t.vertexBufferLayout.createView(c.buffer),o.from),de(o.from+t.elementCount(n.data)===o.to,"material VBO layout has changed"),d.vertexBuffers.geometry.setSubData(c,o.from*i,o.from*i,o.to*i)}a.drawCommandsDirty=!0}}_updateDrawCommands(){this._hasHighlights=!1,this._hasOccludees=!1,this._dataByOrigin.forEach(t=>{t.hasHiddenInstances=!1,t.hasHighlights=!1,t.hasOccludees=!1,ft(t.instances,i=>(i.isVisible?(i.hasHighlights&&(this._hasHighlights=!0,t.hasHighlights=!0),i.hasOccludees&&(this._hasOccludees=!0,t.hasOccludees=!0)):t.hasHiddenInstances=!0,t.hasHiddenInstances&&t.hasHighlights&&t.hasOccludees))});const e=t=>{if(t.drawCommandsDefault.clear(),t.drawCommandsHighlight.clear(),t.drawCommandsOccludees.clear(),t.drawCommandsShadowHighlightRest.clear(),t.instances.size===0)return;if(!Za(t)){const s=t.drawCommandsDefault.pushNew();return s.first=1/0,s.count=0,t.instances.forEach(n=>{s.first=Math.min(s.first,n.from),s.count=Math.max(s.count,n.to)}),void(s.count-=s.first)}const i=qa(t.instances);for(const s of i)s.isVisible&&(s.hasOccludees?ti(t.drawCommandsOccludees,s):ti(t.drawCommandsDefault,s),s.hasHighlights?ti(t.drawCommandsHighlight,s):ti(t.drawCommandsShadowHighlightRest,s))};this._dataByOrigin.forEach(t=>{t.drawCommandsDirty&&(e(t),t.drawCommandsDirty=!1)})}updateAnimation(e){return this._material.update(e)}requiresSlot(e,t){return this._material.requiresSlot(e,t)}render(e,t){if(!this.requiresSlot(t.slot,e))return!1;const i=e===w.Highlight||e===w.ShadowHighlight;if(i&&!this._hasHighlights)return!1;const s=e===w.ShadowExludeHighlight,n=!(i||s);if(this._dataByOrigin.forEach(d=>{if(i&&!d.hasHighlights)return;const h=(i?d.drawCommandsHighlight:s&&Za(d)?d.drawCommandsShadowHighlightRest:d.drawCommandsDefault)||null,f=n&&d.drawCommandsOccludees||null;(h!=null&&h.length||f!=null&&f.length)&&this._renderCommandData.push(new Vu(d.origin,d.geometry,h,f))}),this._renderCommandData.length===0)return!1;const a=this._rctx,o=this._glMaterials.load(a,t.slot,e);if(V(o))return this._renderCommandData.clear(),!1;const l=o.beginSlot(t),c=a.bindTechnique(l,this._material.parameters,t);return this._renderCommandData.forAll(d=>{c.bindDraw(d,t,this._material.parameters);const{geometry:h,renderCommands:f,occludeeCommands:p}=d;l.ensureAttributeLocations(h.buffer.vao),a.bindVAO(h.buffer.vao);const m=l.primitiveType;C(f)&&f.length>0&&(l.bindPipelineState(a,t.slot,!1),f.forAll(_=>a.drawArrays(m,_.first,_.count))),C(p)&&p.length>0&&(l.bindPipelineState(a,t.slot,!0),p.forAll(_=>a.drawArrays(m,_.first,_.count)))}),this._renderCommandData.clear(),!0}_removeAndRebuild(e,t,i,s,n){for(const d of t)e.instances.delete(d.id);const a=qa(e.instances);e.instances.clear();const o=e.geometry.size,l=e.geometry.allocate(s);let c=0;for(const d of a){const h=d.from*i,f=d.to*i;l.copy(c,h,f),d.from=c/i,c+=f-h,d.to=c/i,e.instances.set(d.id,d)}n.push(new Zt(0,l.hasNewBuffer?e.geometry.buffer.array.length:o)),l.dispose(),e.geometry.erase(c,n.back().to),e.holes.clear()}_remove(e,t,i,s){for(const n of t){const a=n.id,o=e.instances.get(a),l=o.from*i,c=o.to*i;e.geometry.erase(l,c),e.holes.push(new Zt(o.from,o.to)),e.instances.delete(a),s.push(new Zt(l,c))}Ja(e.holes)}_add(e,t,i,s,n){if(t.length===0)return;const a=this._bufferWriter;let o=a.vertexBufferLayout.createView(e.geometry.buffer.array.buffer);const l=e.holes.length>0;let c=Number.MAX_SAFE_INTEGER,d=Number.MIN_SAFE_INTEGER;for(const h of t){const f=C(h.transformation)?Mt(is,s,h.transformation):s;rr(Rr,f);const p=To(Rr,Rr),m=a.elementCount(h.data),_=m*i;let T=ju(e.holes,m);V(T)&&(T=e.geometry.size/i,e.geometry.grow(_),o=a.vertexBufferLayout.createView(e.geometry.buffer.array.buffer)),a.write(f,p,h.data,o,T);const y=h.instanceParameters.visible,x=!!h.instanceParameters.highlights&&y,O=!!h.instanceParameters.occludees,R=new Au(h.id,T,T+m,y,x,O);de(e.instances.get(h.id)==null),e.instances.set(h.id,R),l?n.push(new Zt(R.from*i,R.to*i)):(c=Math.min(R.from,c),d=Math.max(R.to,d))}l||n.push(new Zt(c*i,d*i))}get test(){return{material:this._material,glMaterials:this._glMaterials,dataByOrigin:this._dataByOrigin}}};class Fu{constructor(e){this.origin=e,this.add=new Array,this.remove=new Array}}function zu(r,e){const t=new Map;for(const i of r)Xa(t,i,!0);for(const i of e)Xa(t,i,!1);return t}function Xa(r,e,t){const i=e.origin;if(V(i))return;let s=r.get(i.id);s==null&&(s=new Fu(i.vec3),r.set(i.id,s)),t?s.add.push(e):s.remove.push(e)}function Za(r){return r.hasOccludees||r.hasHighlights||r.hasHiddenInstances}function ju(r,e){let t;if(!r.some(s=>!(s.to-s.from<e)&&(t=s,!0)))return null;const i=t.from;return t.from+=e,t.from>=t.to&&r.removeUnordered(t),i}function Ja(r){const e=new Map;r.forAll(i=>e.set(i.from,i));let t=!0;for(;t;)t=!1,r.forEach(i=>{const s=e.get(i.to);s&&(i.to=s.to,e.delete(s.from),r.removeUnordered(s),t=!0)})}let Uu=class{constructor(e,t){this.origin=e,this.geometry=t,this.instances=new Map,this.holes=new Ee({deallocator:null}),this.hasHiddenInstances=!1,this.hasHighlights=!1,this.hasOccludees=!1,this.drawCommandsDirty=!1,this.drawCommandsDefault=new Ee({allocator:i=>i||new ei,deallocator:i=>i}),this.drawCommandsHighlight=new Ee({allocator:i=>i||new ei,deallocator:i=>i}),this.drawCommandsOccludees=new Ee({allocator:i=>i||new ei,deallocator:i=>i}),this.drawCommandsShadowHighlightRest=new Ee({allocator:i=>i||new ei,deallocator:i=>i})}};class Vu extends hu{constructor(e,t,i,s){super(e),this.geometry=t,this.renderCommands=i,this.occludeeCommands=s}}const Hu=new Ee({deallocator:null}),Gu=X(),is=X(),Rr=X();let tt=class extends Eo{constructor(e){super(e),this._pending=new Bu,this._changes=new tu,this._materialRenderers=new Map,this._sortedMaterialRenderers=new Ee,this._geometries=new Map,this._hasHighlights=!1,this._hasWater=!1}destroy(){this._changes.prune(),this._materialRenderers.forEach(e=>e.dispose()),this._materialRenderers.clear(),this._sortedMaterialRenderers.clear(),this._geometries.clear()}get updating(){return!this._pending.empty||this._changes.updates.length>0}get rctx(){return this.rendererContext.rctx}get _materialRepository(){return this.rendererContext.materialRepository}get _localOriginFactory(){return this.rendererContext.localOriginFactory}get hasHighlights(){return this._hasHighlights}get hasWater(){return this._hasWater}get rendersOccluded(){return ft(this._materialRenderers,e=>e.rendersOccluded)}get isEmpty(){return!this.updating&&this._materialRenderers.size===0&&this._geometries.size===0}commitChanges(){if(!this.updating)return!1;this._processAddsRemoves();const e=cu(this._changes);let t=!1,i=!1,s=!1;return e.forEach((n,a)=>{let o=this._materialRenderers.get(a);if(!o&&n.adds.length>0&&(o=new Nu(this.rctx,this._materialRepository,a),this._materialRenderers.set(a,o),t=!0,i=!0,s=!0),!o)return;const l=i||o.hasHighlights,c=s||o.hasWater;o.modify(n),i=i||l!==o.hasHighlights,s=s||c!==o.hasWater,o.isEmpty&&(this._materialRenderers.delete(a),o.dispose(),t=!0)}),this._changes.clear(),t&&this._updateSortedMaterialRenderers(),i&&(this._hasHighlights=ft(this._materialRenderers,n=>n.hasHighlights)),s&&(this._hasWater=ft(this._materialRenderers,n=>n.hasWater)),this.notifyChange("updating"),!0}addGeometries(e,t){if(e.length===0)return;const i=this._validateRenderGeometries(e);for(const n of i)this._geometries.set(n.id,n);const s=this._pending.empty;for(const n of i)this._pending.adds.add(n);s&&this.notifyChange("updating"),t===Si.UPDATE&&this._notifyGraphicGeometryChanged(e)}removeGeometries(e,t){const i=this._pending.empty,s=this._pending.adds;for(const n of e)s.has(n)?(this._pending.removed.add(n),s.delete(n)):this._pending.removed.has(n)||this._pending.removes.add(n),this._geometries.delete(Al(n.id));i&&!this._pending.empty&&this.notifyChange("updating"),t===Si.UPDATE&&this._notifyGraphicGeometryChanged(e)}modifyGeometries(e,t){const i=this._changes.updates.length===0;for(const s of e){const n=this._changes.updates.pushNew();n.renderGeometry=this._validateRenderGeometry(s),n.updateType=t}switch(i&&this._changes.updates.length>0&&this.notifyChange("updating"),t){case je.TRANSFORMATION:case je.VERTEXATTRS:return this._notifyGraphicGeometryChanged(e);case je.VISIBILITIES:return this._notifyGraphicVisibilityChanged(e)}}updateAnimation(e){let t=!1;return this._sortedMaterialRenderers.forAll(({materialRenderer:i})=>t=i.updateAnimation(e)||t),t}render(e,t){for(let i=0;i<this._sortedMaterialRenderers.length;i++){const s=this._sortedMaterialRenderers.data[i];s.material.shouldRender(e)&&s.materialRenderer.render(e.output,t)}}intersect(e,t,i,s,n){return this._geometries.forEach(a=>{if(s&&!s(a))return;this._intersectRenderGeometry(a,i,t,0,e,n);const o=this.rendererContext.longitudeCyclical;o&&(a.boundingSphere[0]-a.boundingSphere[3]<o.min&&this._intersectRenderGeometry(a,i,t,o.range,e,n),a.boundingSphere[0]+a.boundingSphere[3]>o.max&&this._intersectRenderGeometry(a,i,t,-o.range,e,n)),n++}),n}_updateSortedMaterialRenderers(){this._sortedMaterialRenderers.clear();let e=0;this._materialRenderers.forEach((t,i)=>{i.insertOrder=e++,this._sortedMaterialRenderers.push({material:i,materialRenderer:t})}),this._sortedMaterialRenderers.sort((t,i)=>{const s=i.material.renderPriority-t.material.renderPriority;return s!==0?s:t.material.insertOrder-i.material.insertOrder})}_processAddsRemoves(){this._changes.adds.clear(),this._changes.removes.clear(),this._changes.adds.pushArray(Array.from(this._pending.adds)),this._changes.removes.pushArray(Array.from(this._pending.removes));for(let e=0;e<this._changes.updates.length;){const t=this._changes.updates.data[e];this._pending.has(t.renderGeometry)?this._changes.updates.removeUnorderedIndex(e):e++}this._pending.clear()}_intersectRenderGeometry(e,t,i,s,n,a){if(!e.instanceParameters.visible)return;let o=0;C(e.transformation)&&(s+=e.transformation[12],o=e.transformation[13]),ri[0]=i[0]-s,ri[1]=i[1]-o,ri[2]=1,ii[0]=i[0]-s,ii[1]=i[1]-o,ii[2]=0,e.screenToWorldRatio=this.rendererContext.screenToWorldRatio,e.material.intersect(e,null,e.getShaderTransformation(),n,ri,ii,(l,c,d)=>{Wu(t,d,e.material.renderPriority,a,n,e.layerUid,e.graphicUid)},e.calculateShaderTransformation,t)}_notifyGraphicGeometryChanged(e){if(V(this.drapeSource.notifyGraphicGeometryChanged))return;let t;for(const i of e){const s=i.graphicUid;C(s)&&s!==t&&(this.drapeSource.notifyGraphicGeometryChanged(s),t=s)}}_notifyGraphicVisibilityChanged(e){if(V(this.drapeSource.notifyGraphicVisibilityChanged))return;let t;for(const i of e){const s=i.graphicUid;C(s)&&s!==t&&(this.drapeSource.notifyGraphicVisibilityChanged(s),t=s)}}_validateRenderGeometries(e){for(const t of e)this._validateRenderGeometry(t);return e}_validateRenderGeometry(e){return V(e.origin)&&(e.origin=this._localOriginFactory.getOrigin(e.boundingSphere)),e}get test(){return{sortedMaterialRenderers:this._sortedMaterialRenderers}}};v([ze()],tt.prototype,"drapeSource",void 0),v([ze()],tt.prototype,"updating",null),v([ze()],tt.prototype,"rctx",null),v([ze()],tt.prototype,"rendererContext",void 0),v([ze()],tt.prototype,"_materialRepository",null),v([ze()],tt.prototype,"_localOriginFactory",null),tt=v([Do("esri.views.3d.webgl-engine.lib.SortedRenderGeometryRenderer")],tt);class Bu{constructor(){this.adds=new Set,this.removes=new Set,this.removed=new Set}get empty(){return this.adds.size===0&&this.removes.size===0&&this.removed.size===0}has(e){return this.adds.has(e)||this.removes.has(e)||this.removed.has(e)}clear(){this.adds.clear(),this.removes.clear(),this.removed.clear()}}function Wu(r,e,t,i,s,n,a){const o={layerUid:n,graphicUid:a,triangleNr:e},l=c=>{c.set(xt.OVERLAY,o,r.dist,r.normal,r.transformation,t,i)};if((s.results.min.drapedLayerOrder==null||t>=s.results.min.drapedLayerOrder)&&(s.results.min.dist==null||s.results.ground.dist<=s.results.min.dist)&&l(s.results.min),s.options.store!==zt.MIN&&(s.results.max.drapedLayerOrder==null||t<s.results.max.drapedLayerOrder)&&(s.results.max.dist==null||s.results.ground.dist>s.results.max.dist)&&l(s.results.max),s.options.store===zt.ALL){const c=lu(s.ray);l(c),s.results.all.push(c)}}const ri=I(),ii=I();class Ni extends vr{initializeProgram(e){return new _r(e.rctx,Ni.shader.get().build(),Vr)}initializePipeline(){return this.configuration.hasAlpha?Xe({blending:so(Ze.SRC_ALPHA,Ze.ONE,Ze.ONE_MINUS_SRC_ALPHA,Ze.ONE_MINUS_SRC_ALPHA),colorWrite:it}):Xe({colorWrite:it})}}Ni.shader=new yr(dl,()=>xr(()=>import("./TextureOnly.glsl-04b6aa71.js"),["assets/TextureOnly.glsl-04b6aa71.js","assets/vec4f64-939de194.js","assets/ScreenSpacePass-6db805f2.js","assets/typedArrayUtil-d9bc5fbd.js","assets/vec2-ab9f47bf.js","assets/common-c186b691.js","assets/vec2f64-30dc1443.js","assets/Error-57322e92.js","assets/string-480f3e3f.js","assets/VertexAttribute-9c5c630d.js","assets/SSAOHelper-868f5969.js","assets/OrderIndependentTransparency-68bd812c.js","assets/enums-64ab819c.js","assets/cast-a534ae90.js","assets/ensureType-25b8cc06.js","assets/nextTick-3ee5a785.js","assets/promiseUtils-32d9c228.js","assets/vec3-1863987c.js","assets/vec3f64-6cd30318.js","assets/Util-289ce3b5.js","assets/vec4-46a9b36d.js","assets/triangle-8cd02c5d.js","assets/sphere-622880b9.js","assets/mathUtils-57aba1ea.js","assets/mat4-7dde83b1.js","assets/byteSizeEstimations-90c5a50d.js","assets/quatf64-c94bd656.js","assets/mat4f64-fbeb2cd1.js","assets/lineSegment-c6f0b9d1.js","assets/Indices-d9b791ce.js","assets/compilerUtils-fefa73ae.js","assets/Evented-cbf5f368.js","assets/request-f17a8ddb.js","assets/preload-helper-101896b7.js","assets/requestImageUtils-f656eddc.js","assets/SSAO.glsl-3068f7bf.js","assets/assets-a5ce5e1a.js","assets/Texture-411ca148.js","assets/context-util-d4c193b5.js","assets/VertexArrayObject-3630ef4f.js","assets/mat4f32-77b3d8ac.js","assets/BufferView-478024d2.js","assets/aaBoundingBox-4a83dbbc.js","assets/Extent-a1a1de42.js","assets/aaBoundingRect-b340cf8c.js","assets/ViewingMode-915d19cb.js","assets/mat3-9a8d9db7.js","assets/quat-ec16a584.js","assets/vec3f32-4322908d.js","assets/SSAOBlur.glsl-ea338452.js","assets/VertexElementDescriptor-2925c6af.js"]));let dn=class extends _o{constructor(){super(...arguments),this.hasAlpha=!1}};v([S()],dn.prototype,"hasAlpha",void 0);let Ke=class extends Vh(Eo){constructor(r){super(r),this._overlays=null,this._overlayRenderTarget=null,this._hasHighlights=!1,this._rendersOccluded=!1,this._hasWater=!1,this._handles=new Po,this._renderers=new Map,this._sortedDrapeSourceRenderersDirty=!1,this._sortedRenderers=new Ee,this._passParameters=new hl,this._rctx=null,this._materialRepository=null,this._screenToWorldRatio=1,this._localOriginFactory=null,this.worldToPCSRatio=1,this.events=new $o,this.longitudeCyclical=null}get _bindParameters(){return this._renderContext.bindParameters}get rctx(){return this._rctx}get materialRepository(){return this._materialRepository}get screenToWorldRatio(){return this._screenToWorldRatio}get localOriginFactory(){return this._localOriginFactory}initialize(){const r=this.view._stage.renderView;this._rctx=r.renderingContext;const e=r.waterTextureRepository;this._stippleTextureRepository=new Vc(r.renderingContext),this._shaderTechniqueRepository=new zh({rctx:this._rctx,viewingMode:St.Local,stippleTextureRepository:this._stippleTextureRepository,waterTextureRepository:e}),this._renderContext=new Jh(this._rctx,new Qh(this._rctx,this.view.state.viewingMode),new ul(this._shaderTechniqueRepository,this._rctx,()=>{})),this._handles.add([Vi(()=>e.updating,()=>this.events.emit("content-changed"),ha),Vi(()=>this.spatialReference,t=>this._localOriginFactory=new Wh(t),ha),Sc(()=>this.view.allLayerViews,"after-changes",()=>this._sortedDrapeSourceRenderersDirty=!0)]),this._materialRepository=new Hh(r.textureRepository,this._shaderTechniqueRepository,t=>{(t.renderOccluded&Qa)>0!==this._rendersOccluded&&this._updateRendersOccluded(),this.events.emit("content-changed"),this.notifyChange("updating")},()=>this.events.emit("content-changed")),this._bindParameters.slot=j.DRAPED_MATERIAL,this._bindParameters.highlightDepthTexture=pl(this._rctx),this._bindParameters.camera=$t,this._bindParameters.transparencyPassType=K.NONE,this._bindParameters.newLighting.noonFactor=0,this._bindParameters.newLighting.globalFactor=0,this._bindParameters.newLighting.set([new fl(nr(1,1,1))]),this._handles.add(this.view.resourceController.scheduler.registerTask(Mc.STAGE,this))}dispose(){this._handles.destroy(),this._renderers.forEach(r=>r.destroy()),this._renderers.clear(),this._debugTextureTechnique=Rl(this._debugTextureTechnique),this._passParameters.texture=Le(this._passParameters.texture),this._bindParameters.highlightDepthTexture=Le(this._bindParameters.highlightDepthTexture),this._shaderTechniqueRepository=Le(this._shaderTechniqueRepository),this._temporaryFBO=Le(this._temporaryFBO),this._quadVAO=Le(this._quadVAO),this.disposeOverlays()}get updating(){return this._sortedDrapeSourceRenderersDirty||ft(this._renderers,r=>r.updating)}get hasOverlays(){return C(this._overlays)&&C(this._overlayRenderTarget)}get gpuMemoryUsage(){return C(this._overlayRenderTarget)?this._overlayRenderTarget.gpuMemoryUsage:0}createGeometryDrapeSourceRenderer(r){return this.createDrapeSourceRenderer(r,tt)}createDrapeSourceRenderer(r,e,t){const i=this._renderers.get(r);C(i)&&i.destroy();const s=new e({...t,rendererContext:this,drapeSource:r});return this._renderers.set(r,s),this._sortedDrapeSourceRenderersDirty=!0,"fullOpacity"in r&&this._handles.add(Vi(()=>r.fullOpacity,()=>this.events.emit("content-changed")),r),s}removeDrapeSourceRenderer(r){if(V(r))return;const e=this._renderers.get(r);V(e)||(this._sortedDrapeSourceRenderersDirty=!0,this._renderers.delete(r),this._handles.remove(r),e.destroy())}collectUnusedRenderTargetMemory(r){let e=!1;if(C(this._overlayRenderTarget))for(const t of this._overlayRenderTarget.renderTargets){const i=this.overlays[0].validTargets[t.type]||!this.overlays[1].validTargets[t.type];e=this._overlayRenderTarget.validateUsageForTarget(i,t,r)||e}return e}get overlays(){return k(this._overlays,[])}ensureDrapeTargets(r){C(this._overlays)&&this._overlays.forEach(e=>e.hasTargetWithoutRasterImage=Ui(r,t=>t.drapeTargetType===xs.WithoutRasterImage))}ensureDrapeSources(r){C(this._overlays)&&this._overlays.forEach(e=>{e.hasDrapedFeatureSource=Ui(r,t=>t.drapeSourceType===Mr.Features),e.hasDrapedRasterSource=Ui(r,t=>t.drapeSourceType===Mr.RasterImage)})}ensureOverlays(r,e){V(this._overlays)&&(this._overlayRenderTarget=new Nh(this._rctx),this._overlays=[new ba(ai.INNER,this._overlayRenderTarget),new ba(ai.OUTER,this._overlayRenderTarget)]),this.ensureDrapeTargets(r),this.ensureDrapeSources(e)}disposeOverlays(){this._overlays=null,this._overlayRenderTarget=Le(this._overlayRenderTarget),this.events.emit("textures-disposed")}get running(){return this.updating}runTask(r){this._processDrapeSources(r,()=>!0)}_processDrapeSources(r,e){let t=!1;for(const[i,s]of this._renderers){if(r.done)break;(i.destroyed||e(i))&&s.commitChanges()&&(t=!0,r.madeProgress())}this._sortedDrapeSourceRenderersDirty&&(this._sortedDrapeSourceRenderersDirty=!1,t=!0,this._updateSortedDrapeSourceRenderers()),t&&(C(this._overlays)&&this._renderers.size===0&&this.disposeOverlays(),this.notifyChange("updating"),this.events.emit("content-changed"),this._updateHasHighlights(),this._updateRendersOccluded(),this._updateHasWater())}processSyncDrapeSources(){this._processDrapeSources(Lc,r=>r.updatePolicy===hs.SYNC)}isEmpty(){if(ia.OVERLAY_DRAW_DEBUG_TEXTURE)return!1;for(const r of this._renderers.values())if(!r.isEmpty)return!1;return!0}get hasHighlights(){return this._hasHighlights}get hasWater(){return this._hasWater}get rendersOccluded(){return this._rendersOccluded}updateAnimation(r){let e=!1;return this._renderers.forEach(t=>e=t.updateAnimation(r)||e),e}updateDrapeSourceOrder(){this._sortedDrapeSourceRenderersDirty=!0}drawTarget(r,e,t){const i=r.canvasGeometries;if(i.numViews===0)return!1;this._screenToWorldRatio=t*r.mapUnitsPerPixel;const s=e.output;if(this.isEmpty()||s===w.Highlight&&!this.hasHighlights||s===w.Normal&&!this.hasWater||!r.hasSomeSizedView())return!1;const n=e.fbo;if(!n.isValid())return!1;const a=2*r.resolution,o=r.resolution;n.resize(a,o);const l=this._rctx;$t.pixelRatio=r.pixelRatio*t,this._renderContext.output=s,this._bindParameters.screenToWorldRatio=this._screenToWorldRatio,this._bindParameters.screenToPCSRatio=this._screenToWorldRatio*this.worldToPCSRatio,this._bindParameters.slot=s===w.Normal?j.DRAPED_WATER:j.DRAPED_MATERIAL,r.applyViewport(this._rctx),n.bind(l),r.index===ai.INNER&&(l.setClearColor(0,0,0,0),l.clearSafe(pi.COLOR_BUFFER_BIT));const c=e.type===re.ColorNoRasterImage?dt.ExcludeRasterImage:e.type===re.Occluded?dt.OccludedOnly:dt.Normal;if(c===dt.OccludedOnly&&(this._renderContext.renderOccludedMask=Qa),ia.OVERLAY_DRAW_DEBUG_TEXTURE&&c!==dt.OccludedOnly)for(let d=0;d<i.numViews;d++)this._setViewParameters(i.extents[d],r,$t),this._drawDebugTexture(r.resolution,qu[r.index]);return this._renderers.size>0&&this._sortedRenderers.forAll(({drapeSource:d,renderer:h})=>{if(c===dt.ExcludeRasterImage&&d.drapeSourceType===Mr.RasterImage)return;const{fullOpacity:f}=d,p=C(f)&&f<1&&s===w.Color;p&&(this.bindTemporaryFramebuffer(this._rctx,a,o),l.clearSafe(pi.COLOR_BUFFER_BIT));for(let m=0;m<i.numViews;m++)this._setViewParameters(i.extents[m],r,$t),h.render(this._renderContext,this._bindParameters);p&&C(this._temporaryFBO)&&(n.bind(l),this.view._stage.renderView.compositingHelper.compositeOverlay(this._renderContext.bindParameters,this._temporaryFBO.getTexture(),f,r.index))}),l.bindFramebuffer(null),n.generateMipMap(),this._renderContext.resetRenderOccludedMask(),!0}bindTemporaryFramebuffer(r,e,t){V(this._temporaryFBO)&&(this._temporaryFBO=new cn(r,!1)),this._temporaryFBO.resize(e,t),this._temporaryFBO.bind(r)}async reloadShaders(){await this._shaderTechniqueRepository.reloadAll()}notifyContentChanged(){this.events.emit("content-changed")}intersect(r,e,t,i){var n;let s=0;for(const a of this._renderers.values())s=((n=a.intersect)==null?void 0:n.call(a,r,e,t,i,s))??s}_updateSortedDrapeSourceRenderers(){if(this._sortedRenderers.clear(),this._renderers.size===0)return;const r=this.view.map.allLayers;this._renderers.forEach((e,t)=>{const i=r.indexOf(t.layer);this._sortedRenderers.push(new ku(t,e,i<0?1/0:i))}),this._sortedRenderers.sort((e,t)=>e.index-t.index)}_setViewParameters(r,e,t){t.viewport[0]=t.viewport[1]=0,t.viewport[2]=t.viewport[3]=e.resolution,Co(t.projectionMatrix,0,r[2]-r[0],0,r[3]-r[1],t.near,t.far),Vl(t.viewMatrix,[-r[0],-r[1],0]),this._bindParameters.camera=t}_updateHasWater(){const r=ft(this._renderers,e=>e.hasWater);r!==this._hasWater&&(this._hasWater=r,this.events.emit("has-water",r))}_updateHasHighlights(){const r=ft(this._renderers,e=>e.hasHighlights);r!==this._hasHighlights&&(this._hasHighlights=r,this.events.emit("has-highlights",r))}_updateRendersOccluded(){const r=ft(this._renderers,e=>e.rendersOccluded);r!==this._rendersOccluded&&(this._rendersOccluded=r,this.events.emit("renders-occluded",r))}_drawDebugTexture(r,e){this._ensureDebugPatternResources(r,r,e);const t=this._rctx;t.bindTechnique(this._debugTextureTechnique,this._passParameters,null),t.bindVAO(this._quadVAO),t.drawArrays(fr.TRIANGLE_STRIP,0,Oc(this._quadVAO,"geometry"))}_ensureDebugPatternResources(r,e,t){if(U(this._passParameters.color,t[0],t[1],t[2]),this._passParameters.texture)return;const i=new Uint8Array(r*e*4);let s=0;for(let a=0;a<e;a++)for(let o=0;o<r;o++){const l=Math.floor(o/10),c=Math.floor(a/10);l<2||c<2||10*l>r-20||10*c>e-20?(i[s++]=255,i[s++]=255,i[s++]=255,i[s++]=255):(i[s++]=255,i[s++]=255,i[s++]=255,i[s++]=1&l&&1&c?1&o^1&a?0:255:1&l^1&c?0:128)}this._passParameters.texture=new Yt(this._rctx,{target:$r.TEXTURE_2D,pixelFormat:ur.RGBA,dataType:Lr.UNSIGNED_BYTE,samplingMode:ui.NEAREST,width:r,height:e},i);const n=new dn;n.hasAlpha=!0,this._debugTextureTechnique=this._shaderTechniqueRepository.acquire(Ni,n),this._quadVAO=ml(this._rctx)}get test(){return{drapeSourceRenderers:this._renderers,getDrapeSourceRenderer:r=>this._renderers.get(r)}}};var dt;v([ze()],Ke.prototype,"_sortedDrapeSourceRenderersDirty",void 0),v([Ra()],Ke.prototype,"_shaderTechniqueRepository",void 0),v([Ra()],Ke.prototype,"_stippleTextureRepository",void 0),v([ze({constructOnly:!0})],Ke.prototype,"view",void 0),v([ze()],Ke.prototype,"worldToPCSRatio",void 0),v([ze()],Ke.prototype,"spatialReference",void 0),v([ze({type:Boolean,readOnly:!0})],Ke.prototype,"updating",null),Ke=v([Do("esri.views.3d.terrain.OverlayRenderer")],Ke),function(r){r[r.Normal=0]="Normal",r[r.OccludedOnly=1]="OccludedOnly",r[r.ExcludeRasterImage=2]="ExcludeRasterImage"}(dt||(dt={}));let ku=class{constructor(e,t,i){this.drapeSource=e,this.renderer=t,this.index=i}};const qu=[[1,.5,.5],[.5,.5,1]],$t=new Mi;$t.near=1,$t.far=1e4,$t.relativeElevation=null;const Xu=-2,Qa=gt.OccludeAndTransparent;function sg(r,e,t,i){const s=r.type==="polygon"?mi.CCW_IS_HOLE:mi.NONE,n=r.type==="polygon"?r.rings:r.paths,{position:a,outlines:o}=Io(n,r.hasZ,s),l=new Float64Array(a.length),c=Td(a,r.spatialReference,0,l,0,a,0,a.length/3,e,t,i),d=c!=null;return{lines:d?hn(o,a,l):[],projectionSuccess:d,sampledElevation:c}}function ag(r,e){const t=r.type==="polygon"?mi.CCW_IS_HOLE:mi.NONE,i=r.type==="polygon"?r.rings:r.paths,{position:s,outlines:n}=Io(i,!1,t),a=fi(s,r.spatialReference,0,s,e,0,s.length/3);for(let o=2;o<s.length;o+=3)s[o]=Xu;return{lines:a?hn(n,s):[],projectionSuccess:a}}function hn(r,e,t){const i=new Array;for(const{index:s,count:n}of r){if(n<=1)continue;const a=3*s,o=a+3*n;i.push({position:e.subarray(a,o),mapPosition:t?t.subarray(a,o):void 0})}return i}class Zu{constructor(){this.visible=!0}}class og{constructor(e,t,i={}){this.data=e,this.material=t,this.boundingSphere=Qe(),this.instanceParameters=new Zu,this._transformation=X(),this._shaderTransformationDirty=!0,this.layerUid=k(i.layerUid,null),this.graphicUid=k(i.graphicUid,null),this.id=i.id?i.id:Br(),this.boundingInfo=k(i.boundingInfo,null),this.calculateShaderTransformation=k(i.calculateShaderTransformation,null),this.castShadow=!!i.castShadow&&i.castShadow}get transformation(){return this._transformation}updateTransformation(e){e(this._transformation),this._shaderTransformationDirty=!0,this.computeBoundingSphere(this._transformation,this.boundingSphere)}shaderTransformationChanged(){this._shaderTransformationDirty=!0}computeBoundingSphere(e,t,i=ls(e)){V(this.boundingInfo)||(q(t,this.boundingInfo.getCenter(),e),t[3]=this.boundingInfo.getBSRadius()*i)}get hasShaderTransformation(){return C(this.calculateShaderTransformation)}get primitiveType(){return this.data.primitiveType}getShaderTransformation(){return V(this.calculateShaderTransformation)?k(this.transformation,dr):(this._shaderTransformationDirty&&(this._shaderTransformation||(this._shaderTransformation=X()),qe(this._shaderTransformation,this.calculateShaderTransformation(k(this.transformation,dr))),this._shaderTransformationDirty=!1),this._shaderTransformation)}computeAttachmentOrigin(e){if(this.material.computeAttachmentOrigin)return!!this.material.computeAttachmentOrigin(this,e)&&(C(this._transformation)&&q(e,e,this._transformation),!0);const t=this.indices.get(u.POSITION),i=this.vertexAttributes.get(u.POSITION);return!!gl(i,t,e)&&(C(this._transformation)&&q(e,e,this._transformation),!0)}get indices(){return this.data.indices}get vertexAttributes(){return this.data.vertexAttributes}addHighlight(){const e=new fs(ds.Highlight),t=this.instanceParameters;return t.highlights=us(t.highlights,e),e}removeHighlight(e){const t=this.instanceParameters;t.highlights=ps(t.highlights,e)}}function Ju(r){const e=new Gr,{vertex:t,fragment:i}=e;return e.include(Es,r),e.include(go,r),e.include(Go,r),jr(t,r),r.stippleEnabled&&(e.attributes.add(u.UV0,"vec2"),e.attributes.add(u.AUXPOS1,"vec3"),t.uniforms.add(new Ae("viewport",(s,n)=>n.camera.fullViewport))),e.attributes.add(u.POSITION,"vec3"),e.varyings.add("vpos","vec3"),t.code.add(g`void main(void) {
vpos = position;
forwardNormalizedVertexColor();
gl_Position = transformPosition(proj, view, vpos);`),r.stippleEnabled&&(t.code.add(g`vec4 vpos2 = transformPosition(proj, view, auxpos1);
vec2 ndcToPixel = viewport.zw * 0.5;
float lineSegmentPixelSize = length((vpos2.xy / vpos2.w - gl_Position.xy / gl_Position.w) * ndcToPixel);`),r.draped?t.uniforms.add(new H("worldToScreenRatio",(s,n)=>1/n.screenToPCSRatio)):t.code.add(g`vec3 segmentCenter = (position + auxpos1) * 0.5;
float worldToScreenRatio = computeWorldToScreenRatio(segmentCenter);`),t.code.add(g`float discreteWorldToScreenRatio = discretizeWorldToScreenRatio(worldToScreenRatio);`),r.draped?t.code.add(g`float startPseudoScreen = uv0.y * discreteWorldToScreenRatio - mix(0.0, lineSegmentPixelSize, uv0.x);
float segmentLengthPseudoScreen = lineSegmentPixelSize;`):t.code.add(g`float segmentLengthRender = length(position - auxpos1);
float startPseudoScreen = mix(uv0.y, uv0.y - segmentLengthRender, uv0.x) * discreteWorldToScreenRatio;
float segmentLengthPseudoScreen = segmentLengthRender * discreteWorldToScreenRatio;`),t.uniforms.add(new H("stipplePatternPixelSize",s=>Us(s))),t.code.add(g`vec2 stippleDistanceLimits = computeStippleDistanceLimits(startPseudoScreen, segmentLengthPseudoScreen, lineSegmentPixelSize, stipplePatternPixelSize);
vStippleDistance = mix(stippleDistanceLimits.x, stippleDistanceLimits.y, uv0.x);
vStippleDistance *= gl_Position.w;`)),t.code.add(g`}`),r.output===w.Highlight&&e.include(Di,r),e.include(pt,r),i.uniforms.add(new H("alphaCoverage",(s,n)=>Math.min(1,s.width*n.camera.pixelRatio))),r.hasVertexColors||i.uniforms.add(new Ae("constantColor",s=>s.color)),i.code.add(g`
  void main() {
    discardBySlice(vpos);

    vec4 color = ${r.hasVertexColors?"vColor":"constantColor"};

    float stippleAlpha = getStippleAlpha();
    discardByStippleAlpha(stippleAlpha, stippleAlphaColorDiscard);

    vec4 finalColor = blendStipple(vec4(color.rgb, color.a * alphaCoverage), stippleAlpha);

    if (finalColor.a < ${g.float(Ne)}) {
      discard;
    }

    ${r.output===w.Color?g`gl_FragColor = highlightSlice(finalColor, vpos);`:""}
    ${r.output===w.Highlight?g`outputHighlight();`:""}
  }
  `),e}const Qu=Object.freeze(Object.defineProperty({__proto__:null,build:Ju},Symbol.toStringTag,{value:"Module"}));class Fi extends vr{get _stippleEnabled(){return this.configuration.stippleEnabled&&this.configuration.output!==w.Highlight}initializeConfiguration(e,t){t.hasWebGL2Context=e.rctx.type===Ii.WEBGL2}initializeProgram(e){return new _r(e.rctx,Fi.shader.get().build(this.configuration),Vr)}initializePipeline(){const e=this.configuration,t=so(Ze.SRC_ALPHA,Ze.ONE,Ze.ONE_MINUS_SRC_ALPHA,Ze.ONE_MINUS_SRC_ALPHA),i=(s,n=null,a=null)=>Xe({blending:n,depthTest:ho,depthWrite:a,colorWrite:it,stencilWrite:e.hasOccludees?ci:null,stencilTest:e.hasOccludees?s?di:Ds:null});return e.output===w.Color?(this._occludeePipelineState=i(!0,e.transparent||this._stippleEnabled?t:null,lr),i(!1,e.transparent||this._stippleEnabled?t:null,lr)):i(!1)}get primitiveType(){return fr.LINES}getPipelineState(e,t){return t?this._occludeePipelineState:super.getPipelineState(e,t)}}Fi.shader=new yr(Qu,()=>xr(()=>import("./NativeLine.glsl-40bbaee8.js"),["assets/NativeLine.glsl-40bbaee8.js","assets/SSAOHelper-868f5969.js","assets/typedArrayUtil-d9bc5fbd.js","assets/OrderIndependentTransparency-68bd812c.js","assets/enums-64ab819c.js","assets/cast-a534ae90.js","assets/string-480f3e3f.js","assets/Error-57322e92.js","assets/ensureType-25b8cc06.js","assets/nextTick-3ee5a785.js","assets/promiseUtils-32d9c228.js","assets/vec3-1863987c.js","assets/vec3f64-6cd30318.js","assets/common-c186b691.js","assets/Util-289ce3b5.js","assets/vec2f64-30dc1443.js","assets/vec4-46a9b36d.js","assets/vec4f64-939de194.js","assets/triangle-8cd02c5d.js","assets/sphere-622880b9.js","assets/mathUtils-57aba1ea.js","assets/mat4-7dde83b1.js","assets/byteSizeEstimations-90c5a50d.js","assets/quatf64-c94bd656.js","assets/mat4f64-fbeb2cd1.js","assets/lineSegment-c6f0b9d1.js","assets/Indices-d9b791ce.js","assets/VertexAttribute-9c5c630d.js","assets/ScreenSpacePass-6db805f2.js","assets/vec2-ab9f47bf.js","assets/compilerUtils-fefa73ae.js","assets/Evented-cbf5f368.js","assets/request-f17a8ddb.js","assets/preload-helper-101896b7.js","assets/requestImageUtils-f656eddc.js","assets/SSAO.glsl-3068f7bf.js","assets/assets-a5ce5e1a.js","assets/Texture-411ca148.js","assets/context-util-d4c193b5.js","assets/VertexArrayObject-3630ef4f.js","assets/mat4f32-77b3d8ac.js","assets/BufferView-478024d2.js","assets/aaBoundingBox-4a83dbbc.js","assets/Extent-a1a1de42.js","assets/aaBoundingRect-b340cf8c.js","assets/ViewingMode-915d19cb.js","assets/mat3-9a8d9db7.js","assets/quat-ec16a584.js","assets/vec3f32-4322908d.js","assets/SSAOBlur.glsl-ea338452.js","assets/VertexElementDescriptor-2925c6af.js","assets/plane-46a8c767.js","assets/ElevationInfo-88554f24.js","assets/jsonMap-190c5593.js","assets/fieldUtils-77ec75e2.js","assets/arcadeOnDemand-5175e7d9.js","assets/geometry-eec1b371.js","assets/Polyline-b571c705.js","assets/typeUtils-cd52dc20.js","assets/lengthUtils-92fed992.js","assets/unitUtils-dd6fb8ee.js","assets/index-7dfdb274.js","assets/Basemap-f70b1b37.js","assets/Collection-7c37b74e.js","assets/SimpleObservable-8e532943.js","assets/collectionUtils-0365f48b.js","assets/deprecate-0d93948c.js","assets/Loadable-46524a7e.js","assets/Promise-368b703a.js","assets/loadAll-01cdf0a9.js","assets/asyncUtils-087555fc.js","assets/Portal-51616380.js","assets/locale-30120714.js","assets/PortalGroup-d495847c.js","assets/PortalUser-e16fc7d1.js","assets/PortalItem-6eebfb2b.js","assets/messages-28bf3b89.js","assets/writeUtils-3bde6e49.js","assets/layerUtils-68eea656.js","assets/Color-af6e0c66.js","assets/colorUtils-639f4d25.js","assets/enumeration-61a13175.js","assets/opacityUtils-1333f803.js","assets/CollectionFlattener-f43a0fce.js","assets/TablesMixin-a4aaaf91.js","assets/Layer-ead8c88c.js","assets/Identifiable-093f90a8.js","assets/Graphic-1859ae71.js","assets/PopupTemplate-52faab17.js","assets/Clonable-9b34e760.js","assets/number-2ab8ca0d.js","assets/symbols-75e7a993.js","assets/CIMSymbol-8f02a6e3.js","assets/Symbol-8266348e.js","assets/screenUtils-90993e16.js","assets/symbolLayerUtils3D-c8c40895.js","assets/persistableUrlUtils-56d43b12.js","assets/jsonUtils-c6684c52.js","assets/Cyclical-078b4564.js","assets/reactiveUtils-5869e41a.js","assets/workers-5d67fe7a.js","assets/Connection-b756149d.js","assets/Queue-275a6362.js","assets/intl-70c09a3c.js","assets/projection-0af97a56.js","assets/zscale-48bab05e.js","assets/TileInfo-c5c8c8d2.js","assets/widget-09d2e7af.js","assets/uuid-73213768.js","assets/dom-5b7af1bf.js","assets/HandleOwner-2edbba46.js","assets/executeQueryJSON-0696009a.js","assets/normalizeUtils-6483f6b5.js","assets/query-71223310.js","assets/pbfQueryUtils-c922ef32.js","assets/pbf-8b0546e8.js","assets/OptimizedFeature-73582c6e.js","assets/OptimizedFeatureSet-1d1ac4b9.js","assets/queryZScale-3c8de33a.js","assets/FeatureSet-9cc47aef.js","assets/Field-1d4f9ca4.js","assets/fieldType-b34e5d2d.js","assets/Query-13124a97.js","assets/TimeExtent-2004eecf.js","assets/RelationshipQuery-c27267ab.js","assets/LegendOptions-2e7b3d70.js","assets/utils-4aa03157.js","assets/BlendLayer-813950f9.js","assets/parser-01f6451e.js","assets/ItemCache-bf1028d4.js","assets/MemCache-1d2f56ee.js","assets/utils-0c7f5071.js","assets/jsonUtils-559e9000.js","assets/UniqueValueRenderer-30750d31.js","assets/diffUtils-8a8cb5bc.js","assets/colorRamps-8d7efc14.js","assets/sizeVariableUtils-d4870b0d.js","assets/jsonUtils-eb568237.js","assets/styleUtils-015eeecd.js","assets/DictionaryLoader-326d0e17.js","assets/LRUCache-b9228ca3.js","assets/heatmapUtils-3d7c22c5.js","assets/featureConversionUtils-d2229ed4.js","assets/TopFeaturesQuery-9aca00bf.js","assets/FeatureLayer-9a7e04cf.js","assets/MultiOriginJSONSupport-b8792dfa.js","assets/LayerFloorInfo-e7c896e5.js","assets/FeatureLayerBase-d5682b4b.js","assets/HeightModelInfo-34f16d74.js","assets/arcgisLayerUrl-6e9db12f.js","assets/OperationalLayer-1dad72ac.js","assets/editsZScale-12d81957.js","assets/APIKeyMixin-b6e4f897.js","assets/ArcGISService-e571bcff.js","assets/CustomParametersMixin-a5d06ccc.js","assets/EditBusLayer-b5dc3689.js","assets/FeatureReductionLayer-1e5c4045.js","assets/labelingInfo-be3a629c.js","assets/labelUtils-4f4b54c6.js","assets/defaultsJSON-59981e75.js","assets/OrderedLayer-9623e905.js","assets/PortalLayer-9dd15f09.js","assets/RefreshableLayer-49182ab8.js","assets/ScaleRangeLayer-c072e266.js","assets/TemporalLayer-f784dd83.js","assets/TimeInfo-f76d6c20.js","assets/FeatureTemplate-c4496b93.js","assets/FeatureType-0be9420b.js","assets/fieldProperties-9e220f14.js","assets/FieldsIndex-16707836.js","assets/versionUtils-f229b9a6.js","assets/styleUtils-08eaa4d2.js","assets/popupUtils-88fed094.js","assets/colorUtils-82440b70.js","assets/mat2d-d0b91e3e.js","assets/Scheduler-5e6ccc87.js","assets/GraphicsLayer-a7c6f685.js","assets/unitBezier-881ac1eb.js","assets/mat3f32-d3d088e8.js","assets/vec2f32-461e65a9.js","assets/TileStrategy-a5366189.js","assets/TileStore-8f580dbf.js","assets/TileKey-9cae9369.js","assets/rbush-8e36784a.js","assets/quickselect-322ec8e1.js","assets/capabilities-d08b6e58.js","assets/Subtype-a3103d84.js","assets/datetime-4f774298.js","assets/elevationInfoUtils-44cce436.js","assets/QueryEngineResult-eb704fb1.js","assets/utils-52ad3c09.js","assets/generateRendererUtils-2f0b667c.js","assets/WhereClause-6c9440a1.js","assets/utils-63166b41.js","assets/json-48e3ea08.js","assets/EffectView-dffeb0bc.js","assets/ExportImageParameters-3714ed4b.js","assets/sublayerUtils-eea48c01.js","assets/webStyleSymbolUtils-6bef877f.js","assets/devEnvironmentUtils-5002a058.js","assets/dehydratedFeatures-3dcd65f1.js","assets/enums-4b2a86a0.js","assets/index-a8abe695.css","assets/InterleavedLayout-b5930508.js","assets/types-e1c0a5bf.js","assets/triangulationUtils-6b510de4.js","assets/earcut-58237617.js","assets/deduplicate-d92c3cc2.js","assets/NestedMap-1b5db22e.js","assets/Octree-8ed6dc77.js","assets/floatRGBA-090399ba.js","assets/boundedPlane-296928f6.js","assets/glUtil-7aa58841.js"]));class De extends gr{constructor(){super(...arguments),this.output=w.Color,this.hasSlicePlane=!1,this.hasVertexColors=!1,this.transparent=!1,this.draped=!1,this.stippleEnabled=!1,this.stippleOffColorEnabled=!1,this.stipplePreferContinuous=!0,this.hasOccludees=!1}}v([S({count:w.COUNT})],De.prototype,"output",void 0),v([S()],De.prototype,"hasSlicePlane",void 0),v([S()],De.prototype,"hasVertexColors",void 0),v([S()],De.prototype,"transparent",void 0),v([S()],De.prototype,"draped",void 0),v([S()],De.prototype,"stippleEnabled",void 0),v([S()],De.prototype,"stippleOffColorEnabled",void 0),v([S()],De.prototype,"stipplePreferContinuous",void 0),v([S()],De.prototype,"hasOccludees",void 0),v([S({constValue:!1})],De.prototype,"stippleRequiresClamp",void 0),v([S({constValue:!1})],De.prototype,"stippleScaleWithLineWidth",void 0),v([S({constValue:!1})],De.prototype,"stippleRequiresStretchMeasure",void 0);var Oi;(function(r){r[r.START=0]="START",r[r.END=1]="END"})(Oi||(Oi={}));class ng extends Ur{constructor(e){super(e,new ep),this._configuration=new De}getConfiguration(e,t){this._configuration.output=e,this._configuration.hasSlicePlane=this.parameters.hasSlicePlane,this._configuration.hasVertexColors=this.parameters.hasVertexColors,this._configuration.transparent=this.parameters.color[3]<1||this.parameters.width<1,this._configuration.draped=t.slot===j.DRAPED_MATERIAL;const i=C(this.parameters.stipplePattern);return this._configuration.stippleEnabled=i,this._configuration.stippleOffColorEnabled=i&&C(this.parameters.stippleOffColor),this._configuration.hasOccludees=this.parameters.hasOccludees,this._configuration.stipplePreferContinuous=this.parameters.stipplePreferContinuous,this._configuration}intersect(e,t,i,s,n,a,o,l,c){C(c)?vl(e,s,c,a,1,o):this._intersectLineGeometry(e,t,i,s,o)}_intersectLineGeometry(e,t,i,s,n){if(!s.options.selectionMode||Ri(t))return;if(!wo(i))return void Hr.getLogger("esri.views.3d.webgl-engine.materials.NativeLineMaterial").error("intersection assumes a translation-only matrix");const a=e.vertexAttributes.get(u.POSITION).data,o=s.camera,l=rp;Sr(l,s.point);const c=2;U(Pr[0],l[0]-c,l[1]+c,0),U(Pr[1],l[0]+c,l[1]+c,0),U(Pr[2],l[0]+c,l[1]-c,0),U(Pr[3],l[0]-c,l[1]-c,0);for(let m=0;m<4;m++)if(!o.unprojectFromRenderScreen(Pr[m],et[m]))return;ut(o.eye,et[0],et[1],ss),ut(o.eye,et[1],et[2],as),ut(o.eye,et[2],et[3],os),ut(o.eye,et[3],et[0],ns);let d=Number.MAX_VALUE,h=0;for(let m=0;m<a.length-5;m+=3){if(_e[0]=a[m]+i[12],_e[1]=a[m+1]+i[13],_e[2]=a[m+2]+i[14],ye[0]=a[m+3]+i[12],ye[1]=a[m+4]+i[13],ye[2]=a[m+5]+i[14],ae(ss,_e)<0&&ae(ss,ye)<0||ae(as,_e)<0&&ae(as,ye)<0||ae(os,_e)<0&&ae(os,ye)<0||ae(ns,_e)<0&&ae(ns,ye)<0)continue;if(o.projectToRenderScreen(_e,Dt),o.projectToRenderScreen(ye,Et),Dt[2]<0&&Et[2]>0){ie(ke,_e,ye);const T=o.frustum,y=-ae(T[mt.NEAR],_e)/st(ke,li(T[mt.NEAR]));W(ke,ke,y),ee(_e,_e,ke),o.projectToRenderScreen(_e,Dt)}else if(Dt[2]>0&&Et[2]<0){ie(ke,ye,_e);const T=o.frustum,y=-ae(T[mt.NEAR],ye)/st(ke,li(T[mt.NEAR]));W(ke,ke,y),ee(ye,ye,ke),o.projectToRenderScreen(ye,Et)}else if(Dt[2]<0&&Et[2]<0)continue;Dt[2]=0,Et[2]=0;const _=No(sr(Dt,Et,eo),l);_<d&&(d=_,z(Ya,_e),z(Ka,ye),h=m/3)}const f=s.rayBegin,p=s.rayEnd;if(d<c*c){let m=Number.MAX_VALUE;if(Fo(sr(Ya,Ka,eo),sr(f,p,tp),Pt)){ie(Pt,Pt,f);const _=rt(Pt);W(Pt,Pt,1/_),m=_/yt(f,p)}n(m,Pt,h,!1)}}computeAttachmentOrigin(e,t){const i=e.vertexAttributes;if(!i)return!1;const s=i.get(u.POSITION);return uo(s,null,!1,t)}requiresSlot(e,t){return!(t!==w.Color&&t!==w.Highlight&&t!==w.ObjectAndLayerIdColor||e!==j.OPAQUE_MATERIAL&&e!==j.DRAPED_MATERIAL)}createGLMaterial(e){return new Yu(e)}createBufferWriter(){const e=this.parameters.hasVertexColors?ln:dh;return V(this.parameters.stipplePattern)?new Ws(e):new Ku(e.clone().vec3f(u.AUXPOS1).vec2f(u.UV0))}}class Yu extends Pi{constructor(){super(...arguments),this._stipplePattern=null}dispose(){super.dispose(),this._stippleTextureRepository.release(this._stipplePattern),this._stipplePattern=null}_updateOccludeeState(e){e.hasOccludees!==this._material.parameters.hasOccludees&&this._material.setParameters({hasOccludees:e.hasOccludees})}beginSlot(e){this._output===w.Color&&this._updateOccludeeState(e);const t=this._material.parameters.stipplePattern;return this._stipplePattern!==t&&(this._material.setParameters(this._stippleTextureRepository.swap(this._stipplePattern,t)),this._stipplePattern=t),this.ensureTechnique(Fi,e)}}class Ku{constructor(e){this.vertexBufferLayout=e}allocate(e){return this.vertexBufferLayout.createBuffer(e)}elementCount(e){return e.indices.get(u.POSITION).length}write(e,t,i,s,n){mo(i,this.vertexBufferLayout,e,t,s,n),this._writeAuxpos1(e,i,s,n),this._writeUV0(e,i,s,n)}_writeAuxpos1(e,t,i,s){const n=i.getField(u.AUXPOS1,Jl),a=t.indices.get(u.POSITION),o=t.vertexAttributes.get(u.POSITION).data,l=e,c=n.typedBufferStride,d=n.typedBuffer;s*=c;for(let h=0;h<a.length-1;h+=2)for(const f of[1,0]){const p=3*a[h+f],m=o[p],_=o[p+1],T=o[p+2],y=l[0]*m+l[4]*_+l[8]*T+l[12],x=l[1]*m+l[5]*_+l[9]*T+l[13],O=l[2]*m+l[6]*_+l[10]*T+l[14];d[s]=y,d[s+1]=x,d[s+2]=O,s+=c}}_writeUV0(e,t,i,s){var O;const n=i.getField(u.UV0,Ql),a=t.indices.get(u.POSITION),o=t.vertexAttributes.get(u.POSITION).data,l=(O=t.vertexAttributes.get(u.DISTANCETOSTART))==null?void 0:O.data,c=n.typedBufferStride,d=n.typedBuffer;let h=0;d[s*=c]=Oi.START,d[s+1]=h,s+=c;const f=3*a[0],p=U(_e,o[f],o[f+1],o[f+2]);e&&q(p,p,e);const m=ye,_=a.length-1;let T=1;const y=l?(R,b,A)=>h=l[A]:(R,b,A)=>h+=yt(R,b);for(let R=1;R<_;R+=2){const b=3*a[R];U(m,o[b],o[b+1],o[b+2]),e&&q(m,m,e),y(p,m,T++);for(let A=0;A<2;++A)d[s]=1-A,d[s+1]=h,s+=c;z(p,m)}const x=3*a[_];U(m,o[x],o[x+1],o[x+2]),e&&q(m,m,e),y(p,m,T),d[s]=Oi.END,d[s+1]=h}}class ep extends Is{constructor(){super(...arguments),this.color=Ei,this.hasVertexColors=!1,this.hasSlicePlane=!1,this.width=1,this.stipplePreferContinuous=!0,this.hasOccludees=!1,this.stippleTexture=null}}const _e=I(),ye=I(),ke=I(),Pt=I(),Dt=Ie(),Et=Ie(),Ya=I(),Ka=I(),eo=$i(),tp=$i(),rp=I(),Pr=[Ie(),Ie(),Ie(),Ie()],et=[I(),I(),I(),I()],ss=at(),as=at(),os=at(),ns=at();export{Zf as $,jf as A,bf as B,xf as C,Ld as D,Si as E,ng as F,Wf as G,cd as H,Af as I,Mi as J,gf as K,vf as L,mf as M,rm as N,Vf as O,Ss as P,nm as Q,yf as R,Yf as S,og as T,xd as U,Gd as V,Hd as W,Tf as X,Bd as Y,Cf as Z,Ue as _,Bo as a,Jf as a0,Md as a1,Xu as a2,Gf as a3,Qf as a4,je as a5,Vs as a6,Ft as a7,mr as a8,Uc as a9,Ju as aA,qd as aB,yi as aC,xu as aD,od as aa,Fr as ab,Hs as ac,Zo as ad,Ef as ae,ce as af,If as ag,_m as ah,fs as ai,du as aj,xt as ak,zt as al,lu as am,Hf as an,Bf as ao,pa as ap,ka as aq,en as ar,Cu as as,Ou as at,Vm as au,Wh as av,Uf as aw,vi as ax,nd as ay,ph as az,Sf as b,pm as c,ym as d,Mr as e,Td as f,_f as g,zd as h,sg as i,Xr as j,hh as k,zc as l,Xf as m,wf as n,Jc as o,jc as p,Of as q,vm as r,ag as s,tm as t,em as u,Ws as v,rn as w,Nc as x,Pd as y,kf as z};
