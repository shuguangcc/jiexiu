import{e as r,y as s,l as d,n as m}from"./cast-a534ae90.js";import{o as c,s as y}from"./jsonMap-190c5593.js";import{r as E,b as v}from"./typedArrayUtil-d9bc5fbd.js";import"./ensureType-25b8cc06.js";import{o as I,r as w}from"./Extent-a1a1de42.js";import{S as g}from"./fieldUtils-77ec75e2.js";import{m as f}from"./lengthUtils-92fed992.js";var u;let n=u=class extends d{constructor(e){super(e)}async collectRequiredFields(e,t){return g(e,t,this.expression)}clone(){return new u({expression:this.expression,title:this.title})}equals(e){return this.expression===e.expression&&this.title===e.title}};r([s({type:String,json:{write:!0}})],n.prototype,"expression",void 0),r([s({type:String,json:{write:!0}})],n.prototype,"title",void 0),n=u=r([m("esri.layers.support.FeatureExpressionInfo")],n);const a=n;function G(e){return f[e]!=null}function N(e){return 1/(f[e]||1)}function $(){const e=Object.keys(f);return e.sort(),e}const j=$();var p;const i=c()({onTheGround:"on-the-ground",relativeToGround:"relative-to-ground",relativeToScene:"relative-to-scene",absoluteHeight:"absolute-height"}),l=new y({foot:"feet",kilometer:"kilometers",meter:"meters",mile:"miles","us-foot":"us-feet",yard:"yards"});let o=p=class extends d{constructor(e){super(e),this.offset=null}readFeatureExpressionInfo(e,t){return e??(t.featureExpression&&t.featureExpression.value===0?{expression:"0"}:void 0)}writeFeatureExpressionInfo(e,t,x,h){t[x]=e.write({},h),e.expression==="0"&&(t.featureExpression={value:0})}get mode(){const{offset:e,featureExpressionInfo:t}=this;return this._isOverridden("mode")?this._get("mode"):E(e)||t?"relative-to-ground":"on-the-ground"}set mode(e){this._override("mode",e)}set unit(e){this._set("unit",e)}write(e,t){return this.offset||this.mode||this.featureExpressionInfo||this.unit?super.write(e,t):null}clone(){return new p({mode:this.mode,offset:this.offset,featureExpressionInfo:this.featureExpressionInfo?this.featureExpressionInfo.clone():void 0,unit:this.unit})}equals(e){return this.mode===e.mode&&this.offset===e.offset&&this.unit===e.unit&&v(this.featureExpressionInfo,e.featureExpressionInfo)}};r([s({type:a,json:{write:!0}})],o.prototype,"featureExpressionInfo",void 0),r([I("featureExpressionInfo",["featureExpressionInfo","featureExpression"])],o.prototype,"readFeatureExpressionInfo",null),r([w("featureExpressionInfo",{featureExpressionInfo:{type:a},"featureExpression.value":{type:[0]}})],o.prototype,"writeFeatureExpressionInfo",null),r([s({type:i.apiValues,nonNullable:!0,json:{type:i.jsonValues,read:i.read,write:{writer:i.write,isRequired:!0}}})],o.prototype,"mode",null),r([s({type:Number,json:{write:!0}})],o.prototype,"offset",void 0),r([s({type:j,json:{type:String,read:l.read,write:l.write}})],o.prototype,"unit",null),o=p=r([m("esri.layers.support.ElevationInfo")],o);const O=o;export{G as n,N as r,O as x};
