import{e as n,y as p,n as R}from"./cast-a534ae90.js";import{g as W}from"./Graphic-1859ae71.js";import{s as T,a as F}from"./Error-57322e92.js";import{r as d,e as z,t as H}from"./typedArrayUtil-d9bc5fbd.js";import{x as J,j as I,E as L}from"./promiseUtils-32d9c228.js";import{l as w,w as D,U as N,h as X}from"./reactiveUtils-5869e41a.js";import"./ensureType-25b8cc06.js";import{m as E}from"./multidimensionalUtils-cd526d1d.js";import{y as Y,d as K}from"./RasterVFDisplayObject-9ac4b260.js";import{y as Z}from"./LayerView2D-fc5f87cc.js";import{u as O}from"./aaBoundingRect-b340cf8c.js";import{d as ee}from"./index-7dfdb274.js";import{p as te,c as ie,d as re}from"./WGLContainer-b2d1fffc.js";import{e as V}from"./mat3f32-d3d088e8.js";import{r as M,i as j}from"./TileContainer-a618bf74.js";import{I as C}from"./enums-4ca4641f.js";import"./geometry-eec1b371.js";import{d as se}from"./HandleOwner-2edbba46.js";import{a as oe,w as ae}from"./Extent-a1a1de42.js";import{g as le,s as ne}from"./pixelUtils-cc2ca9c3.js";import{j as he}from"./TileInfo-c5c8c8d2.js";import{g as $,f as G,u as pe,a as ue}from"./RawBlockCache-7eecd523.js";import{U as ce,i as me,v as B,J as de}from"./rasterProjectionHelper-e4b94e0c.js";import{r as q,y as ye}from"./TileStrategy-a5366189.js";import{h as fe}from"./TileStore-8f580dbf.js";import"./TileKey-9cae9369.js";import{l as ge}from"./capabilities-d08b6e58.js";import{r as A}from"./util-0a217e96.js";import{j as be}from"./dataUtils-9a2072d5.js";import{s as we,i as _e}from"./mat3-9a8d9db7.js";import{g as ve}from"./OperationalLayer-1dad72ac.js";import{s as Pe}from"./popupUtils-57580c23.js";import{u as Te}from"./LayerView-a849dd77.js";import{i as Ie}from"./RefreshableLayerView-2de321c7.js";import"./string-480f3e3f.js";import"./nextTick-3ee5a785.js";import"./PopupTemplate-52faab17.js";import"./Clonable-9b34e760.js";import"./Collection-7c37b74e.js";import"./Evented-cbf5f368.js";import"./SimpleObservable-8e532943.js";import"./fieldUtils-77ec75e2.js";import"./preload-helper-101896b7.js";import"./arcadeOnDemand-5175e7d9.js";import"./jsonMap-190c5593.js";import"./enumeration-61a13175.js";import"./number-2ab8ca0d.js";import"./locale-30120714.js";import"./Identifiable-093f90a8.js";import"./symbols-75e7a993.js";import"./CIMSymbol-8f02a6e3.js";import"./Symbol-8266348e.js";import"./Color-af6e0c66.js";import"./colorUtils-639f4d25.js";import"./mathUtils-57aba1ea.js";import"./vec3-1863987c.js";import"./vec3f64-6cd30318.js";import"./common-c186b691.js";import"./vec4-46a9b36d.js";import"./screenUtils-90993e16.js";import"./opacityUtils-1333f803.js";import"./symbolLayerUtils3D-c8c40895.js";import"./aaBoundingBox-4a83dbbc.js";import"./request-f17a8ddb.js";import"./persistableUrlUtils-56d43b12.js";import"./collectionUtils-0365f48b.js";import"./Portal-51616380.js";import"./Loadable-46524a7e.js";import"./Promise-368b703a.js";import"./PortalGroup-d495847c.js";import"./PortalUser-e16fc7d1.js";import"./jsonUtils-c6684c52.js";import"./Polyline-b571c705.js";import"./VertexArrayObject-3630ef4f.js";import"./Texture-411ca148.js";import"./context-util-d4c193b5.js";import"./enums-64ab819c.js";import"./VertexElementDescriptor-2925c6af.js";import"./utils-0d179f64.js";import"./EffectView-dffeb0bc.js";import"./parser-01f6451e.js";import"./mat4f32-77b3d8ac.js";import"./mat4-7dde83b1.js";import"./MaterialKey-a0a08f8b.js";import"./alignmentUtils-ae955d28.js";import"./Utils-a4216b91.js";import"./number-954e4ab6.js";import"./enums-4b2a86a0.js";import"./definitions-2d0dd0cd.js";import"./heatmapUtils-3d7c22c5.js";import"./vec4f64-939de194.js";import"./vec2f32-461e65a9.js";import"./Basemap-f70b1b37.js";import"./deprecate-0d93948c.js";import"./loadAll-01cdf0a9.js";import"./asyncUtils-087555fc.js";import"./PortalItem-6eebfb2b.js";import"./assets-a5ce5e1a.js";import"./messages-28bf3b89.js";import"./writeUtils-3bde6e49.js";import"./layerUtils-68eea656.js";import"./compilerUtils-fefa73ae.js";import"./CollectionFlattener-f43a0fce.js";import"./TablesMixin-a4aaaf91.js";import"./Layer-ead8c88c.js";import"./Cyclical-078b4564.js";import"./workers-5d67fe7a.js";import"./Connection-b756149d.js";import"./Queue-275a6362.js";import"./intl-70c09a3c.js";import"./projection-0af97a56.js";import"./unitUtils-dd6fb8ee.js";import"./zscale-48bab05e.js";import"./widget-09d2e7af.js";import"./uuid-73213768.js";import"./dom-5b7af1bf.js";import"./byteSizeEstimations-90c5a50d.js";import"./executeQueryJSON-0696009a.js";import"./normalizeUtils-6483f6b5.js";import"./query-71223310.js";import"./pbfQueryUtils-c922ef32.js";import"./pbf-8b0546e8.js";import"./OptimizedFeature-73582c6e.js";import"./OptimizedFeatureSet-1d1ac4b9.js";import"./queryZScale-3c8de33a.js";import"./FeatureSet-9cc47aef.js";import"./Field-1d4f9ca4.js";import"./fieldType-b34e5d2d.js";import"./typeUtils-cd52dc20.js";import"./Query-13124a97.js";import"./TimeExtent-2004eecf.js";import"./RelationshipQuery-c27267ab.js";import"./LegendOptions-2e7b3d70.js";import"./utils-4aa03157.js";import"./BlendLayer-813950f9.js";import"./ItemCache-bf1028d4.js";import"./MemCache-1d2f56ee.js";import"./utils-0c7f5071.js";import"./jsonUtils-559e9000.js";import"./UniqueValueRenderer-30750d31.js";import"./diffUtils-8a8cb5bc.js";import"./colorRamps-8d7efc14.js";import"./sizeVariableUtils-d4870b0d.js";import"./lengthUtils-92fed992.js";import"./jsonUtils-eb568237.js";import"./styleUtils-015eeecd.js";import"./DictionaryLoader-326d0e17.js";import"./LRUCache-b9228ca3.js";import"./featureConversionUtils-d2229ed4.js";import"./TopFeaturesQuery-9aca00bf.js";import"./FeatureLayer-9a7e04cf.js";import"./MultiOriginJSONSupport-b8792dfa.js";import"./LayerFloorInfo-e7c896e5.js";import"./FeatureLayerBase-d5682b4b.js";import"./HeightModelInfo-34f16d74.js";import"./arcgisLayerUrl-6e9db12f.js";import"./editsZScale-12d81957.js";import"./APIKeyMixin-b6e4f897.js";import"./ArcGISService-e571bcff.js";import"./CustomParametersMixin-a5d06ccc.js";import"./EditBusLayer-b5dc3689.js";import"./FeatureReductionLayer-1e5c4045.js";import"./labelingInfo-be3a629c.js";import"./labelUtils-4f4b54c6.js";import"./defaultsJSON-59981e75.js";import"./OrderedLayer-9623e905.js";import"./PortalLayer-9dd15f09.js";import"./RefreshableLayer-49182ab8.js";import"./ScaleRangeLayer-c072e266.js";import"./TemporalLayer-f784dd83.js";import"./TimeInfo-f76d6c20.js";import"./FeatureTemplate-c4496b93.js";import"./FeatureType-0be9420b.js";import"./fieldProperties-9e220f14.js";import"./FieldsIndex-16707836.js";import"./versionUtils-f229b9a6.js";import"./styleUtils-08eaa4d2.js";import"./popupUtils-88fed094.js";import"./ElevationInfo-88554f24.js";import"./colorUtils-82440b70.js";import"./mat2d-d0b91e3e.js";import"./Scheduler-5e6ccc87.js";import"./GraphicsLayer-a7c6f685.js";import"./ViewingMode-915d19cb.js";import"./unitBezier-881ac1eb.js";import"./vec2-ab9f47bf.js";import"./vec2f64-30dc1443.js";import"./Subtype-a3103d84.js";import"./datetime-4f774298.js";import"./elevationInfoUtils-44cce436.js";import"./QueryEngineResult-eb704fb1.js";import"./utils-52ad3c09.js";import"./generateRendererUtils-2f0b667c.js";import"./WhereClause-6c9440a1.js";import"./utils-63166b41.js";import"./json-48e3ea08.js";import"./Util-289ce3b5.js";import"./ExportImageParameters-3714ed4b.js";import"./sublayerUtils-eea48c01.js";import"./webStyleSymbolUtils-6bef877f.js";import"./devEnvironmentUtils-5002a058.js";import"./dehydratedFeatures-3dcd65f1.js";import"./plane-46a8c767.js";import"./sphere-622880b9.js";import"./quatf64-c94bd656.js";import"./mat4f64-fbeb2cd1.js";import"./quat-ec16a584.js";import"./rbush-8e36784a.js";import"./quickselect-322ec8e1.js";import"./vec4f32-2f36231b.js";import"./ProgramTemplate-f021fc55.js";import"./StyleDefinition-7d58136b.js";import"./config-1337d16e.js";import"./GeometryUtils-c093d234.js";import"./earcut-58237617.js";class Re extends M{constructor(t,i,r,s,o,a,l=null){super(t,i,r,s,o,a),this.bitmap=new te(l,null,null),this.bitmap.coordScale=[o,a],this.bitmap.once("isReady",()=>this.ready())}destroy(){super.destroy(),this.bitmap.destroy(),this.bitmap=null,this.stage=null}set stencilRef(t){this.bitmap.stencilRef=t}get stencilRef(){return this.bitmap.stencilRef}setTransform(t){super.setTransform(t),this.bitmap.transforms.dvs=this.transforms.dvs}_createTransforms(){return{dvs:V(),tileMat3:V()}}onAttach(){this.bitmap.stage=this.stage}onDetach(){this.bitmap.stage=null}}let xe=class extends j{constructor(){super(...arguments),this.isCustomTilingScheme=!1}createTile(t){const i=this._getTileBounds(t),[r,s]=this._tileInfoView.tileInfo.size,o=this._tileInfoView.getTileResolution(t.level);return new Re(t,o,i[0],i[3],r,s)}prepareRenderPasses(t){const i=t.registerRenderPass({name:"imagery (tile)",brushes:[ie.raster],target:()=>this.children.map(r=>r.bitmap),drawPhase:C.MAP});return[...super.prepareRenderPasses(t),i]}doRender(t){this.visible&&t.drawPhase===C.MAP&&super.doRender(t)}_getTileBounds(t){const i=this._tileInfoView.getTileBounds(O(),t);if(this.isCustomTilingScheme&&t.world){const{tileInfo:r}=this._tileInfoView,s=ee(r.spatialReference);if(s){const{resolution:o}=r.lodAt(t.level),a=s/o%r.size[0],l=a?(r.size[0]-a)*o:0;i[0]-=l*t.world,i[2]-=l*t.world}}return i}};const Se=[0,0];let m=class extends se{constructor(){super(...arguments),this._emptyTilePixelBlock=null,this._tileStrategy=null,this._tileInfoView=null,this._fetchQueue=null,this._blockCacheRegistryUrl=null,this._blockCacheRegistryId=null,this._srcResolutions=null,this.previousLOD=null,this._needBlockCacheUpdate=!1,this._globalSymbolizerParams=null,this._symbolizerParams=null,this._abortController=null,this._isCustomTilingScheme=!1,this._globalUpdateRequested=!1,this.attached=!1,this.container=null,this.layer=null,this.timeExtent=null,this.redrawOrRefetch=J((e,t)=>!this.previousLOD||this.layerView.suspended?Promise.resolve():e?this.updatingHandles.addPromise(this.doRefresh()):this.updatingHandles.addPromise(this._redrawImage(t)))}get useWebGLForProcessing(){return this._get("useWebGLForProcessing")??!0}set useWebGLForProcessing(e){this._set("useWebGLForProcessing",e)}get useProgressiveUpdate(){return this._get("useProgressiveUpdate")==null||this._get("useProgressiveUpdate")}set useProgressiveUpdate(e){if(this._tileStrategy&&this.useProgressiveUpdate!==e){this._tileStrategy.destroy(),this.container.removeAllChildren();const t=this._getCacheSize(e);this._tileStrategy=new q({cachePolicy:"purge",acquireTile:i=>this.acquireTile(i),releaseTile:i=>this.releaseTile(i),cacheSize:t,tileInfoView:this._tileInfoView}),this._set("useProgressiveUpdate",e),this.layerView.requestUpdate()}}update(e){var o;this._fetchQueue.pause(),this._fetchQueue.state=e.state,this._tileStrategy.update(e),this._fetchQueue.resume();const{extent:t,resolution:i,scale:r}=e.state,s=this._tileInfoView.getClosestInfoForScale(r);if(this.layer.raster){if(!this.useProgressiveUpdate||this._needBlockCacheUpdate){const a=this._srcResolutions[s.level],l=t.toJSON?t:oe.fromJSON(t);$(this._blockCacheRegistryUrl,this._blockCacheRegistryId,l,i,a,this.layer.raster.ioConfig.sampling)}this._needBlockCacheUpdate=!1,((o=this.previousLOD)==null?void 0:o.level)!==s.level&&(this.previousLOD=s,this._symbolizerParams==null||this.layerView.hasTilingEffects||this._updateSymbolizerParams(),this._tileStrategy.updateCacheSize(0))}}moveEnd(){!this.layerView.hasTilingEffects&&this.useProgressiveUpdate||(this._abortController&&this._abortController.abort(),this._abortController=new AbortController,this._fetchQueue.length===0&&this._redrawImage(this._abortController.signal).then(()=>{this._globalUpdateRequested=!1,this.layerView.requestUpdate()}));const e=this._getCacheSize(this.useProgressiveUpdate);this._tileStrategy.updateCacheSize(e),this.layerView.requestUpdate()}get updating(){var e;return((e=this._fetchQueue)==null?void 0:e.updating)||this._globalUpdateRequested||!(!this.updatingHandles||!this.updatingHandles.updating)}attach(){ge("2d").supportsTextureFloat||(this.useWebGLForProcessing=!1),this._initializeTileInfo(),this._tileInfoView=new fe(this.layerView.tileInfo,this.layerView.fullExtent);const e=this._computeFetchConcurrency();this._fetchQueue=new ye({tileInfoView:this._tileInfoView,concurrency:e,process:(i,r)=>this._fetchTile1(i,r)});const t=this._getCacheSize(this.useProgressiveUpdate);this._tileStrategy=new q({cachePolicy:"purge",acquireTile:i=>this.acquireTile(i),releaseTile:i=>this.releaseTile(i),cacheSize:t,tileInfoView:this._tileInfoView}),this._updateBlockCacheRegistry()}detach(){this._tileStrategy.destroy(),this._fetchQueue.clear(),this.container.removeAllChildren(),this._fetchQueue=this._tileStrategy=this._tileInfoView=null,G(this._blockCacheRegistryUrl,this._blockCacheRegistryId),this._blockCacheRegistryUrl=this._blockCacheRegistryId=null}acquireTile(e){const t=this.container.createTile(e);return this._enqueueTileFetch(t),this.layerView.requestUpdate(),this._needBlockCacheUpdate=!0,this._globalUpdateRequested=this.layerView.hasTilingEffects||!this.useProgressiveUpdate,t}releaseTile(e){this._fetchQueue.abort(e.key.id),this.container.removeChild(e),e.once("detach",()=>{e.destroy(),this.layerView.requestUpdate()}),this.layerView.requestUpdate()}createEmptyTilePixelBlock(e=null){const t=e==null||e.join(",")===this._tileInfoView.tileInfo.size.join(",");if(t&&d(this._emptyTilePixelBlock))return this._emptyTilePixelBlock;e=e||this._tileInfoView.tileInfo.size;const[i,r]=e,s=new le({width:i,height:r,pixels:[new Uint8Array(i*r)],mask:new Uint8Array(i*r),pixelType:"u8"});return t&&(this._emptyTilePixelBlock=s),s}_fetchTile1(e,t){const i=d(t)&&t.signal,r=this.canUseWebGLForProcessing(),{layerView:s}=this,o=!s.tileInfo.isWrappable&&d(ce(s.view.spatialReference)),a={allowPartialFill:!0,datumTransformation:s.datumTransformation,interpolation:r?"nearest":this.layer.interpolation,registryId:this._blockCacheRegistryId,requestRawData:r,signal:z(i),srcResolution:this._srcResolutions[e.level],timeExtent:s.timeExtent,tileInfo:s.tileInfo,disableWrapAround:o};return this.fetchTile(e,a)}_getCacheSize(e){return e?40:0}_initializeTileInfo(){const e=this.layerView.view.spatialReference,t=new ae({x:this.layerView.fullExtent.xmin,y:this.layerView.fullExtent.ymax,spatialReference:e}),{scales:i,srcResolutions:r,isCustomTilingScheme:s}=me(this.layer.rasterInfo,e),o=he.create({spatialReference:e,size:512,scales:i});(o.origin.x===0||o.origin.x>t.x)&&(o.origin=t),this._isCustomTilingScheme=s,this.layerView.set("tileInfo",o),this._srcResolutions=r??[]}_computeFetchConcurrency(){const{blockBoundary:e}=this.layer.rasterInfo.storageInfo,t=e[e.length-1];return(t.maxCol-t.minCol+1)*(t.maxRow-t.minRow+1)>64?2:10}async _enqueueTileFetch(e,t){this.updatingHandles.addPromise(this._enqueueTileFetch1(e,t))}async _enqueueTileFetch1(e,t){if(!this._fetchQueue.has(e.key.id)){try{const i=await this._fetchQueue.push(e.key),{bandIds:r}=this.layer;let s=!this.useProgressiveUpdate||this.layerView.hasTilingEffects&&!this._globalSymbolizerParams;if(this._globalUpdateRequested&&!this.layerView.moving&&this._fetchQueue.length===0){s=!1;try{await this._redrawImage(this._abortController&&this._abortController.signal)}catch(l){I(l)&&T.getLogger(this.declaredClass).error(l)}this._globalUpdateRequested=!1}!this.canUseWebGLForProcessing()&&this.type!=="rasterVF"||this.layerView.hasTilingEffects||this._symbolizerParams!=null||this._updateSymbolizerParams();const o=this._tileInfoView.getTileCoords(Se,e.key),a=this._tileInfoView.getTileResolution(e.key);await this.updateTileSource(e,{source:i,symbolizerParams:this._symbolizerParams,globalSymbolizerParams:this._globalSymbolizerParams,suspended:s,bandIds:r,coords:o,resolution:a}),e.once("attach",()=>this.layerView.requestUpdate()),this.container.addChild(e)}catch(i){I(i)||T.getLogger(this.declaredClass).error(i)}this.layerView.requestUpdate()}}async _redrawImage(e){if(this.container.children.length===0)return;await this.layer.updateRenderer(),this.layerView.hasTilingEffects?await this._updateGlobalSymbolizerParams(e):(this._updateSymbolizerParams(),this._globalSymbolizerParams=null);const t=this.container.children.map(async i=>this.updateTileSymbolizerParameters(i,{local:this._symbolizerParams,global:this._globalSymbolizerParams}));await L(t),this.container.requestRender()}async _updateGlobalSymbolizerParams(e){const t={srcResolution:this._srcResolutions[this.previousLOD.level],registryId:this._blockCacheRegistryId,signal:e},i=await this.layer.fetchPixels(this.layerView.view.extent,this.layerView.view.width,this.layerView.view.height,t);if(!i||!i.pixelBlock)return;const r=this.layer.symbolizer.generateWebGLParameters({pixelBlock:ne(i.pixelBlock,this.layer.bandIds),isGCS:this.layerView.view.spatialReference.isGeographic,resolution:{x:this.previousLOD.resolution,y:this.previousLOD.resolution},bandIds:this.layer.bandIds});!this.canUseWebGLForProcessing()&&r&&r.type==="stretch"&&this.layer.renderer&&this.layer.renderer.type==="raster-stretch"&&(r.factor=r.factor.map(s=>255*s),r.outMin=Math.round(255*r.outMin),r.outMax=Math.round(255*r.outMax)),this._globalSymbolizerParams=r}_updateSymbolizerParams(){this._symbolizerParams=this.layer.symbolizer.generateWebGLParameters({pixelBlock:null,isGCS:this.layerView.view.spatialReference.isGeographic,resolution:{x:this.previousLOD.resolution,y:this.previousLOD.resolution},bandIds:this.layer.bandIds})}_updateBlockCacheRegistry(e=!1){const{url:t,rasterInfo:i,raster:r}=this.layer,{multidimensionalDefinition:s}=this.layer.normalizeRasterFetchOptions({multidimensionalDefinition:this.layer.multidimensionalDefinition,timeExtent:this.layerView.timeExtent}),o=i!=null&&i.multidimensionalInfo?r.getSliceIndex(s):null,a=ue(t,o);if(a!==this._blockCacheRegistryUrl){if(this._blockCacheRegistryUrl!=null&&G(this._blockCacheRegistryUrl,this._blockCacheRegistryId),this._blockCacheRegistryId=pe(a,this.layer.raster.rasterInfo),e){const l=this._tileInfoView.getClosestInfoForScale(this.layerView.view.scale),u=this._srcResolutions[l.level];$(a,this._blockCacheRegistryId,this.layerView.view.extent,this.layerView.view.resolution,u,this.layer.raster.ioConfig.sampling)}this._blockCacheRegistryUrl=a}}async doRefresh(){if(!this.attached)return;await this.layer.updateRenderer(),this.layerView.hasTilingEffects||this._updateSymbolizerParams(),this._updateBlockCacheRegistry(!0),this._fetchQueue.reset();const e=[];this._globalUpdateRequested=this.layerView.hasTilingEffects||!this.useProgressiveUpdate,this._tileStrategy.tiles.forEach(t=>e.push(this._enqueueTileFetch(t))),await L(e)}};n([p()],m.prototype,"_fetchQueue",void 0),n([p()],m.prototype,"_globalUpdateRequested",void 0),n([p()],m.prototype,"attached",void 0),n([p()],m.prototype,"container",void 0),n([p()],m.prototype,"layer",void 0),n([p()],m.prototype,"layerView",void 0),n([p()],m.prototype,"type",void 0),n([p()],m.prototype,"useWebGLForProcessing",null),n([p()],m.prototype,"useProgressiveUpdate",null),n([p()],m.prototype,"timeExtent",void 0),n([p()],m.prototype,"updating",null),m=n([R("esri.views.2d.layers.imagery.BaseImageryTileSubView2D")],m);let _=class extends m{constructor(){super(...arguments),this.container=null,this.layer=null,this.type="raster"}attach(){super.attach(),this.container=new xe(this._tileInfoView),this.container.isCustomTilingScheme=this._isCustomTilingScheme}detach(){super.detach(),this.container.removeAllChildren(),this.container=null}canUseWebGLForProcessing(){return this.useWebGLForProcessing&&this.layer.symbolizer.canRenderInWebGL&&!(this.layer.interpolation==="majority"&&A(this.layer))}fetchTile(e,t){return this.layer.fetchTile(e.level,e.row,e.col,t)}async updateTileSource(e,t){const{bandIds:i}=this.layer,r=this._getLayerInterpolation(),s=this.canUseWebGLForProcessing(),{source:o,globalSymbolizerParams:a,suspended:l,coords:u,resolution:c}=t,f=this.layerView.hasTilingEffects?a:t.symbolizerParams,{bitmap:h}=e;if([h.x,h.y]=u,h.resolution=c,o&&d(o)&&d(o.pixelBlock)){const y={extent:o.extent,pixelBlock:o.pixelBlock};if(h.rawPixelData=y,s)h.source=o.pixelBlock,h.isRendereredSource=!1;else{const b=await this.layer.applyRenderer(y,(a==null?void 0:a.type)==="stretch"?a:null);h.source=b,h.isRendereredSource=!0}h.symbolizerParameters=s?f:null,s?h.transformGrid||(h.transformGrid=o.transformGrid):h.transformGrid=null}else{const y=this.createEmptyTilePixelBlock();h.source=y,h.symbolizerParameters=s?f:null,h.transformGrid=null}h.bandIds=s?i:null,h.width=this._tileInfoView.tileInfo.size[0],h.height=this._tileInfoView.tileInfo.size[1],h.interpolation=r,h.suspended=l,h.invalidateTexture()}async updateTileSymbolizerParameters(e,t){const{local:i,global:r}=t,{bandIds:s}=this.layer,o=this._getLayerInterpolation(),a=this.canUseWebGLForProcessing(),{bitmap:l}=e,{rawPixelData:u}=l;!a&&d(u)?(l.source=await this.layer.applyRenderer(u,(r==null?void 0:r.type)==="stretch"?r:null),l.isRendereredSource=!0):(l.isRendereredSource&&d(u)&&(l.source=u.pixelBlock),l.isRendereredSource=!1),l.symbolizerParameters=a?this.layerView.hasTilingEffects?r:i:null,l.bandIds=a?s:null,l.interpolation=o,l.suspended=!1}_getLayerInterpolation(){const e=this.layer.renderer.type;if(e==="raster-colormap"||e==="unique-value"||e==="class-breaks")return"nearest";const{interpolation:t}=this.layer,{renderer:i}=this.layer;return i.type==="raster-stretch"&&i.colorRamp!=null?t==="bilinear"||t==="cubic"?"bilinear":"nearest":t}};n([p()],_.prototype,"container",void 0),n([p()],_.prototype,"layer",void 0),n([p()],_.prototype,"type",void 0),_=n([R("esri.views.2d.layers.imagery.ImageryTileView2D")],_);const Ve=_;class Ce extends M{constructor(t,i,r,s,o,a,l=null){super(t,i,r,s,o,a),this.tileData=new Y(l),this.tileData.coordScale=[o,a],this.tileData.once("isReady",()=>this.ready())}destroy(){super.destroy(),this.tileData.destroy(),this.tileData=null,this.stage=null}set stencilRef(t){this.tileData.stencilRef=t}get stencilRef(){return this.tileData.stencilRef}_createTransforms(){return{dvs:V(),tileMat3:V()}}setTransform(t){super.setTransform(t);const i=this.resolution/(t.resolution*t.pixelRatio),r=this.transforms.tileMat3,[s,o]=this.tileData.offset,a=[this.x+s*this.resolution,this.y-o*this.resolution],[l,u]=t.toScreenNoRotation([0,0],a),{symbolTileSize:c}=this.tileData.symbolizerParameters,f=Math.round((this.width-this.tileData.offset[0])/c)*c,h=Math.round((this.height-this.tileData.offset[1])/c)*c,y=f/this.rangeX*i,b=h/this.rangeY*i;we(r,y,0,0,0,b,0,l,u,1),_e(this.transforms.dvs,t.displayViewMat3,r),this.tileData.transforms.dvs=this.transforms.dvs}onAttach(){this.tileData.stage=this.stage}onDetach(){this.tileData.stage=null}}class Ue extends j{constructor(){super(...arguments),this.isCustomTilingScheme=!1,this.symbolTypes=["triangle"]}createTile(t){const i=this._tileInfoView.getTileBounds(O(),t),[r,s]=this._tileInfoView.tileInfo.size,o=this._tileInfoView.getTileResolution(t.level);return new Ce(t,o,i[0],i[3],r,s)}prepareRenderPasses(t){const i=t.registerRenderPass({name:"imagery (vf tile)",brushes:[re],target:()=>this.children.map(r=>r.tileData),drawPhase:C.MAP});return[...super.prepareRenderPasses(t),i]}doRender(t){this.visible&&t.drawPhase===C.MAP&&this.symbolTypes.forEach(i=>{t.renderPass=i,super.doRender(t)})}}let v=class extends m{constructor(){super(...arguments),this._handle=null,this.container=null,this.layer=null,this.type="rasterVF"}canUseWebGLForProcessing(){return!1}async fetchTile(e,t){t={...t,interpolation:"nearest",requestProjectedLocalDirections:!0};const i=await this.layer.fetchTile(e.level,e.row,e.col,t);return this.layer.rasterInfo.dataType==="vector-magdir"&&(i!=null&&i.pixelBlock)&&(i.pixelBlock=await this.layer.convertVectorFieldData(i.pixelBlock,t)),i}updateTileSource(e,t){const i=t.symbolizerParams,{tileData:r}=e;r.key=e.key,r.width=this._tileInfoView.tileInfo.size[0],r.height=this._tileInfoView.tileInfo.size[1];const{symbolTileSize:s}=i,{source:o}=t;if(r.offset=this._getTileSymbolOffset(r.key,s),d(o)&&d(o.pixelBlock)){const a={extent:o.extent,pixelBlock:o.pixelBlock};r.rawPixelData=a,r.symbolizerParameters=i,r.source=this._sampleVectorFieldData(o.pixelBlock,i,r.offset)}else{const a=[Math.round((this._tileInfoView.tileInfo[0]-r.offset[0])/s),Math.round((this._tileInfoView.tileInfo[1]-r.offset[1])/s)],l=this.createEmptyTilePixelBlock(a);r.source=l,r.symbolizerParameters=i}return r.invalidateVAO(),Promise.resolve(null)}updateTileSymbolizerParameters(e,t){var a;const i=t.local,{symbolTileSize:r}=i,{tileData:s}=e;s.offset=this._getTileSymbolOffset(s.key,r);const o=s.symbolizerParameters.symbolTileSize;return s.symbolizerParameters=i,d((a=s.rawPixelData)==null?void 0:a.pixelBlock)&&o!==r&&(s.source=this._sampleVectorFieldData(s.rawPixelData.pixelBlock,s.symbolizerParameters,s.offset)),Promise.resolve(null)}attach(){super.attach(),this.container=new Ue(this._tileInfoView),this.container.isCustomTilingScheme=this._isCustomTilingScheme,this._updateSymbolType(this.layer.renderer),this._handle=w(()=>this.layer.renderer,e=>this._updateSymbolType(e))}detach(){super.detach(),this.container.removeAllChildren(),this._handle.remove(),this._handle=null}_getTileSymbolOffset(e,t){const i=e.col*this._tileInfoView.tileInfo.size[0]%t,r=e.row*this._tileInfoView.tileInfo.size[1]%t;return[i>t/2?t-i:-i,r>t/2?t-r:-r]}_sampleVectorFieldData(e,t,i){const{symbolTileSize:r}=t;return be(e,"vector-uv",r,i)}_updateSymbolType(e){e.type==="vector-field"&&(this.container.symbolTypes=e.style==="wind-barb"?["scalar","triangle"]:e.style==="simple-scalar"?["scalar"]:["triangle"])}};n([p()],v.prototype,"container",void 0),n([p()],v.prototype,"layer",void 0),n([p()],v.prototype,"type",void 0),v=n([R("esri.views.2d.layers.imagery.VectorFieldTileView2D")],v);const ze=v,ke=e=>{let t=class extends e{constructor(){super(...arguments),this._rasterFieldPrefix="Raster.",this.layer=null,this.view=null,this.tileInfo=null}get fullExtent(){return this._getfullExtent()}_getfullExtent(){return this.projectFullExtent(this.view.spatialReference)}get hasTilingEffects(){return this.layer.renderer&&"dynamicRangeAdjustment"in this.layer.renderer&&this.layer.renderer.dynamicRangeAdjustment}get datumTransformation(){return B(z(this.layer.fullExtent),this.view.spatialReference,!0)}supportsSpatialReference(i){return!!this.projectFullExtent(i)}projectFullExtent(i){const r=z(this.layer.fullExtent),s=B(r,i,!1);return de(r,i,s)}async fetchPopupFeatures(i,r){const{layer:s}=this;if(!i)throw new F("imageryTileLayerView:fetchPopupFeatures","Nothing to fetch without area",{layer:s});const{popupEnabled:o}=s,a=Pe(s,r);if(!o||H(a))throw new F("imageryTileLayerView:fetchPopupFeatures","Missing required popupTemplate or popupEnabled",{popupEnabled:o,popupTemplate:a});const l=[],{value:u,magdirValue:c}=await s.identify(i,{timeExtent:this.timeExtent});let f="";if(u&&u.length){f=s.type==="imagery-tile"&&s.hasStandardTime()&&u[0]!=null?u.map(U=>s.getStandardTimeValue(U)).join(", "):u.join(", ");const h={ObjectId:0};h["Raster.ServicePixelValue"]=f;const y=s.rasterInfo.attributeTable;if(d(y)){const{fields:U,features:Q}=y,k=U.find(({name:g})=>g.toLowerCase()==="value"),S=k?Q.find(g=>String(g.attributes[k.name])===f):null;if(S)for(const g in S.attributes)S.attributes.hasOwnProperty(g)&&(h[this._rasterFieldPrefix+g]=S.attributes[g])}const b=s.rasterInfo.dataType;b!=="vector-magdir"&&b!=="vector-uv"||(h["Raster.Magnitude"]=c==null?void 0:c[0],h["Raster.Direction"]=c==null?void 0:c[1]);const x=new W(this.fullExtent.clone(),null,h);x.layer=s,x.sourceLayer=x.layer,l.push(x)}return l}};return n([p()],t.prototype,"layer",void 0),n([p(ve)],t.prototype,"timeExtent",void 0),n([p()],t.prototype,"view",void 0),n([p()],t.prototype,"fullExtent",null),n([p()],t.prototype,"tileInfo",void 0),n([p({readOnly:!0})],t.prototype,"hasTilingEffects",null),t=n([R("esri.views.layers.ImageryTileLayerView")],t),t};let P=class extends ke(Ie(Z(Te))){constructor(){super(...arguments),this._useWebGLForProcessing=!0,this._useProgressiveUpdate=!0,this.subview=null}get useWebGLForProcessing(){return this._useWebGLForProcessing}set useWebGLForProcessing(e){this._useWebGLForProcessing=e,this.subview&&"useWebGLForProcessing"in this.subview&&(this.subview.useWebGLForProcessing=e)}get useProgressiveUpdate(){return this._useWebGLForProcessing}set useProgressiveUpdate(e){this._useProgressiveUpdate=e,this.subview&&"useProgressiveUpdate"in this.subview&&(this.subview.useProgressiveUpdate=e)}update(e){this.subview.update(e),this.notifyChange("updating")}isUpdating(){return!this.subview||this.subview.updating}attach(){this.layer.increaseRasterJobHandlerUsage(),this._updateSubview(),this.handles.add([w(()=>{const{layer:e}=this;return{bandIds:e.bandIds,renderer:e.renderer,interpolation:e.interpolation,multidimensionalDefinition:e.multidimensionalDefinition,rasterFunction:e.type==="imagery-tile"?e.rasterFunction:null}},(e,t)=>{var l,u;const i=e.interpolation!==t.interpolation&&(e.interpolation==="majority"||t.interpolation==="majority")&&A(this.layer),r=e.renderer!==t.renderer&&((l=t.renderer)==null?void 0:l.type)!==((u=e.renderer)==null?void 0:u.type);r&&this._updateSubview();const s=e.multidimensionalDefinition!==t.multidimensionalDefinition,o=e.rasterFunction!==t.rasterFunction,a=s||i||r||o;this.subview.redrawOrRefetch(a).catch(c=>{I(c)||T.getLogger(this.declaredClass).error(c)}),this.notifyChange("updating")}),w(()=>this.layer.blendMode??"normal",e=>{this.subview.container.blendMode=e},D),w(()=>this.layer.effect??null,e=>{this.subview.container.effect=e},D),w(()=>this.layer.multidimensionalSubset??null,(e,t)=>{const{multidimensionalDefinition:i}=this.layer;d(i)&&E(i,e)!==E(i,t)&&(this.subview.redrawOrRefetch(!0).catch(r=>{I(r)||T.getLogger(this.declaredClass).error(r)}),this.notifyChange("updating"))},N),w(()=>this.timeExtent,()=>{this.subview.timeExtent=this.timeExtent,this.subview.redrawOrRefetch(!0).catch(e=>{I(e)||T.getLogger(this.declaredClass).error(e)})},X)],"attach")}detach(){var e;this.handles.remove("attach"),this.layer.decreaseRasterJobHandlerUsage(),this._detachSubview(this.subview),(e=this.subview)==null||e.destroy(),this.subview=null}moveStart(){this.requestUpdate()}viewChange(){this.requestUpdate()}moveEnd(){this.subview.moveEnd()}async hitTest(e,t){return[{type:"graphic",layer:this.layer,mapPoint:e,graphic:new W({attributes:{},geometry:e.clone()})}]}doRefresh(){var e;return(e=this.subview)==null?void 0:e.doRefresh()}_updateSubview(){var r;const e=this.layer.renderer.type==="vector-field"?"rasterVF":this.layer.renderer.type==="flow"?"flow":"raster";if(this.subview){if(this.subview.type===e)return void this._attachSubview(this.subview);this._detachSubview(this.subview),(r=this.subview)==null||r.destroy(),this.subview=null}const{layer:t}=this;let i;i=e==="rasterVF"?new ze({layer:t,layerView:this}):e==="flow"?new K({layer:t,layerView:this}):new Ve({layer:t,layerView:this}),"useWebGLForProcessing"in i&&(i.useWebGLForProcessing=this._useWebGLForProcessing),"useProgressiveUpdate"in i&&(i.useProgressiveUpdate=this._useProgressiveUpdate),"previousLOD"in i&&(i.previousLOD=this.subview&&"previousLOD"in this.subview&&this.subview.previousLOD),this._attachSubview(i),this.subview=i,this.requestUpdate()}_attachSubview(e){e&&!e.attached&&(e.attach(),e.attached=!0,this.container.addChildAt(e.container,0),e.container.blendMode=this.layer.blendMode,e.container.effect=this.layer.effect)}_detachSubview(e){e!=null&&e.attached&&(this.container.removeChild(e.container),e.detach(),e.attached=!1)}};n([p()],P.prototype,"subview",void 0),n([p()],P.prototype,"useWebGLForProcessing",null),n([p()],P.prototype,"useProgressiveUpdate",null),P=n([R("esri.views.2d.layers.ImageryTileLayerView2D")],P);const Fs=P;export{Fs as default};
