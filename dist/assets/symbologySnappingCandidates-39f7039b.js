import{y as g,c as y}from"./string-480f3e3f.js";import{e as $}from"./LRUCache-b9228ca3.js";import{r as z}from"./ensureType-25b8cc06.js";import{r as _,t as b}from"./typedArrayUtil-d9bc5fbd.js";import{f as x}from"./promiseUtils-32d9c228.js";import{L as I}from"./unitUtils-dd6fb8ee.js";import{r as v}from"./ElevationInfo-88554f24.js";function N(s=!1,e){if(s){const{elevationInfo:t,alignPointsInFeatures:n,spatialReference:o}=e;return new V(t,n,o)}return new w}let w=class{async alignCandidates(e,t){return e}notifyElevationSourceChange(){}};const j=1024;class V{constructor(e,t,n){this._elevationInfo=e,this._alignPointsInFeatures=t,this.spatialReference=n,this._alignmentsCache=new $(j),this._cacheVersion=0,this._metersPerVerticalUnit=I(n)}async alignCandidates(e,t){const n=this._elevationInfo;return _(n)&&n.mode==="absolute-height"&&!n.featureExpressionInfo?(this._alignAbsoluteElevationCandidates(e,n),e):this._alignComputedElevationCandidates(e,t)}notifyElevationSourceChange(){this._alignmentsCache.clear(),this._cacheVersion++}_alignAbsoluteElevationCandidates(e,t){const{offset:n,unit:o}=t;if(b(n))return;const i=n*(v(o??"meters")/this._metersPerVerticalUnit);for(const a of e)switch(a.type){case"edge":a.start.z+=i,a.end.z+=i;continue;case"vertex":a.target.z+=i;continue}}async _alignComputedElevationCandidates(e,t){const n=new Map;for(const c of e)z(n,c.objectId,S).push(c);const[o,i,a]=this._prepareQuery(n),r=await this._alignPointsInFeatures(o,t);if(x(t),a!==this._cacheVersion)return this._alignComputedElevationCandidates(e,t);this._applyCacheAndResponse(o,r,i);const{drapedObjectIds:h,failedObjectIds:d}=r,f=[];for(const c of e){const{objectId:u}=c;h.has(u)&&c.type==="edge"&&(c.draped=!0),d.has(u)||f.push(c)}return f}_prepareQuery(e){const t=[],n=[];for(const[o,i]of e){const a=[];for(const r of i)this._addToQueriesOrCachedResult(o,r.target,a,n),r.type==="edge"&&(this._addToQueriesOrCachedResult(o,r.start,a,n),this._addToQueriesOrCachedResult(o,r.end,a,n));a.length!==0&&t.push({objectId:o,points:a})}return[t,n,this._cacheVersion]}_addToQueriesOrCachedResult(e,t,n,o){const i=C(e,t),a=this._alignmentsCache.get(i);_(a)?o.push(new E(t,a)):n.push(t)}_applyCacheAndResponse(e,{elevations:t,drapedObjectIds:n,failedObjectIds:o},i){for(const h of i)h.apply();let a=0;const r=this._alignmentsCache;for(const{objectId:h,points:d}of e){if(o.has(h)){a+=d.length;continue}const f=!n.has(h);for(const c of d){const u=C(h,c),l=t[a++];c.z=l,f&&r.put(u,l,1)}}}}class E{constructor(e,t){this.point=e,this.z=t}apply(){this.point.z=this.z}}function C(s,{x:e,y:t,z:n}){return`${s}-${e}-${t}-${n??0}}`}function S(){return[]}class O{filter(e,t){return t}notifyElevationSourceChange(){}}let R=class{filter(e,t){const{point:n,distance:o}=e,{z:i}=n;if(i==null||t.length===0)return t;const a=A(o),r=this._updateCandidatesTo3D(t,n,a).filter(Q);return r.sort(F),r}_updateCandidatesTo3D(e,t,n){for(const o of e)switch(o.type){case"edge":T(o,t,n);continue;case"vertex":P(o,t,n);continue}return e}};function Q(s){return s.distance<=1}function Y(s=!1){return s?new R:new O}function T(s,e,{x:t,y:n,z:o}){const{start:i,end:a,target:r}=s;s.draped||M(r,e,i,a);const h=(e.x-r.x)/t,d=(e.y-r.y)/n,f=(e.z-r.z)/o;s.distance=Math.sqrt(h*h+d*d+f*f)}function M(s,e,t,n){const o=n.x-t.x,i=n.y-t.y,a=n.z-t.z,r=o*o+i*i+a*a,h=(e.x-t.x)*o+(e.y-t.y)*i+a*(e.z-t.z),d=Math.min(1,Math.max(0,h/r)),f=t.x+o*d,c=t.y+i*d,u=t.z+a*d;s.x=f,s.y=c,s.z=u}function P(s,e,{x:t,y:n,z:o}){const{target:i}=s,a=(e.x-i.x)/t,r=(e.y-i.y)/n,h=(e.z-i.z)/o,d=Math.sqrt(a*a+r*r+h*h);s.distance=d}function A(s){return typeof s=="number"?{x:s,y:s,z:s}:s}function F(s,e){return s.distance-e.distance}function Z(s=!1,e){return s?new U(e):new q}class q{async fetch(){return[]}notifySymbologyChange(){}}const D=1024;class U{constructor(e){this._getSymbologyCandidates=e,this._candidatesCache=new $(D),this._cacheVersion=0}async fetch(e,t){if(e.length===0)return[];const n=[],o=[],i=this._candidatesCache;for(const c of e){const u=m(c),l=i.get(u);if(l)for(const p of l)o.push(g(p));else n.push(c),i.put(u,[],1)}if(n.length===0)return o;const a=this._cacheVersion,{candidates:r,sourceCandidateIndices:h}=await this._getSymbologyCandidates(n,t);if(x(t),a!==this._cacheVersion)return this.fetch(e,t);const d=[],{length:f}=r;for(let c=0;c<f;++c){const u=r[c],l=m(n[h[c]]),p=i.get(l);p.push(u),i.put(l,p,p.length),d.push(g(u))}return o.concat(d)}notifySymbologyChange(){this._candidatesCache.clear(),this._cacheVersion++}}function m(s){switch(s.type){case"vertex":{const{objectId:e,target:t}=s,n=`${e}-vertex-${t.x}-${t.y}-${t.z??0}`;return y(n).toString()}case"edge":{const{objectId:e,start:t,end:n}=s,o=`${e}-edge-${t.x}-${t.y}-${t.z??0}-to-${n.x}-${n.y}-${n.z??0}`;return y(o).toString()}default:return""}}export{Y as a,Z as n,N as r};
