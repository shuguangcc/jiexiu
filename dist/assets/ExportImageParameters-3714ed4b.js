import{e as o,y as a,n as f,m as p}from"./cast-a534ae90.js";import{a as d}from"./HandleOwner-2edbba46.js";import{r as b}from"./typedArrayUtil-d9bc5fbd.js";import{t as g}from"./LayerFloorInfo-e7c896e5.js";import"./ensureType-25b8cc06.js";import{g as S}from"./OperationalLayer-1dad72ac.js";import{i as v}from"./sublayerUtils-eea48c01.js";function $(e){var s;const r=e.layer;return"floorInfo"in r&&((s=r.floorInfo)!=null&&s.floorField)&&"floors"in e.view?h(e.view.floors,r.floorInfo.floorField):null}function m(e,r){var s;return"floorInfo"in r&&((s=r.floorInfo)!=null&&s.floorField)?h(e,r.floorInfo.floorField):null}function h(e,r){if(!(e!=null&&e.length))return null;const s=e.filter(t=>t!=="").map(t=>`'${t}'`);return s.push("''"),`${r} IN (${s.join(",")}) OR ${r} IS NULL`}const L={visible:"visibleSublayers",definitionExpression:"layerDefs",labelingInfo:"hasDynamicLayers",labelsVisible:"hasDynamicLayers",opacity:"hasDynamicLayers",minScale:"visibleSublayers",maxScale:"visibleSublayers",renderer:"hasDynamicLayers",source:"hasDynamicLayers"};let l=class extends d(p){constructor(e){super(e),this.floors=null,this.scale=0}destroy(){this.layer=null}get dynamicLayers(){if(!this.hasDynamicLayers)return null;const e=this.visibleSublayers.map(r=>{const s=m(this.floors,r);return r.toExportImageJSON(s)});return e.length?JSON.stringify(e):null}get hasDynamicLayers(){return this.layer&&v(this.visibleSublayers,this.layer.serviceSublayers,this.layer.gdbVersion)}set layer(e){this._get("layer")!==e&&(this._set("layer",e),this.handles.remove("layer"),e&&this.handles.add([e.allSublayers.on("change",()=>this.notifyChange("visibleSublayers")),e.on("sublayer-update",r=>this.notifyChange(L[r.propertyName]))],"layer"))}get layers(){const e=this.visibleSublayers;return e?e.length?"show:"+e.map(r=>r.id).join(","):"show:-1":null}get layerDefs(){var s;const e=!!((s=this.floors)!=null&&s.length),r=this.visibleSublayers.filter(t=>t.definitionExpression!=null||e&&t.floorInfo!=null);return r.length?JSON.stringify(r.reduce((t,i)=>{const n=m(this.floors,i),y=g(n,i.definitionExpression);return b(y)&&(t[i.id]=y),t},{})):null}get version(){this.commitProperty("layers"),this.commitProperty("layerDefs"),this.commitProperty("dynamicLayers"),this.commitProperty("timeExtent");const e=this.layer;return e&&(e.commitProperty("dpi"),e.commitProperty("imageFormat"),e.commitProperty("imageTransparency"),e.commitProperty("gdbVersion")),(this._get("version")||0)+1}get visibleSublayers(){const e=[];if(!this.layer)return e;const r=this.layer.sublayers,s=i=>{const n=this.scale,y=n===0,u=i.minScale===0||n<=i.minScale,c=i.maxScale===0||n>=i.maxScale;i.visible&&(y||u&&c)&&(i.sublayers?i.sublayers.forEach(s):e.unshift(i))};r&&r.forEach(s);const t=this._get("visibleSublayers");return!t||t.length!==e.length||t.some((i,n)=>e[n]!==i)?e:t}toJSON(){const e=this.layer;let r={dpi:e.dpi,format:e.imageFormat,transparent:e.imageTransparency,gdbVersion:e.gdbVersion||null};return this.hasDynamicLayers&&this.dynamicLayers?r.dynamicLayers=this.dynamicLayers:r={...r,layers:this.layers,layerDefs:this.layerDefs},r}};o([a({readOnly:!0})],l.prototype,"dynamicLayers",null),o([a()],l.prototype,"floors",void 0),o([a({readOnly:!0})],l.prototype,"hasDynamicLayers",null),o([a()],l.prototype,"layer",null),o([a({readOnly:!0})],l.prototype,"layers",null),o([a({readOnly:!0})],l.prototype,"layerDefs",null),o([a({type:Number})],l.prototype,"scale",void 0),o([a(S)],l.prototype,"timeExtent",void 0),o([a({readOnly:!0})],l.prototype,"version",null),o([a({readOnly:!0})],l.prototype,"visibleSublayers",null),l=o([f("esri.layers.mixins.ExportImageParameters")],l);export{l as c,m as n,$ as o};
