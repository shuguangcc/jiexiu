import{_ as O}from"./preload-helper-101896b7.js";function q(t){return typeof t=="function"}function z(t,r,n,e){return q(t)?t(r,n,e):t}function D(t){return[t.r,t.g,t.b,t.a]}const v=` /-,
`;function L(t){let r=t.length;for(;r--;)if(!v.includes(t.charAt(r)))return!1;return!0}function B(t,r){const n=[];let e=0,o=-1;do if(o=t.indexOf("[",e),o>=e){if(o>e){const i=t.substr(e,o-e);n.push([i,null,L(i)])}if(e=o+1,o=t.indexOf("]",e),o>=e){if(o>e){const i=r[t.substr(e,o-e)];i&&n.push([null,i,!1])}e=o+1}}while(o!==-1);if(e<t.length-1){const i=t.substr(e);n.push([i,null,L(i)])}return n}function E(t,r,n){let e="",o=null;for(const i of r){const[M,u,f]=i;if(M)f?o=M:(o&&(e+=o,o=null),e+=M);else{const C=t.attributes[u];C&&(o&&(e+=o,o=null),e+=C)}}return R(e,n)}function N(t,r,n){const e=B(r,t);return o=>E(o,e,n)}function R(t,r){switch(typeof t!="string"&&(t=String(t)),r){case"LowerCase":return t.toLowerCase();case"Allcaps":return t.toUpperCase();default:return t}}function U(t,r,n,e,o,i,M=!0){const u=r/o,f=n/i,C=Math.ceil(u/2),F=Math.ceil(f/2);for(let c=0;c<i;c++)for(let y=0;y<o;y++){const m=4*(y+(M?i-c-1:c)*o);let l=0,b=0,I=0,h=0,S=0,g=0,k=0;const G=(c+.5)*f;for(let d=Math.floor(c*f);d<(c+1)*f;d++){const P=Math.abs(G-(d+.5))/F,T=(y+.5)*u,_=P*P;for(let p=Math.floor(y*u);p<(y+1)*u;p++){let s=Math.abs(T-(p+.5))/C;const a=Math.sqrt(_+s*s);a>=-1&&a<=1&&(l=2*a*a*a-3*a*a+1,l>0&&(s=4*(p+d*r),k+=l*t[s+3],I+=l,t[s+3]<255&&(l=l*t[s+3]/250),h+=l*t[s],S+=l*t[s+1],g+=l*t[s+2],b+=l))}}e[m]=h/b,e[m+1]=S/b,e[m+2]=g/b,e[m+3]=k/I}}function j(t){return t?{r:t[0],g:t[1],b:t[2],a:t[3]/255}:{r:0,g:0,b:0,a:0}}function H(t){var r;return((r=t.data)==null?void 0:r.symbol)??null}function J(t){return t.type==="CIMVectorMarker"||t.type==="CIMPictureMarker"||t.type==="CIMBarChartMarker"||t.type==="CIMCharacterMarker"||t.type==="CIMPieChartMarker"||t.type==="CIMStackedBarChartMarker"}function W(t){return t.type==="CIMGradientStroke"||t.type==="CIMPictureStroke"||t.type==="CIMSolidStroke"}function K(t){return t.type==="CIMGradientFill"||t.type==="CIMHatchFill"||t.type==="CIMPictureFill"||t.type==="CIMSolidFill"||t.type==="CIMWaterFill"}function Q(t){return t.type==="CIMMarkerPlacementAlongLineRandomSize"||t.type==="CIMMarkerPlacementAlongLineSameSize"||t.type==="CIMMarkerPlacementAlongLineVariableSize"||t.type==="CIMMarkerPlacementAtExtremities"||t.type==="CIMMarkerPlacementAtMeasuredUnits"||t.type==="CIMMarkerPlacementAtRatioPositions"||t.type==="CIMMarkerPlacementOnLine"||t.type==="CIMMarkerPlacementOnVertices"}const X=(t,r=0)=>isNaN(t)||t==null?r:t,Y=t=>{if(!t)return!1;for(const r of t)switch(r.type){case"CIMGeometricEffectBuffer":case"CIMGeometricEffectOffset":return!0}return!1};function Z(){return O(()=>import("./geometryEngineJSON-a45b7108.js"),["assets/geometryEngineJSON-a45b7108.js","assets/geometryEngineBase-3dd302e0.js","assets/geometryEngineJSON-45c195fe.js","assets/json-48e3ea08.js"])}function $(t){if(!t)return"normal";switch(t.toLowerCase()){case"italic":return"italic";case"oblique":return"oblique";default:return"normal"}}function tt(t){if(!t)return"normal";switch(t.toLowerCase()){case"bold":return"bold";case"bolder":return"bolder";case"lighter":return"lighter";default:return"normal"}}function rt(t){let r="",n="";if(t){const e=t.toLowerCase();e.includes("italic")?r="italic":e.includes("oblique")&&(r="oblique"),e.includes("bold")?n="bold":e.includes("light")&&(n="lighter")}return{style:r,weight:n}}function et(t){return t.underline?"underline":t.strikethrough?"line-through":"none"}function w(t){if(!t)return null;switch(t.type){case"CIMPolygonSymbol":if(t.symbolLayers)for(const r of t.symbolLayers){const n=w(r);if(n!=null)return n}break;case"CIMTextSymbol":return w(t.symbol);case"CIMSolidFill":return t.color}}function x(t){if(t)switch(t.type){case"CIMPolygonSymbol":case"CIMLineSymbol":if(t.symbolLayers)for(const r of t.symbolLayers){const n=x(r);if(n!==void 0)return n}break;case"CIMTextSymbol":return x(t.symbol);case"CIMSolidStroke":case"CIMSolidFill":return t.color}}function A(t){if(t)switch(t.type){case"CIMPolygonSymbol":case"CIMLineSymbol":if(t.symbolLayers)for(const r of t.symbolLayers){const n=A(r);if(n!==void 0)return n}break;case"CIMTextSymbol":return A(t.symbol);case"CIMSolidStroke":case"CIMGradientStroke":case"CIMPictureStroke":return t.width}}function nt(t){switch(t){case"Left":default:return"left";case"Right":return"right";case"Center":case"Justify":return"center"}}function ot(t){switch(t){case"Top":default:return"top";case"Center":return"middle";case"Baseline":return"baseline";case"Bottom":return"bottom"}}function it(t){return(t?Object.keys(t):[]).map(r=>({name:r,alias:r,type:typeof t[r]=="string"?"esriFieldTypeString":"esriFieldTypeDouble"}))}const lt=t=>t.includes("data:image/svg+xml");function st(t){if(!t)return null;switch(t.type){case"CIMPointSymbol":case"CIMTextSymbol":return"esriGeometryPoint";case"CIMLineSymbol":return"esriGeometryPolyline";case"CIMPolygonSymbol":return"esriGeometryPolygon";default:return null}}export{lt as A,K as C,it as F,st as G,$ as I,A as L,W as M,x as P,rt as S,U as a,X as b,N as c,Y as d,H as f,et as g,tt as h,B as i,w as k,E as l,Q as m,Z as p,D as r,R as s,z as t,j as u,nt as w,ot as x,J as y};
